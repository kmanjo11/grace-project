/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/index";
exports.ids = ["pages/index"];
exports.modules = {

/***/ "(pages-dir-node)/./api/apiClient.ts":
/*!**************************!*\
  !*** ./api/apiClient.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   API_ENDPOINTS: () => (/* binding */ API_ENDPOINTS),\n/* harmony export */   ApiError: () => (/* binding */ ApiError),\n/* harmony export */   ChatApi: () => (/* binding */ ChatApi),\n/* harmony export */   TradingApi: () => (/* binding */ TradingApi),\n/* harmony export */   addAuthHeaders: () => (/* binding */ addAuthHeaders),\n/* harmony export */   api: () => (/* binding */ api),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   getAuthToken: () => (/* binding */ getAuthToken),\n/* harmony export */   removeAuthToken: () => (/* binding */ removeAuthToken),\n/* harmony export */   saveAuthToken: () => (/* binding */ saveAuthToken)\n/* harmony export */ });\n/**\n * API Client for Grace App\n * \n * Provides standardized error handling and response processing for all API calls.\n */ // Front api constant and robust resolver for base URL\nconst API_BASE_URL = \"http://localhost:9000\" || 0;\n// Resolve base URL; prefer env var, else use relative path to avoid CORS issues\nconst resolveBaseUrl = ()=>{\n    const envUrl = \"http://localhost:9000\";\n    if (envUrl && envUrl.trim() !== '') {\n        return envUrl.endsWith('/') ? envUrl.slice(0, -1) : envUrl;\n    }\n    // Fallback to relative base to use same-origin or dev proxy\n    return '';\n};\n// Auth token key for localStorage\nconst AUTH_TOKEN_KEY = 'grace_auth_token';\nconst ALT_TOKEN_KEY = 'grace_token';\n// Get auth token from storage (checks both session and local, and both keys)\nconst getAuthToken = ()=>{\n    if (false) {}\n    return null;\n};\n// Save auth token to localStorage under both keys for compatibility\nconst saveAuthToken = (token)=>{\n    if (false) {}\n};\n// Remove auth token from both storage locations and keys\nconst removeAuthToken = ()=>{\n    if (false) {}\n};\n// Add auth headers to request options\nconst addAuthHeaders = (options = {})=>{\n    const token = getAuthToken();\n    if (token) {\n        return {\n            ...options,\n            headers: {\n                ...options.headers,\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json'\n            }\n        };\n    }\n    return options;\n};\n// API Error types\nclass ApiError extends Error {\n    statusCode;\n    data;\n    constructor(message, statusCode, data){\n        super(message);\n        this.name = 'ApiError';\n        this.statusCode = statusCode;\n        this.data = data;\n    }\n}\n// API configuration - use environment variable if available, otherwise use relative path\n// Ensure API_BASE_URL ends with a slash (kept for backward compatibility)\nconst getBaseUrl = ()=>{\n    const base = API_BASE_URL;\n    if (base && base.endsWith('/')) {\n        return base.slice(0, -1);\n    }\n    return base;\n};\n// API endpoints constants\nconst API_ENDPOINTS = {\n    AUTH: {\n        LOGIN: '/api/auth/login',\n        REGISTER: '/api/auth/register',\n        VERIFY_TOKEN: '/api/auth/verify',\n        LOGOUT: '/api/auth/logout',\n        REFRESH_TOKEN: '/auth/refresh-token',\n        FORGOT_PASSWORD: '/api/auth/forgot-password',\n        RESET_PASSWORD: '/api/auth/reset-password'\n    },\n    USER: {\n        PROFILE: '/api/user/profile',\n        LEVERAGE_POSITIONS: '/api/user/leverage_positions',\n        SPOT_POSITIONS: '/api/user/spot_positions',\n        POSITION_HISTORY: '/api/user/position_history',\n        TRADE_HISTORY: '/api/user/trade_history',\n        LIMIT_ORDERS: '/api/limit-orders'\n    },\n    WALLET: {\n        DATA: '/api/wallet/data',\n        INFO: '/api/wallet/info',\n        MANGO_BALANCE: '/api/wallet/mango-balance',\n        GENERATE: '/api/wallet/generate',\n        SEND: '/api/wallet/send',\n        CONNECT_PHANTOM: '/api/wallet/phantom/connect',\n        COMPLETE_PHANTOM: '/api/wallet/phantom/callback',\n        DISCONNECT_PHANTOM: '/api/wallet/phantom/disconnect',\n        // Map BALANCE to INFO since the server uses /api/wallet/info endpoint to get wallet balance\n        BALANCE: '/api/wallet/info',\n        TRANSACTIONS: '/api/wallet/transactions'\n    },\n    CHAT: {\n        // Get all chat sessions for the authenticated user\n        SESSIONS: '/api/chat/sessions',\n        // Create a new chat session\n        NEW_SESSION: '/api/chat/session/new',\n        // Get chat history for a specific session\n        HISTORY: (sessionId)=>`/api/chat/history/${sessionId}`,\n        // Send a chat message\n        MESSAGE: '/api/chat/message'\n    },\n    SOCIAL: {\n        // Core social media endpoints\n        SENTIMENT: '/api/social/sentiment',\n        TRENDING: '/api/social/trending-topics',\n        INFLUENTIAL: '/api/social/influential',\n        TWEETS: '/api/social/tweets'\n    },\n    MANGO: {\n        // Mango Markets API endpoints\n        BASE: '/api/mango',\n        OHLCV: '/api/mango/ohlcv',\n        MARKETS: '/api/mango/markets',\n        ORDER_BOOK: '/api/mango/orderbook',\n        TRADES: '/api/mango/trades',\n        MARKET_STATS: '/api/mango/market-stats',\n        COMMUNITIES: '/api/social/communities',\n        ENTITIES: '/api/social/entities',\n        FEED: '/api/social/feed',\n        CONNECTIONS: '/api/social/connections'\n    },\n    TRADING: {\n        EXECUTE: '/api/trading/execute',\n        CONFIRM: '/api/trading/confirm',\n        SMART_SETTINGS: '/api/trading/smart-settings',\n        TOKENS: '/api/trading/tokens',\n        PRICE_CHART: '/api/trading/price-chart',\n        SWAP: '/api/trading/swap',\n        SELL_POSITION: '/api/trading/sell-position',\n        USER_POSITIONS: '/api/user/positions',\n        LEVERAGE_POSITIONS: '/api/user/leverage_positions',\n        SPOT_POSITIONS: '/api/user/spot_positions'\n    },\n    SETTINGS: {\n        // Updated to match backend implementation\n        PROFILE: '/api/user/settings',\n        NOTIFICATIONS: '/api/settings/notifications',\n        // Additional backend settings endpoint\n        TRADING_SETTINGS: '/api/trading/smart-settings'\n    }\n};\n/**\n * Normalize different API response formats to a consistent structure\n * \n * This prioritizes API response formats in a predictable order:\n * 1. Auth responses with token and user\n * 2. Standard success responses with data\n * 3. Results-based responses\n * 4. Default pass-through\n */ function normalizeResponse(responseData) {\n    // Handle auth responses with token\n    if (responseData && typeof responseData === 'object' && 'token' in responseData) {\n        // Save the token when received in the response\n        saveAuthToken(responseData.token);\n        // Remove token from response data to avoid exposing it\n        const { token, ...rest } = responseData;\n        return rest;\n    }\n    // Handle standard success response format\n    if (responseData && typeof responseData === 'object' && 'success' in responseData) {\n        return responseData;\n    }\n    // Handle results-based response format\n    if (responseData && typeof responseData === 'object' && 'results' in responseData) {\n        return {\n            success: true,\n            data: responseData.results,\n            ...responseData\n        };\n    }\n    // Default: pass through the response data as-is\n    // Some endpoints return results in a 'results' property\n    if (responseData.results) {\n        return responseData.results;\n    }\n    // PRIORITY 4: Handle direct data format without success flag\n    // Some old endpoints return {data: {...}} directly\n    if (responseData.data && responseData.success === undefined) {\n        return responseData.data;\n    }\n    // Fall back to returning the entire response as is\n    return responseData;\n}\n/**\n * Process the API response and handle errors consistently\n */ async function processResponse(response) {\n    try {\n        // Clone the response so we can read it multiple times\n        const responseClone = response.clone();\n        // Read body ONCE as text, then attempt to parse JSON from it.\n        const bodyText = await response.text();\n        let data = undefined;\n        try {\n            data = bodyText ? JSON.parse(bodyText) : undefined;\n            // If we get a new token in the response, save it\n            if (data && data.token) {\n                saveAuthToken(data.token);\n            }\n        } catch (e) {\n            // Non-JSON body; treat as text error payload when not ok\n            if (!response.ok) {\n                return {\n                    success: false,\n                    error: bodyText || 'Invalid response format',\n                    statusCode: response.status,\n                    rawResponse: responseClone\n                };\n            }\n            // If OK status but non-JSON, pass raw text as data\n            return {\n                success: true,\n                data: bodyText,\n                statusCode: response.status,\n                rawResponse: responseClone\n            };\n        }\n        // Handle HTTP error status codes\n        if (!response.ok) {\n            // Do not perform global side effects here; let callers decide how to handle 401/403\n            return {\n                success: false,\n                error: data?.message || data?.error || `HTTP error ${response.status}`,\n                statusCode: response.status,\n                data,\n                rawResponse: responseClone\n            };\n        }\n        // Success case - normalize the response data\n        return {\n            success: true,\n            data: normalizeResponse(data),\n            statusCode: response.status,\n            rawResponse: responseClone\n        };\n    } catch (error) {\n        console.error('Error processing response:', error);\n        return {\n            success: false,\n            error: error instanceof Error ? error.message : 'Unknown error processing response',\n            rawResponse: response.clone()\n        };\n    }\n}\n/**\n * Make an API request with proper error handling\n */ async function apiRequest(endpoint, options = {}) {\n    try {\n        // Get base URL from environment or use robust fallback\n        const baseUrl = resolveBaseUrl();\n        const url = endpoint.startsWith('http') ? endpoint : `${baseUrl}${endpoint}`;\n        console.log('API Request:', {\n            baseUrl,\n            endpoint,\n            url\n        });\n        // Add auth headers to the request\n        const requestOptions = addAuthHeaders({\n            ...options,\n            credentials: 'include',\n            headers: {\n                ...options.headers,\n                'Content-Type': 'application/json'\n            }\n        });\n        console.log('Making fetch request to:', url, 'with options:', requestOptions);\n        const response = await fetch(url, requestOptions);\n        console.log('Response received:', response.status, response.statusText);\n        return await processResponse(response);\n    } catch (error) {\n        if (error instanceof ApiError) {\n            // Rethrow ApiError instances\n            throw error;\n        }\n        // Handle network errors\n        throw new ApiError(error instanceof Error ? error.message : 'Network error', 0);\n    }\n}\n// Convenience methods for common HTTP methods\nconst api = {\n    async get (endpoint, options = {}) {\n        return apiRequest(endpoint, {\n            ...options,\n            method: 'GET'\n        });\n    },\n    async post (endpoint, data, options = {}) {\n        return apiRequest(endpoint, {\n            ...options,\n            method: 'POST',\n            body: JSON.stringify(data)\n        });\n    },\n    async put (endpoint, data, options = {}) {\n        return apiRequest(endpoint, {\n            ...options,\n            method: 'PUT',\n            body: JSON.stringify(data)\n        });\n    },\n    async delete (endpoint, options = {}) {\n        return apiRequest(endpoint, {\n            ...options,\n            method: 'DELETE'\n        });\n    }\n};\n// Chat API methods\nconst ChatApi = {\n    /**\n   * Get all chat sessions for the authenticated user\n   * @returns Promise with list of chat sessions\n   */ /**\n   * Get all chat sessions for the authenticated user\n   * @param limit Optional limit for pagination\n   * @param offset Optional offset for pagination\n   * @returns Promise with list of chat sessions and pagination info\n   */ async getSessions (limit, offset) {\n        try {\n            const params = new URLSearchParams();\n            if (limit) params.append('limit', limit.toString());\n            if (offset) params.append('offset', offset.toString());\n            const query = params.toString();\n            const url = query ? `${API_ENDPOINTS.CHAT.SESSIONS}?${query}` : API_ENDPOINTS.CHAT.SESSIONS;\n            const response = await api.get(url);\n            return {\n                sessions: response.data?.data || [],\n                total: response.data?.total || 0,\n                has_more: response.data?.has_more || false\n            };\n        } catch (error) {\n            const errorMessage = error.response?.data?.error || 'Failed to fetch chat sessions';\n            const usingFallback = error.response?.data?.using_fallback;\n            console.error('Error fetching chat sessions:', errorMessage, {\n                usingFallback\n            });\n            throw new Error(errorMessage);\n        }\n    },\n    /**\n   * Create a new chat session\n   * @param title Optional title for the new session\n   * @returns Promise with the new session ID\n   */ async createSession (title) {\n        try {\n            const response = await api.post(API_ENDPOINTS.CHAT.NEW_SESSION, {\n                title: title || 'New Chat'\n            });\n            if (!response.data?.session_id) {\n                throw new Error('Invalid response format from server');\n            }\n            return {\n                session_id: response.data.session_id\n            };\n        } catch (error) {\n            console.error('Error creating chat session:', error);\n            throw new Error('Failed to create chat session');\n        }\n    },\n    /**\n   * Get chat history for a specific session\n   * @param sessionId ID of the chat session\n   * @returns Promise with chat history\n   */ /**\n   * Get chat history for a specific session\n   * @param sessionId ID of the chat session\n   * @param limit Optional limit for pagination\n   * @param offset Optional offset for pagination\n   * @returns Promise with chat history and pagination info\n   */ async getHistory (sessionId, limit, offset) {\n        try {\n            const params = new URLSearchParams();\n            if (limit) params.append('limit', limit.toString());\n            if (offset) params.append('offset', offset.toString());\n            const query = params.toString();\n            const url = query ? `${API_ENDPOINTS.CHAT.HISTORY(sessionId)}?${query}` : API_ENDPOINTS.CHAT.HISTORY(sessionId);\n            const response = await api.get(url);\n            return {\n                messages: response.data?.data || [],\n                total: response.data?.total || 0,\n                has_more: response.data?.has_more || false\n            };\n        } catch (error) {\n            const errorMessage = error.response?.data?.error || 'Failed to fetch chat history';\n            const usingFallback = error.response?.data?.using_fallback;\n            console.error('Error fetching chat history:', errorMessage, {\n                usingFallback\n            });\n            throw new Error(errorMessage);\n        }\n    },\n    /**\n   * Send a message in a chat session\n   * @param sessionId ID of the chat session\n   * @param message The message content\n   * @returns Promise with the assistant's response\n   */ /**\n   * Send a message in a chat session\n   * @param sessionId ID of the chat session\n   * @param message The message content\n   * @param metadata Optional metadata to include with the message\n   * @returns Promise with the assistant's response\n   */ async sendMessage (sessionId, message, metadata) {\n        try {\n            const response = await api.post(API_ENDPOINTS.CHAT.MESSAGE, {\n                session_id: sessionId,\n                message,\n                timestamp: new Date().toISOString(),\n                ...metadata && {\n                    metadata\n                }\n            });\n            if (!response.data || !response.data.data) {\n                throw new Error('Invalid response format from server');\n            }\n            return {\n                response: response.data.data.response || '',\n                metadata: response.data.data.metadata,\n                session_id: response.data.data.session_id || sessionId,\n                message_id: response.data.data.message_id || `msg_${Date.now()}`,\n                timestamp: response.data.data.timestamp || new Date().toISOString()\n            };\n        } catch (error) {\n            const errorMessage = error.response?.data?.error || 'Failed to send chat message';\n            const usingFallback = error.response?.data?.using_fallback;\n            console.error('Error sending chat message:', errorMessage, {\n                usingFallback\n            });\n            throw new Error(errorMessage);\n        }\n    }\n};\n// Trading API methods\nconst TradingApi = {\n    /**\n   * Execute a trade (first step of two-phase trade execution)\n   * @param params Trade execution parameters\n   * @returns Trade execution result with confirmation ID if confirmation required\n   */ async executeTrade (params) {\n        try {\n            const response = await api.post('/api/trading/execute', {\n                ...params,\n                amount: params.amount.toString()\n            });\n            return response.data;\n        } catch (error) {\n            console.error('Trade execution failed:', error);\n            throw new Error(error.response?.data?.error || 'Trade execution failed');\n        }\n    },\n    /**\n   * Confirm a pending trade (second step of two-phase trade execution)\n   * @param confirmationId The confirmation ID from executeTrade response\n   * @returns Final trade execution result\n   */ async confirmTrade (confirmationId) {\n        try {\n            const response = await api.post('/api/trading/confirm', {\n                confirmation_id: confirmationId\n            });\n            return response.data;\n        } catch (error) {\n            console.error('Trade confirmation failed:', error);\n            throw new Error(error.response?.data?.error || 'Trade confirmation failed');\n        }\n    },\n    /**\n   * Close an existing position (leverage or spot)\n   * @param params Position parameters to close\n   * @returns Position closing result\n   */ async closePosition (params) {\n        try {\n            const response = await api.post('/api/trading/sell-position', params);\n            return response.data;\n        } catch (error) {\n            console.error('Position closing failed:', error);\n            throw new Error(error.response?.data?.error || 'Failed to close position');\n        }\n    },\n    /**\n   * Sell a spot token for another token (usually USDC)\n   * @param params Token selling parameters\n   * @returns Token selling result\n   */ async sellToken (params) {\n        try {\n            const response = await api.post('/api/trading/sell-token', {\n                ...params,\n                amount: params.amount.toString()\n            });\n            return response.data;\n        } catch (error) {\n            console.error('Token selling failed:', error);\n            throw new Error(error.response?.data?.error || 'Failed to sell token');\n        }\n    },\n    /**\n   * Sell or close a position (full or partial)\n   * @param params Position selling parameters\n   * @returns Result of the position sale\n   */ async sellPosition (params) {\n        try {\n            const requestData = {\n                ...params\n            };\n            // If percentage is provided, adjust the amount accordingly\n            if (params.percentage && params.percentage > 0 && params.percentage < 100) {\n                requestData.amount = params.amount * params.percentage / 100;\n            }\n            const response = await api.post(API_ENDPOINTS.TRADING.SELL_POSITION, requestData);\n            return response.data;\n        } catch (error) {\n            console.error('Failed to close position:', error);\n            throw new Error(error.response?.data?.error || 'Failed to close position');\n        }\n    },\n    /**\n   * Get user's leverage positions from Mango V3\n   * @returns User's leverage positions with success/error status\n   */ async getUserLeveragePositions () {\n        try {\n            const response = await api.get(API_ENDPOINTS.USER.LEVERAGE_POSITIONS);\n            // If response already has the right format, return it directly\n            if (response.data && typeof response.data === 'object' && 'success' in response.data) {\n                return response.data;\n            }\n            // Otherwise format according to Mango V3 spec\n            const positions = Array.isArray(response.data) ? response.data : [];\n            return {\n                success: true,\n                positions,\n                metadata: {\n                    total_positions: positions.length,\n                    timestamp: new Date().toISOString()\n                }\n            };\n        } catch (error) {\n            console.error('Error fetching leverage positions:', error);\n            return {\n                success: false,\n                positions: [],\n                error: {\n                    message: error instanceof Error ? error.message : 'Failed to fetch leverage positions',\n                    code: 'POSITION_FETCH_ERROR'\n                }\n            };\n        }\n    },\n    /**\n   * Get user's spot positions from wallet balances\n   * @returns User's spot positions with success/error status\n   */ async getUserSpotPositions () {\n        try {\n            const response = await api.get(API_ENDPOINTS.USER.SPOT_POSITIONS);\n            // If response already has the right format, return it directly\n            if (response.data && typeof response.data === 'object' && 'success' in response.data) {\n                return response.data;\n            }\n            // Otherwise format according to Mango V3 spec\n            const positions = Array.isArray(response.data) ? response.data : [];\n            return {\n                success: true,\n                positions,\n                metadata: {\n                    total_positions: positions.length,\n                    timestamp: new Date().toISOString()\n                }\n            };\n        } catch (error) {\n            console.error('Error fetching spot positions:', error);\n            return {\n                success: false,\n                positions: [],\n                error: {\n                    message: error instanceof Error ? error.message : 'Failed to fetch spot positions',\n                    code: 'POSITION_FETCH_ERROR'\n                }\n            };\n        }\n    },\n    /**\n   * Get position history for a user with pagination and filtering\n   * @param params Query parameters for filtering position history\n   * @returns Promise with position history data\n   */ getPositionHistory: async (params)=>{\n        try {\n            // Build query parameters\n            const queryParams = new URLSearchParams();\n            if (params?.market) queryParams.append('market', params.market);\n            if (params?.startTime) queryParams.append('start_time', String(params.startTime));\n            if (params?.endTime) queryParams.append('end_time', String(params.endTime));\n            if (params?.interval) queryParams.append('interval', params.interval);\n            if (params?.includePnl !== undefined) queryParams.append('include_pnl', String(params.includePnl));\n            if (params?.includeLivePnl) queryParams.append('include_live_pnl', 'true');\n            if (params?.cursor) queryParams.append('cursor', params.cursor);\n            if (params?.limit) queryParams.append('limit', String(params.limit));\n            const response = await fetch(`${API_ENDPOINTS.USER.POSITION_HISTORY}?${queryParams.toString()}`, {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${getAuthToken()}`\n                }\n            });\n            const data = await response.json();\n            // Handle error responses\n            if (!response.ok) {\n                const errorData = data?.error || {};\n                throw new ApiError(errorData.message || `HTTP error! status: ${response.status}`, response.status, {\n                    code: errorData.code || 'api_error',\n                    status: errorData.status || response.status,\n                    timestamp: errorData.timestamp || new Date().toISOString(),\n                    ...errorData.details && {\n                        details: errorData.details\n                    }\n                });\n            }\n            // Transform the successful response to match the PositionHistoryResponse type\n            return {\n                success: data.success,\n                position_history: data.position_history || [],\n                pnl_over_time: data.pnl_over_time || [],\n                pagination: data.pagination || {\n                    has_more: data.metadata?.has_more || false,\n                    next_cursor: data.metadata?.cursor,\n                    limit: params?.limit || 100,\n                    total: data.metadata?.total || 0\n                },\n                metadata: {\n                    user_identifier: data.metadata?.user_identifier || '',\n                    market: params?.market || 'all',\n                    start_time: data.metadata?.start_time || new Date().toISOString(),\n                    end_time: data.metadata?.end_time || new Date().toISOString(),\n                    interval: params?.interval || '1d',\n                    total_positions: data.metadata?.total || 0,\n                    has_more: data.metadata?.has_more || false,\n                    cursor: data.metadata?.cursor\n                }\n            };\n        } catch (error) {\n            console.error('Error fetching position history:', error);\n            // Handle ApiError instances\n            if (error instanceof ApiError) {\n                return {\n                    success: false,\n                    position_history: [],\n                    pnl_over_time: [],\n                    pagination: {\n                        has_more: false,\n                        next_cursor: undefined,\n                        limit: params?.limit || 100,\n                        total: 0\n                    },\n                    metadata: {\n                        user_identifier: '',\n                        market: params?.market || 'all',\n                        start_time: new Date().toISOString(),\n                        end_time: new Date().toISOString(),\n                        interval: params?.interval || '1d',\n                        total_positions: 0,\n                        has_more: false\n                    },\n                    error: error.message,\n                    error_details: error.data\n                };\n            }\n            // Handle other types of errors\n            return {\n                success: false,\n                position_history: [],\n                pnl_over_time: [],\n                pagination: {\n                    has_more: false,\n                    next_cursor: undefined,\n                    limit: params?.limit || 100,\n                    total: 0\n                },\n                metadata: {\n                    user_identifier: '',\n                    market: params?.market || 'all',\n                    start_time: new Date().toISOString(),\n                    end_time: new Date().toISOString(),\n                    interval: params?.interval || '1d',\n                    total_positions: 0,\n                    has_more: false\n                },\n                error: error instanceof Error ? error.message : 'Unknown error',\n                error_details: {\n                    code: 'unexpected_error',\n                    status: 500,\n                    timestamp: new Date().toISOString()\n                }\n            };\n        }\n    },\n    /**\n   * Get detailed position history for a specific position\n   * @param positionId ID of the position to get history for\n   * @param params Additional query parameters\n   * @returns Promise with detailed position history\n   */ getPositionDetails: async (positionId, params)=>{\n        try {\n            // Convert params to query string\n            const queryParams = new URLSearchParams({\n                positionId\n            });\n            if (params?.startTime) queryParams.append('startTime', String(params.startTime));\n            if (params?.endTime) queryParams.append('endTime', String(params.endTime));\n            if (params?.interval) queryParams.append('interval', params.interval);\n            const endpoint = `${API_ENDPOINTS.USER.POSITION_HISTORY}/details?${queryParams.toString()}`;\n            // Create headers object with proper typing\n            const authHeaders = addAuthHeaders();\n            const headers = new Headers();\n            headers.append('Content-Type', 'application/json');\n            // Add auth headers if they exist\n            if (authHeaders) {\n                Object.entries(authHeaders).forEach(([key, value])=>{\n                    if (value) headers.append(key, value);\n                });\n            }\n            const response = await api.get(endpoint, {\n                headers\n            });\n            if (!response.success) {\n                throw new Error(response.error || 'Failed to fetch position details');\n            }\n            return response.data.data;\n        } catch (error) {\n            console.error('Error fetching position details:', error);\n            throw error;\n        }\n    }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (api);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./api/apiClient.ts\n");

/***/ }),

/***/ "(pages-dir-node)/./components/AuthContext.tsx":
/*!************************************!*\
  !*** ./components/AuthContext.tsx ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthProvider: () => (/* binding */ AuthProvider),\n/* harmony export */   useAuth: () => (/* binding */ useAuth)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _api_apiClient__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../api/apiClient */ \"(pages-dir-node)/./api/apiClient.ts\");\n/* harmony import */ var _utils_devAuth__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/devAuth */ \"(pages-dir-node)/./utils/devAuth.ts\");\n/* harmony import */ var _utils_authUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/authUtils */ \"(pages-dir-node)/./utils/authUtils.ts\");\n// src/ui/components/AuthContext.tsx\n\n\n\n\n// Import admin backdoor utilities\n\n// Import standardized auth utils\n\nconst TOKEN_EXPIRY_KEY = 'grace_token_expiry';\nconst REFRESH_TOKEN_KEY = 'grace_refresh_token';\nconst TOKEN_VERIFY_INTERVAL = 60000; // Check token validity every 60 seconds\n// Improved session persistence utility to avoid conflicts with form state\nconst SessionPersistence = {\n    STORAGE_KEY: 'GRACE_SESSION_SNAPSHOT',\n    // Safely capture session snapshot with minimal data to avoid interference\n    captureSnapshot (user, token) {\n        try {\n            if (!user || !token) {\n                this.clearSnapshot();\n                return;\n            }\n            // Store only essential user identification data\n            // Avoid storing complete state that might conflict with forms\n            const snapshot = {\n                timestamp: Date.now(),\n                user: {\n                    id: user.id,\n                    username: user.username,\n                    email: user.email\n                },\n                // Don't store the actual token, just indicate authentication\n                authenticated: true\n            };\n            // Use sessionStorage instead of localStorage to avoid persisting between browser sessions\n            // This helps prevent stale data from affecting forms on future visits\n            sessionStorage.setItem(this.STORAGE_KEY, JSON.stringify(snapshot));\n        } catch (error) {\n            console.warn('Failed to capture session snapshot', error);\n        // Silently fail - don't let snapshot errors affect the application\n        }\n    },\n    // Retrieve session snapshot with validation\n    retrieveSnapshot () {\n        try {\n            const snapshotStr = sessionStorage.getItem(this.STORAGE_KEY);\n            if (!snapshotStr) return {\n                user: null,\n                token: null\n            };\n            const snapshot = JSON.parse(snapshotStr);\n            // Validate snapshot with expiration check (30 minutes)\n            const MAX_AGE = 30 * 60 * 1000; // 30 minutes in milliseconds\n            const isExpired = Date.now() - (snapshot.timestamp || 0) > MAX_AGE;\n            if (snapshot && snapshot.user && !isExpired) {\n                return {\n                    user: snapshot.user,\n                    // Get actual token from authUtils to ensure consistency\n                    token: (0,_utils_authUtils__WEBPACK_IMPORTED_MODULE_4__.getAuthToken)()\n                };\n            }\n            // Clear expired snapshot\n            if (isExpired) this.clearSnapshot();\n            return {\n                user: null,\n                token: null\n            };\n        } catch (error) {\n            console.warn('Failed to retrieve session snapshot', error);\n            this.clearSnapshot(); // Clear invalid snapshot\n            return {\n                user: null,\n                token: null\n            };\n        }\n    },\n    // Clear session snapshot\n    clearSnapshot () {\n        try {\n            sessionStorage.removeItem(this.STORAGE_KEY);\n        } catch (error) {\n            console.warn('Failed to clear session snapshot', error);\n        }\n    }\n};\nconst AuthContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(null);\nfunction AuthProvider({ children }) {\n    const [user, setUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [isAuthenticated, setIsAuthenticated] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Use state for token to ensure it's updated when changed\n    const [token, setToken] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)((0,_utils_authUtils__WEBPACK_IMPORTED_MODULE_4__.getAuthToken)());\n    // Add flag to prevent verification immediately after login\n    const [skipNextVerification, setSkipNextVerification] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Update token state whenever auth state changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"AuthProvider.useEffect\": ()=>{\n            setToken((0,_utils_authUtils__WEBPACK_IMPORTED_MODULE_4__.getAuthToken)());\n        }\n    }[\"AuthProvider.useEffect\"], [\n        isAuthenticated\n    ]);\n    // Admin backdoor for quick access\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"AuthProvider.useEffect\": ()=>{\n            // Check if we should use the admin backdoor\n            if ((0,_utils_devAuth__WEBPACK_IMPORTED_MODULE_3__.hasAdminBypass)() && !isAuthenticated && !token) {\n                (0,_utils_devAuth__WEBPACK_IMPORTED_MODULE_3__.bypassLogin)(login);\n            }\n        }\n    }[\"AuthProvider.useEffect\"], []);\n    // FIXED: Stabilized verification on mount and periodic checks\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"AuthProvider.useEffect\": ()=>{\n            let isMounted = true;\n            const verifyOnMount = {\n                \"AuthProvider.useEffect.verifyOnMount\": async ()=>{\n                    // Skip initial verification if there's no token\n                    if (false) {}\n                    console.log('AuthContext: Verifying token on mount');\n                    // Verify token on component mount (force = true to bypass debouncing)\n                    await verifyToken(true);\n                    // Handle case where verification completed but component was unmounted\n                    if (isMounted) setLoading(false);\n                }\n            }[\"AuthProvider.useEffect.verifyOnMount\"];\n            verifyOnMount();\n            // FIXED: Increased interval to reduce verification frequency\n            const interval = setInterval({\n                \"AuthProvider.useEffect.interval\": ()=>{\n                    if (!skipNextVerification) {\n                        verifyToken(); // Use debounced version for periodic checks\n                    } else {\n                        // Reset skip flag after using it once\n                        setSkipNextVerification(false);\n                    }\n                }\n            }[\"AuthProvider.useEffect.interval\"], 120000); // FIXED: Increased to 2 minutes to reduce server load\n            return ({\n                \"AuthProvider.useEffect\": ()=>{\n                    isMounted = false;\n                    clearInterval(interval);\n                }\n            })[\"AuthProvider.useEffect\"];\n        }\n    }[\"AuthProvider.useEffect\"], []);\n    // FIXED: Add debouncing to prevent rapid verification calls\n    const verifyTokenDebounced = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const lastVerifyAttempt = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(0);\n    // Verify user token with backend (FIXED: Added debouncing and better error handling)\n    const verifyToken = async (force = false)=>{\n        // If no token exists, there's nothing to verify\n        const token = (0,_utils_authUtils__WEBPACK_IMPORTED_MODULE_4__.getAuthToken)();\n        if (!token) {\n            console.log('AuthContext: No token to verify');\n            setIsAuthenticated(false);\n            setUser(null);\n            setLoading(false);\n            return false;\n        }\n        // FIXED: Debounce verification calls to prevent rapid requests\n        const now = Date.now();\n        if (!force && now - lastVerifyAttempt.current < 5000) {\n            console.log('AuthContext: Skipping verification (debounced)');\n            return false;\n        }\n        lastVerifyAttempt.current = now;\n        try {\n            console.log('AuthContext: Verifying token with backend');\n            setLoading(true);\n            const response = await _api_apiClient__WEBPACK_IMPORTED_MODULE_2__[\"default\"].get(_api_apiClient__WEBPACK_IMPORTED_MODULE_2__.API_ENDPOINTS.AUTH.VERIFY_TOKEN);\n            if (response.success && response.data) {\n                // Token is valid, update user data\n                console.log('AuthContext: Token verified successfully');\n                setIsAuthenticated(true);\n                setUser(response.data.user || {});\n                setToken(token); // Ensure token state matches storage\n                return true;\n            }\n            // Non-success HTTP response\n            const status = response.statusCode ?? 0;\n            if (status === 401 || status === 403) {\n                console.log('AuthContext: Token verification failed with unauthorized status:', status);\n                clearAuthState();\n                return false;\n            }\n            // FIXED: For other errors (5xx, 0, etc.), keep current auth state to avoid flicker\n            console.warn('AuthContext: Verification non-success but not unauthorized. Preserving auth state.', {\n                status,\n                error: response.error\n            });\n            return false;\n        } catch (error) {\n            // FIXED: Network or unexpected error: preserve current auth state to prevent bouncing\n            const msg = error instanceof Error ? error.message : 'Unknown error';\n            console.error('Token verification error, preserving auth state:', msg);\n            return false;\n        } finally{\n            setLoading(false);\n        }\n    };\n    // Enhanced logging utility for authentication events\n    const logAuthEvent = (eventType, details = {})=>{\n        const timestamp = new Date().toISOString();\n        const logEntry = {\n            timestamp,\n            eventType,\n            ...details\n        };\n        // Optional: Send to backend logging service or store locally\n        console.log(JSON.stringify(logEntry));\n        // Store in local storage for potential debugging\n        try {\n            const authLogs = JSON.parse(localStorage.getItem('auth_logs') || '[]');\n            authLogs.push(logEntry);\n            // Keep only last 50 log entries\n            localStorage.setItem('auth_logs', JSON.stringify(authLogs.slice(-50)));\n        } catch (e) {\n            console.error('Failed to log authentication event', e);\n        }\n    };\n    // Check if user has a wallet and generate one if not available\n    const checkAndGenerateWallet = async ()=>{\n        try {\n            // Skip if not authenticated\n            if (!isAuthenticated || !token) {\n                return;\n            }\n            // First check if wallet already exists\n            const walletResponse = await _api_apiClient__WEBPACK_IMPORTED_MODULE_2__[\"default\"].get(_api_apiClient__WEBPACK_IMPORTED_MODULE_2__.API_ENDPOINTS.WALLET.INFO, {});\n            // If no wallet or wallet address is empty, generate a new one\n            if (!walletResponse.success || !walletResponse.data?.wallet?.wallet_address) {\n                console.log('No wallet found for user, generating a new internal wallet...');\n                // Generate a new wallet\n                const generateResponse = await _api_apiClient__WEBPACK_IMPORTED_MODULE_2__[\"default\"].post(_api_apiClient__WEBPACK_IMPORTED_MODULE_2__.API_ENDPOINTS.WALLET.GENERATE, {});\n                if (generateResponse.success) {\n                    console.log('Wallet generated successfully:', generateResponse.data?.wallet?.wallet_address);\n                    // You could set wallet info in state here if needed\n                    return generateResponse.data?.wallet;\n                } else {\n                    console.error('Failed to generate wallet:', generateResponse.error);\n                }\n            } else {\n                console.log('User wallet already exists:', walletResponse.data?.wallet?.wallet_address);\n                return walletResponse.data?.wallet;\n            }\n        } catch (error) {\n            console.error('Error checking/generating wallet:', error instanceof Error ? error.message : 'Unknown error');\n        }\n    };\n    // Implement token refresh functionality with exponential backoff\n    const refreshToken = async (retryCount = 0)=>{\n        const MAX_RETRIES = 3;\n        const BASE_DELAY = 1000; // 1 second initial delay\n        try {\n            logAuthEvent('TOKEN_REFRESH_ATTEMPT', {\n                retryCount\n            });\n            // Exponential backoff with jitter\n            if (retryCount > 0) {\n                const delay = BASE_DELAY * Math.pow(2, retryCount) * (1 + Math.random());\n                await new Promise((resolve)=>setTimeout(resolve, delay));\n            }\n            // Use the dedicated refresh token endpoint\n            const response = await _api_apiClient__WEBPACK_IMPORTED_MODULE_2__[\"default\"].post(_api_apiClient__WEBPACK_IMPORTED_MODULE_2__.API_ENDPOINTS.AUTH.REFRESH_TOKEN, {});\n            if (!response.success || !response.data?.token) {\n                throw new Error('Token refresh failed: Invalid response');\n            }\n            const { token, username } = response.data;\n            // Determine storage type based on where the current token is stored\n            const inLocalStorage = localStorage.getItem(_utils_authUtils__WEBPACK_IMPORTED_MODULE_4__.TOKEN_KEY) !== null;\n            const rememberMe = inLocalStorage; // If in localStorage, user wanted persistent login\n            // Store the new token with the same preference\n            await (0,_utils_authUtils__WEBPACK_IMPORTED_MODULE_4__.storeAuthToken)(token, rememberMe);\n            // Update local token state\n            setToken(token);\n            setIsAuthenticated(true);\n            // Optional: Update username if provided\n            if (username) {\n                setUser((prevUser)=>({\n                        ...prevUser,\n                        username\n                    }));\n            }\n            logAuthEvent('TOKEN_REFRESH_SUCCESS', {\n                username\n            });\n            return true;\n        } catch (error) {\n            const errorMessage = error instanceof Error ? error.message : 'Unknown refresh error';\n            logAuthEvent('TOKEN_REFRESH_FAILURE', {\n                errorMessage,\n                retryCount,\n                errorStack: error instanceof Error ? error.stack : undefined\n            });\n            // Implement retry mechanism\n            if (retryCount < MAX_RETRIES) {\n                console.warn(`Token refresh attempt ${retryCount + 1} failed. Retrying...`);\n                return refreshToken(retryCount + 1);\n            }\n            // Final fallback: logout after max retries\n            console.error('Token refresh failed after maximum retries');\n            logout();\n            return false;\n        }\n    };\n    // Login with credentials\n    const login = async (data)=>{\n        try {\n            console.log('AuthContext: login function called with data:', data);\n            // Some API clients save the token directly to storage and strip it from payload\n            // Fall back to reading from storage if not present on the response object\n            if (!data.token) {\n                const storedToken = (0,_utils_authUtils__WEBPACK_IMPORTED_MODULE_4__.getAuthToken)();\n                console.log('AuthContext: token missing in payload, using stored token:', !!storedToken);\n                if (storedToken) {\n                    data.token = storedToken;\n                } else {\n                    throw new Error('No token found in login data or storage');\n                }\n            }\n            console.log('AuthContext: Processing login with token');\n            // Store token with remember me preference if provided\n            const rememberMe = data.remember_me !== undefined ? data.remember_me : true; // Default to true for persistent login\n            // Store token and wait for it to complete\n            await (0,_utils_authUtils__WEBPACK_IMPORTED_MODULE_4__.storeAuthToken)(data.token, rememberMe);\n            console.log('AuthContext: Token stored successfully');\n            // Update application state\n            setToken(data.token); // Ensure token state is synchronized\n            setUser(data.user || {});\n            setIsAuthenticated(true);\n            setLoading(false); // Ensure loading state is turned off\n            console.log('AuthContext: State updated - isAuthenticated: true, user:', data.user);\n            // Capture minimal session data after successful login\n            if (data.user) {\n                SessionPersistence.captureSnapshot(data.user, data.token);\n            }\n            // Set flag to skip next verification cycle to avoid race condition\n            setSkipNextVerification(true);\n            // Log successful login state update\n            console.log('AuthContext: Login complete, auth state updated');\n            // Automatically check for wallet and generate if needed\n            // This ensures every user has a wallet automatically\n            setTimeout(()=>{\n                checkAndGenerateWallet();\n            }, 500); // Small delay to ensure auth is fully established\n            return true; // Signal successful login\n        } catch (error) {\n            console.error('Login failed:', error instanceof Error ? error.message : 'Unknown error');\n            // Ensure auth state is reset if login fails\n            (0,_utils_authUtils__WEBPACK_IMPORTED_MODULE_4__.clearAuthTokens)();\n            SessionPersistence.clearSnapshot();\n            setToken(null);\n            setUser(null);\n            setIsAuthenticated(false);\n            setLoading(false);\n            return false; // Signal failed login\n        }\n    };\n    // Clear auth state - reusable function for both logout and failed auth\n    const clearAuthState = ()=>{\n        (0,_utils_authUtils__WEBPACK_IMPORTED_MODULE_4__.clearAuthTokens)();\n        setToken(null);\n        setUser(null);\n        setIsAuthenticated(false);\n        SessionPersistence.clearSnapshot();\n    };\n    // Clear auth state\n    const logout = async ()=>{\n        logAuthEvent('logout_initiated');\n        try {\n            // Attempt to call logout endpoint if we have a token\n            if ((0,_utils_authUtils__WEBPACK_IMPORTED_MODULE_4__.getAuthToken)()) {\n                await _api_apiClient__WEBPACK_IMPORTED_MODULE_2__[\"default\"].post(_api_apiClient__WEBPACK_IMPORTED_MODULE_2__.API_ENDPOINTS.AUTH.LOGOUT, {});\n            }\n        } catch (error) {\n            console.error('Error during logout:', error);\n        // Continue with logout regardless of API errors\n        } finally{\n            // Always clear local state and storage\n            clearAuthState();\n            // Log the event\n            logAuthEvent('logout_complete');\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AuthContext.Provider, {\n        value: {\n            user,\n            login,\n            logout,\n            loading,\n            refreshToken,\n            isAuthenticated\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"/home/ubuntu/grace-project/src/ui/components/AuthContext.tsx\",\n        lineNumber: 459,\n        columnNumber: 5\n    }, this);\n}\nconst useAuth = ()=>{\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(AuthContext);\n    if (!context) {\n        throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./components/AuthContext.tsx\n");

/***/ }),

/***/ "(pages-dir-node)/./components/ErrorBoundary.tsx":
/*!**************************************!*\
  !*** ./components/ErrorBoundary.tsx ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\nclass ErrorBoundary extends react__WEBPACK_IMPORTED_MODULE_1__.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            hasError: false,\n            error: null\n        };\n    }\n    static getDerivedStateFromError(error) {\n        return {\n            hasError: true,\n            error\n        };\n    }\n    componentDidCatch(error, errorInfo) {\n        console.error(`Error in component ${this.props.componentName || 'unknown'}:`, error, errorInfo);\n        if (this.props.onError) {\n            this.props.onError(error, errorInfo);\n        }\n    }\n    render() {\n        if (this.state.hasError) {\n            if (this.props.fallback) {\n                return this.props.fallback;\n            }\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"error-boundary p-4 m-2 bg-red-100 border border-red-400 text-red-700 rounded\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                        className: \"font-bold\",\n                        children: [\n                            \"Something went wrong in \",\n                            this.props.componentName || 'this component'\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/home/ubuntu/grace-project/src/ui/components/ErrorBoundary.tsx\",\n                        lineNumber: 43,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"details\", {\n                        className: \"whitespace-pre-wrap text-sm mt-2\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"summary\", {\n                                children: \"View error details\"\n                            }, void 0, false, {\n                                fileName: \"/home/ubuntu/grace-project/src/ui/components/ErrorBoundary.tsx\",\n                                lineNumber: 45,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                className: \"mt-1\",\n                                children: this.state.error?.toString()\n                            }, void 0, false, {\n                                fileName: \"/home/ubuntu/grace-project/src/ui/components/ErrorBoundary.tsx\",\n                                lineNumber: 46,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/home/ubuntu/grace-project/src/ui/components/ErrorBoundary.tsx\",\n                        lineNumber: 44,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/home/ubuntu/grace-project/src/ui/components/ErrorBoundary.tsx\",\n                lineNumber: 42,\n                columnNumber: 9\n            }, this);\n        }\n        return this.props.children;\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ErrorBoundary);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS8uL2NvbXBvbmVudHMvRXJyb3JCb3VuZGFyeS50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQStEO0FBYy9ELE1BQU1FLHNCQUFzQkQsNENBQVNBO0lBQ25DLFlBQVlFLEtBQVksQ0FBRTtRQUN4QixLQUFLLENBQUNBO1FBQ04sSUFBSSxDQUFDQyxLQUFLLEdBQUc7WUFDWEMsVUFBVTtZQUNWQyxPQUFPO1FBQ1Q7SUFDRjtJQUVBLE9BQU9DLHlCQUF5QkQsS0FBWSxFQUFTO1FBQ25ELE9BQU87WUFBRUQsVUFBVTtZQUFNQztRQUFNO0lBQ2pDO0lBRUFFLGtCQUFrQkYsS0FBWSxFQUFFRyxTQUFvQixFQUFRO1FBQzFEQyxRQUFRSixLQUFLLENBQUMsQ0FBQyxtQkFBbUIsRUFBRSxJQUFJLENBQUNILEtBQUssQ0FBQ1EsYUFBYSxJQUFJLFVBQVUsQ0FBQyxDQUFDLEVBQUVMLE9BQU9HO1FBQ3JGLElBQUksSUFBSSxDQUFDTixLQUFLLENBQUNTLE9BQU8sRUFBRTtZQUN0QixJQUFJLENBQUNULEtBQUssQ0FBQ1MsT0FBTyxDQUFDTixPQUFPRztRQUM1QjtJQUNGO0lBRUFJLFNBQW9CO1FBQ2xCLElBQUksSUFBSSxDQUFDVCxLQUFLLENBQUNDLFFBQVEsRUFBRTtZQUN2QixJQUFJLElBQUksQ0FBQ0YsS0FBSyxDQUFDVyxRQUFRLEVBQUU7Z0JBQ3ZCLE9BQU8sSUFBSSxDQUFDWCxLQUFLLENBQUNXLFFBQVE7WUFDNUI7WUFFQSxxQkFDRSw4REFBQ0M7Z0JBQUlDLFdBQVU7O2tDQUNiLDhEQUFDQzt3QkFBR0QsV0FBVTs7NEJBQVk7NEJBQXlCLElBQUksQ0FBQ2IsS0FBSyxDQUFDUSxhQUFhLElBQUk7Ozs7Ozs7a0NBQy9FLDhEQUFDTzt3QkFBUUYsV0FBVTs7MENBQ2pCLDhEQUFDRzswQ0FBUTs7Ozs7OzBDQUNULDhEQUFDQztnQ0FBRUosV0FBVTswQ0FBUSxJQUFJLENBQUNaLEtBQUssQ0FBQ0UsS0FBSyxFQUFFZTs7Ozs7Ozs7Ozs7Ozs7Ozs7O1FBSS9DO1FBRUEsT0FBTyxJQUFJLENBQUNsQixLQUFLLENBQUNtQixRQUFRO0lBQzVCO0FBQ0Y7QUFFQSxpRUFBZXBCLGFBQWFBLEVBQUMiLCJzb3VyY2VzIjpbIi9ob21lL3VidW50dS9ncmFjZS1wcm9qZWN0L3NyYy91aS9jb21wb25lbnRzL0Vycm9yQm91bmRhcnkudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQsIEVycm9ySW5mbywgUmVhY3ROb2RlIH0gZnJvbSAncmVhY3QnO1xuXG5pbnRlcmZhY2UgUHJvcHMge1xuICBjaGlsZHJlbjogUmVhY3ROb2RlO1xuICBmYWxsYmFjaz86IFJlYWN0Tm9kZTtcbiAgb25FcnJvcj86IChlcnJvcjogRXJyb3IsIGVycm9ySW5mbzogRXJyb3JJbmZvKSA9PiB2b2lkO1xuICBjb21wb25lbnROYW1lPzogc3RyaW5nO1xufVxuXG5pbnRlcmZhY2UgU3RhdGUge1xuICBoYXNFcnJvcjogYm9vbGVhbjtcbiAgZXJyb3I6IEVycm9yIHwgbnVsbDtcbn1cblxuY2xhc3MgRXJyb3JCb3VuZGFyeSBleHRlbmRzIENvbXBvbmVudDxQcm9wcywgU3RhdGU+IHtcbiAgY29uc3RydWN0b3IocHJvcHM6IFByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpO1xuICAgIHRoaXMuc3RhdGUgPSB7IFxuICAgICAgaGFzRXJyb3I6IGZhbHNlLFxuICAgICAgZXJyb3I6IG51bGxcbiAgICB9O1xuICB9XG5cbiAgc3RhdGljIGdldERlcml2ZWRTdGF0ZUZyb21FcnJvcihlcnJvcjogRXJyb3IpOiBTdGF0ZSB7XG4gICAgcmV0dXJuIHsgaGFzRXJyb3I6IHRydWUsIGVycm9yIH07XG4gIH1cblxuICBjb21wb25lbnREaWRDYXRjaChlcnJvcjogRXJyb3IsIGVycm9ySW5mbzogRXJyb3JJbmZvKTogdm9pZCB7XG4gICAgY29uc29sZS5lcnJvcihgRXJyb3IgaW4gY29tcG9uZW50ICR7dGhpcy5wcm9wcy5jb21wb25lbnROYW1lIHx8ICd1bmtub3duJ306YCwgZXJyb3IsIGVycm9ySW5mbyk7XG4gICAgaWYgKHRoaXMucHJvcHMub25FcnJvcikge1xuICAgICAgdGhpcy5wcm9wcy5vbkVycm9yKGVycm9yLCBlcnJvckluZm8pO1xuICAgIH1cbiAgfVxuXG4gIHJlbmRlcigpOiBSZWFjdE5vZGUge1xuICAgIGlmICh0aGlzLnN0YXRlLmhhc0Vycm9yKSB7XG4gICAgICBpZiAodGhpcy5wcm9wcy5mYWxsYmFjaykge1xuICAgICAgICByZXR1cm4gdGhpcy5wcm9wcy5mYWxsYmFjaztcbiAgICAgIH1cbiAgICAgIFxuICAgICAgcmV0dXJuIChcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJlcnJvci1ib3VuZGFyeSBwLTQgbS0yIGJnLXJlZC0xMDAgYm9yZGVyIGJvcmRlci1yZWQtNDAwIHRleHQtcmVkLTcwMCByb3VuZGVkXCI+XG4gICAgICAgICAgPGgzIGNsYXNzTmFtZT1cImZvbnQtYm9sZFwiPlNvbWV0aGluZyB3ZW50IHdyb25nIGluIHt0aGlzLnByb3BzLmNvbXBvbmVudE5hbWUgfHwgJ3RoaXMgY29tcG9uZW50J308L2gzPlxuICAgICAgICAgIDxkZXRhaWxzIGNsYXNzTmFtZT1cIndoaXRlc3BhY2UtcHJlLXdyYXAgdGV4dC1zbSBtdC0yXCI+XG4gICAgICAgICAgICA8c3VtbWFyeT5WaWV3IGVycm9yIGRldGFpbHM8L3N1bW1hcnk+XG4gICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJtdC0xXCI+e3RoaXMuc3RhdGUuZXJyb3I/LnRvU3RyaW5nKCl9PC9wPlxuICAgICAgICAgIDwvZGV0YWlscz5cbiAgICAgICAgPC9kaXY+XG4gICAgICApO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzLnByb3BzLmNoaWxkcmVuO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEVycm9yQm91bmRhcnk7XG4iXSwibmFtZXMiOlsiUmVhY3QiLCJDb21wb25lbnQiLCJFcnJvckJvdW5kYXJ5IiwicHJvcHMiLCJzdGF0ZSIsImhhc0Vycm9yIiwiZXJyb3IiLCJnZXREZXJpdmVkU3RhdGVGcm9tRXJyb3IiLCJjb21wb25lbnREaWRDYXRjaCIsImVycm9ySW5mbyIsImNvbnNvbGUiLCJjb21wb25lbnROYW1lIiwib25FcnJvciIsInJlbmRlciIsImZhbGxiYWNrIiwiZGl2IiwiY2xhc3NOYW1lIiwiaDMiLCJkZXRhaWxzIiwic3VtbWFyeSIsInAiLCJ0b1N0cmluZyIsImNoaWxkcmVuIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(pages-dir-node)/./components/ErrorBoundary.tsx\n");

/***/ }),

/***/ "(pages-dir-node)/./components/LoadingPage.tsx":
/*!************************************!*\
  !*** ./components/LoadingPage.tsx ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ LoadingPage)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\n/**\n * LoadingPage component\n * \n * Displays a consistent loading animation for transitions between pages\n * or during authentication processes.\n */ function LoadingPage({ message = 'Loading...', showLogo = true }) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"flex min-h-screen items-center justify-center bg-black text-white p-4\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"text-center\",\n            children: [\n                showLogo && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"mb-4 text-red-500 text-xl font-bold\",\n                    children: \"Grace\"\n                }, void 0, false, {\n                    fileName: \"/home/ubuntu/grace-project/src/ui/components/LoadingPage.tsx\",\n                    lineNumber: 22,\n                    columnNumber: 11\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"flex items-center justify-center\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                            className: \"mr-2\",\n                            children: message\n                        }, void 0, false, {\n                            fileName: \"/home/ubuntu/grace-project/src/ui/components/LoadingPage.tsx\",\n                            lineNumber: 25,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"animate-pulse\",\n                            children: \"...\"\n                        }, void 0, false, {\n                            fileName: \"/home/ubuntu/grace-project/src/ui/components/LoadingPage.tsx\",\n                            lineNumber: 26,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/home/ubuntu/grace-project/src/ui/components/LoadingPage.tsx\",\n                    lineNumber: 24,\n                    columnNumber: 9\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"/home/ubuntu/grace-project/src/ui/components/LoadingPage.tsx\",\n            lineNumber: 20,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/home/ubuntu/grace-project/src/ui/components/LoadingPage.tsx\",\n        lineNumber: 19,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS8uL2NvbXBvbmVudHMvTG9hZGluZ1BhZ2UudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUEwQjtBQU8xQjs7Ozs7Q0FLQyxHQUNjLFNBQVNDLFlBQVksRUFDbENDLFVBQVUsWUFBWSxFQUN0QkMsV0FBVyxJQUFJLEVBQ0U7SUFDakIscUJBQ0UsOERBQUNDO1FBQUlDLFdBQVU7a0JBQ2IsNEVBQUNEO1lBQUlDLFdBQVU7O2dCQUNaRiwwQkFDQyw4REFBQ0M7b0JBQUlDLFdBQVU7OEJBQXNDOzs7Ozs7OEJBRXZELDhEQUFDRDtvQkFBSUMsV0FBVTs7c0NBQ2IsOERBQUNDOzRCQUFLRCxXQUFVO3NDQUFRSDs7Ozs7O3NDQUN4Qiw4REFBQ0U7NEJBQUlDLFdBQVU7c0NBQWdCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUt6QyIsInNvdXJjZXMiOlsiL2hvbWUvdWJ1bnR1L2dyYWNlLXByb2plY3Qvc3JjL3VpL2NvbXBvbmVudHMvTG9hZGluZ1BhZ2UudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmludGVyZmFjZSBMb2FkaW5nUGFnZVByb3BzIHtcbiAgbWVzc2FnZT86IHN0cmluZztcbiAgc2hvd0xvZ28/OiBib29sZWFuO1xufVxuXG4vKipcbiAqIExvYWRpbmdQYWdlIGNvbXBvbmVudFxuICogXG4gKiBEaXNwbGF5cyBhIGNvbnNpc3RlbnQgbG9hZGluZyBhbmltYXRpb24gZm9yIHRyYW5zaXRpb25zIGJldHdlZW4gcGFnZXNcbiAqIG9yIGR1cmluZyBhdXRoZW50aWNhdGlvbiBwcm9jZXNzZXMuXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIExvYWRpbmdQYWdlKHsgXG4gIG1lc3NhZ2UgPSAnTG9hZGluZy4uLicsIFxuICBzaG93TG9nbyA9IHRydWUgXG59OiBMb2FkaW5nUGFnZVByb3BzKSB7XG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IG1pbi1oLXNjcmVlbiBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIgYmctYmxhY2sgdGV4dC13aGl0ZSBwLTRcIj5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGV4dC1jZW50ZXJcIj5cbiAgICAgICAge3Nob3dMb2dvICYmIChcbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1iLTQgdGV4dC1yZWQtNTAwIHRleHQteGwgZm9udC1ib2xkXCI+R3JhY2U8L2Rpdj5cbiAgICAgICAgKX1cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlclwiPlxuICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cIm1yLTJcIj57bWVzc2FnZX08L3NwYW4+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJhbmltYXRlLXB1bHNlXCI+Li4uPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gICk7XG59XG4iXSwibmFtZXMiOlsiUmVhY3QiLCJMb2FkaW5nUGFnZSIsIm1lc3NhZ2UiLCJzaG93TG9nbyIsImRpdiIsImNsYXNzTmFtZSIsInNwYW4iXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(pages-dir-node)/./components/LoadingPage.tsx\n");

/***/ }),

/***/ "(pages-dir-node)/./components/LogoutButton.tsx":
/*!*************************************!*\
  !*** ./components/LogoutButton.tsx ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ LogoutButton)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/router */ \"(pages-dir-node)/./node_modules/.pnpm/next@15.4.5_@babel+core@7.28.0_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _AuthContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./AuthContext */ \"(pages-dir-node)/./components/AuthContext.tsx\");\n/* harmony import */ var _utils_StatePersistence__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/StatePersistence */ \"(pages-dir-node)/./utils/StatePersistence.ts\");\n// src/components/LogoutButton.tsx\n\n\n\n\n\nfunction LogoutButton() {\n    const router = (0,next_router__WEBPACK_IMPORTED_MODULE_2__.useRouter)();\n    const { logout } = (0,_AuthContext__WEBPACK_IMPORTED_MODULE_3__.useAuth)(); // Use the standardized logout function from AuthContext\n    const handleLogout = async ()=>{\n        try {\n            // Clear persistent state snapshot\n            _utils_StatePersistence__WEBPACK_IMPORTED_MODULE_4__[\"default\"].clearSnapshot();\n            // Use the standardized logout function that handles everything\n            await logout();\n            // After successful logout, redirect to login page\n            router.push('/login');\n        } catch (err) {\n            console.error('Logout failed:', err);\n            // Still navigate to login even if the API call fails\n            router.push('/login');\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n        onClick: handleLogout,\n        className: \"transition-all hover:text-red-400 pb-1 text-white\",\n        children: \"Logout\"\n    }, void 0, false, {\n        fileName: \"/home/ubuntu/grace-project/src/ui/components/LogoutButton.tsx\",\n        lineNumber: 32,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS8uL2NvbXBvbmVudHMvTG9nb3V0QnV0dG9uLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQSxrQ0FBa0M7O0FBRVI7QUFDYztBQUNBO0FBR3dCO0FBRWpELFNBQVNJO0lBQ3RCLE1BQU1DLFNBQVNKLHNEQUFTQTtJQUN4QixNQUFNLEVBQUVLLE1BQU0sRUFBRSxHQUFHSixxREFBT0EsSUFBSSx3REFBd0Q7SUFFdEYsTUFBTUssZUFBZTtRQUNuQixJQUFJO1lBQ0Ysa0NBQWtDO1lBQ2xDSiw2RUFBcUM7WUFFckMsK0RBQStEO1lBQy9ELE1BQU1HO1lBRU4sa0RBQWtEO1lBQ2xERCxPQUFPSSxJQUFJLENBQUM7UUFDZCxFQUFFLE9BQU9DLEtBQUs7WUFDWkMsUUFBUUMsS0FBSyxDQUFDLGtCQUFrQkY7WUFDaEMscURBQXFEO1lBQ3JETCxPQUFPSSxJQUFJLENBQUM7UUFDZDtJQUNGO0lBRUEscUJBQ0UsOERBQUNJO1FBQ0NDLFNBQVNQO1FBQ1RRLFdBQVU7a0JBQ1g7Ozs7OztBQUlMIiwic291cmNlcyI6WyIvaG9tZS91YnVudHUvZ3JhY2UtcHJvamVjdC9zcmMvdWkvY29tcG9uZW50cy9Mb2dvdXRCdXR0b24udHN4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9jb21wb25lbnRzL0xvZ291dEJ1dHRvbi50c3hcblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHVzZVJvdXRlciB9IGZyb20gJ25leHQvcm91dGVyJztcbmltcG9ydCB7IHVzZUF1dGggfSBmcm9tICcuL0F1dGhDb250ZXh0JztcbmltcG9ydCBhcGkgZnJvbSAnLi4vYXBpL2FwaUNsaWVudCc7XG5pbXBvcnQgeyBBUElfRU5EUE9JTlRTIH0gZnJvbSAnLi4vYXBpL2FwaUNsaWVudCc7XG5pbXBvcnQgU3RhdGVQZXJzaXN0ZW5jZU1hbmFnZXIgZnJvbSAnLi4vdXRpbHMvU3RhdGVQZXJzaXN0ZW5jZSc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIExvZ291dEJ1dHRvbigpIHtcbiAgY29uc3Qgcm91dGVyID0gdXNlUm91dGVyKCk7XG4gIGNvbnN0IHsgbG9nb3V0IH0gPSB1c2VBdXRoKCk7IC8vIFVzZSB0aGUgc3RhbmRhcmRpemVkIGxvZ291dCBmdW5jdGlvbiBmcm9tIEF1dGhDb250ZXh0XG5cbiAgY29uc3QgaGFuZGxlTG9nb3V0ID0gYXN5bmMgKCkgPT4ge1xuICAgIHRyeSB7XG4gICAgICAvLyBDbGVhciBwZXJzaXN0ZW50IHN0YXRlIHNuYXBzaG90XG4gICAgICBTdGF0ZVBlcnNpc3RlbmNlTWFuYWdlci5jbGVhclNuYXBzaG90KCk7XG4gICAgICBcbiAgICAgIC8vIFVzZSB0aGUgc3RhbmRhcmRpemVkIGxvZ291dCBmdW5jdGlvbiB0aGF0IGhhbmRsZXMgZXZlcnl0aGluZ1xuICAgICAgYXdhaXQgbG9nb3V0KCk7XG4gICAgICBcbiAgICAgIC8vIEFmdGVyIHN1Y2Nlc3NmdWwgbG9nb3V0LCByZWRpcmVjdCB0byBsb2dpbiBwYWdlXG4gICAgICByb3V0ZXIucHVzaCgnL2xvZ2luJyk7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdMb2dvdXQgZmFpbGVkOicsIGVycik7XG4gICAgICAvLyBTdGlsbCBuYXZpZ2F0ZSB0byBsb2dpbiBldmVuIGlmIHRoZSBBUEkgY2FsbCBmYWlsc1xuICAgICAgcm91dGVyLnB1c2goJy9sb2dpbicpO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gKFxuICAgIDxidXR0b25cbiAgICAgIG9uQ2xpY2s9e2hhbmRsZUxvZ291dH1cbiAgICAgIGNsYXNzTmFtZT1cInRyYW5zaXRpb24tYWxsIGhvdmVyOnRleHQtcmVkLTQwMCBwYi0xIHRleHQtd2hpdGVcIlxuICAgID5cbiAgICAgIExvZ291dFxuICAgIDwvYnV0dG9uPlxuICApO1xufVxuIl0sIm5hbWVzIjpbIlJlYWN0IiwidXNlUm91dGVyIiwidXNlQXV0aCIsIlN0YXRlUGVyc2lzdGVuY2VNYW5hZ2VyIiwiTG9nb3V0QnV0dG9uIiwicm91dGVyIiwibG9nb3V0IiwiaGFuZGxlTG9nb3V0IiwiY2xlYXJTbmFwc2hvdCIsInB1c2giLCJlcnIiLCJjb25zb2xlIiwiZXJyb3IiLCJidXR0b24iLCJvbkNsaWNrIiwiY2xhc3NOYW1lIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(pages-dir-node)/./components/LogoutButton.tsx\n");

/***/ }),

/***/ "(pages-dir-node)/./components/StateLoader.tsx":
/*!************************************!*\
  !*** ./components/StateLoader.tsx ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _context_AppStateContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../context/AppStateContext */ \"(pages-dir-node)/./context/AppStateContext.tsx\");\n/* harmony import */ var _utils_StateBackupService__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/StateBackupService */ \"(pages-dir-node)/./utils/StateBackupService.ts\");\n/* harmony import */ var _AuthContext__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./AuthContext */ \"(pages-dir-node)/./components/AuthContext.tsx\");\n\n\n\n\n\nconst StateLoader = ({ children })=>{\n    const { isStateLoading, isStateHydrated, isStateRecovered, isStateSyncing, dispatch } = (0,_context_AppStateContext__WEBPACK_IMPORTED_MODULE_2__.useAppState)();\n    const { user, isAuthenticated } = (0,_AuthContext__WEBPACK_IMPORTED_MODULE_4__.useAuth)();\n    const [showSyncNotice, setShowSyncNotice] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showHydrationNotice, setShowHydrationNotice] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showRecoveryAttempt, setShowRecoveryAttempt] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const isInitialMount = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(true);\n    const backupService = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const recoveryAttemptMade = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    // Handle sync notice display and auto-hide\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"StateLoader.useEffect\": ()=>{\n            if (isStateSyncing) {\n                setShowSyncNotice(true);\n                // Auto-hide sync notice after 3 seconds\n                const timer = setTimeout({\n                    \"StateLoader.useEffect.timer\": ()=>setShowSyncNotice(false)\n                }[\"StateLoader.useEffect.timer\"], 3000);\n                return ({\n                    \"StateLoader.useEffect\": ()=>clearTimeout(timer)\n                })[\"StateLoader.useEffect\"];\n            }\n        }\n    }[\"StateLoader.useEffect\"], [\n        isStateSyncing\n    ]);\n    // Initialize the state backup service\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"StateLoader.useEffect\": ()=>{\n            if (isAuthenticated && user) {\n                try {\n                    // Initialize the backup service\n                    const service = _utils_StateBackupService__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getInstance();\n                    backupService.current = service;\n                    service.initialize().then({\n                        \"StateLoader.useEffect\": (success)=>{\n                            console.log(`State backup service initialized: ${success ? 'success' : 'fallback mode'}`);\n                        }\n                    }[\"StateLoader.useEffect\"]);\n                } catch (error) {\n                    console.error('Failed to initialize state backup service:', error);\n                }\n            }\n            return ({\n                \"StateLoader.useEffect\": ()=>{\n                    // Clean up backup service on unmount\n                    if (backupService.current) {\n                        backupService.current.stopPeriodicBackup();\n                    }\n                }\n            })[\"StateLoader.useEffect\"];\n        }\n    }[\"StateLoader.useEffect\"], [\n        isAuthenticated,\n        user\n    ]);\n    // Attempt recovery if needed\n    const attemptStateRecovery = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"StateLoader.useCallback[attemptStateRecovery]\": async ()=>{\n            if (!isStateHydrated && !isStateLoading && !recoveryAttemptMade.current) {\n                recoveryAttemptMade.current = true;\n                setShowRecoveryAttempt(true);\n                try {\n                    if (backupService.current) {\n                        const recoveredState = await backupService.current.attemptRecovery();\n                        if (recoveredState) {\n                            console.log('Successfully recovered state from backup source');\n                            dispatch({\n                                type: 'HYDRATE_STATE',\n                                payload: recoveredState\n                            });\n                            setShowHydrationNotice(true);\n                            setTimeout({\n                                \"StateLoader.useCallback[attemptStateRecovery]\": ()=>setShowHydrationNotice(false)\n                            }[\"StateLoader.useCallback[attemptStateRecovery]\"], 3000);\n                        }\n                    }\n                } catch (error) {\n                    console.error('Error during state recovery attempt:', error);\n                } finally{\n                    setShowRecoveryAttempt(false);\n                }\n            }\n        }\n    }[\"StateLoader.useCallback[attemptStateRecovery]\"], [\n        dispatch,\n        isStateHydrated,\n        isStateLoading\n    ]);\n    // Trigger recovery attempt if state is not hydrated\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"StateLoader.useEffect\": ()=>{\n            if (isAuthenticated && !isStateHydrated && !isStateLoading) {\n                const timer = setTimeout({\n                    \"StateLoader.useEffect.timer\": ()=>{\n                        attemptStateRecovery();\n                    }\n                }[\"StateLoader.useEffect.timer\"], 1000); // Wait 1 second before attempting recovery\n                return ({\n                    \"StateLoader.useEffect\": ()=>clearTimeout(timer)\n                })[\"StateLoader.useEffect\"];\n            }\n        }\n    }[\"StateLoader.useEffect\"], [\n        isAuthenticated,\n        isStateHydrated,\n        isStateLoading,\n        attemptStateRecovery\n    ]);\n    // Handle hydration notice only for non-initial state hydrations\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"StateLoader.useEffect\": ()=>{\n            // Skip the initial mount effect - this prevents showing notification on first load\n            if (isInitialMount.current) {\n                isInitialMount.current = false;\n                return;\n            }\n            // Only show hydration notice for subsequent hydrations\n            if (isStateHydrated && !isStateLoading) {\n                setShowHydrationNotice(true);\n                const timer = setTimeout({\n                    \"StateLoader.useEffect.timer\": ()=>setShowHydrationNotice(false)\n                }[\"StateLoader.useEffect.timer\"], 3000);\n                return ({\n                    \"StateLoader.useEffect\": ()=>clearTimeout(timer)\n                })[\"StateLoader.useEffect\"];\n            }\n        }\n    }[\"StateLoader.useEffect\"], [\n        isStateHydrated,\n        isStateLoading\n    ]);\n    if (isStateLoading || showRecoveryAttempt) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"bg-gray-900 p-6 rounded-lg shadow-lg text-center\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-gold mx-auto mb-4\"\n                    }, void 0, false, {\n                        fileName: \"/home/ubuntu/grace-project/src/ui/components/StateLoader.tsx\",\n                        lineNumber: 108,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                        className: \"text-xl font-semibold text-gold mb-2\",\n                        children: showRecoveryAttempt ? 'Recovering Your Data' : 'Loading Your Trading State'\n                    }, void 0, false, {\n                        fileName: \"/home/ubuntu/grace-project/src/ui/components/StateLoader.tsx\",\n                        lineNumber: 109,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"text-gray-400\",\n                        children: showRecoveryAttempt ? 'Attempting to recover your session data...' : 'Restoring your previous session...'\n                    }, void 0, false, {\n                        fileName: \"/home/ubuntu/grace-project/src/ui/components/StateLoader.tsx\",\n                        lineNumber: 112,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/home/ubuntu/grace-project/src/ui/components/StateLoader.tsx\",\n                lineNumber: 107,\n                columnNumber: 9\n            }, undefined)\n        }, void 0, false, {\n            fileName: \"/home/ubuntu/grace-project/src/ui/components/StateLoader.tsx\",\n            lineNumber: 106,\n            columnNumber: 7\n        }, undefined);\n    }\n    // Show recovery notification if state was recovered from corruption\n    if (isStateRecovered) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"fixed bottom-4 right-4 bg-gray-900 text-yellow-500 px-4 py-2 rounded shadow-lg  border border-yellow-600 transition-opacity duration-1000 z-40\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex items-center\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                xmlns: \"http://www.w3.org/2000/svg\",\n                                className: \"h-5 w-5 mr-2\",\n                                fill: \"none\",\n                                viewBox: \"0 0 24 24\",\n                                stroke: \"currentColor\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                    strokeLinecap: \"round\",\n                                    strokeLinejoin: \"round\",\n                                    strokeWidth: 2,\n                                    d: \"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"\n                                }, void 0, false, {\n                                    fileName: \"/home/ubuntu/grace-project/src/ui/components/StateLoader.tsx\",\n                                    lineNumber: 130,\n                                    columnNumber: 15\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"/home/ubuntu/grace-project/src/ui/components/StateLoader.tsx\",\n                                lineNumber: 129,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                children: \"Session was partially recovered due to data corruption\"\n                            }, void 0, false, {\n                                fileName: \"/home/ubuntu/grace-project/src/ui/components/StateLoader.tsx\",\n                                lineNumber: 132,\n                                columnNumber: 13\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/home/ubuntu/grace-project/src/ui/components/StateLoader.tsx\",\n                        lineNumber: 128,\n                        columnNumber: 11\n                    }, undefined)\n                }, void 0, false, {\n                    fileName: \"/home/ubuntu/grace-project/src/ui/components/StateLoader.tsx\",\n                    lineNumber: 126,\n                    columnNumber: 9\n                }, undefined),\n                children\n            ]\n        }, void 0, true);\n    }\n    // Show a brief flash notification when state is hydrated but not on initial load\n    if (showHydrationNotice) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"fixed bottom-4 right-4 bg-gray-900 text-green-400 px-4 py-2 rounded shadow-lg  transition-opacity duration-1000 z-40\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex items-center\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                xmlns: \"http://www.w3.org/2000/svg\",\n                                className: \"h-5 w-5 mr-2\",\n                                fill: \"none\",\n                                viewBox: \"0 0 24 24\",\n                                stroke: \"currentColor\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                    strokeLinecap: \"round\",\n                                    strokeLinejoin: \"round\",\n                                    strokeWidth: 2,\n                                    d: \"M5 13l4 4L19 7\"\n                                }, void 0, false, {\n                                    fileName: \"/home/ubuntu/grace-project/src/ui/components/StateLoader.tsx\",\n                                    lineNumber: 148,\n                                    columnNumber: 15\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"/home/ubuntu/grace-project/src/ui/components/StateLoader.tsx\",\n                                lineNumber: 147,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                children: \"Session restored successfully\"\n                            }, void 0, false, {\n                                fileName: \"/home/ubuntu/grace-project/src/ui/components/StateLoader.tsx\",\n                                lineNumber: 150,\n                                columnNumber: 13\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/home/ubuntu/grace-project/src/ui/components/StateLoader.tsx\",\n                        lineNumber: 146,\n                        columnNumber: 11\n                    }, undefined)\n                }, void 0, false, {\n                    fileName: \"/home/ubuntu/grace-project/src/ui/components/StateLoader.tsx\",\n                    lineNumber: 144,\n                    columnNumber: 9\n                }, undefined),\n                children\n            ]\n        }, void 0, true);\n    }\n    // Show cross-tab sync notification\n    if (showSyncNotice) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"fixed bottom-4 right-4 bg-gray-800 text-blue-400 px-4 py-2 rounded shadow-lg  transition-opacity duration-300 z-40 border border-blue-600\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex items-center\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                xmlns: \"http://www.w3.org/2000/svg\",\n                                className: \"h-5 w-5 mr-2 animate-pulse\",\n                                fill: \"none\",\n                                viewBox: \"0 0 24 24\",\n                                stroke: \"currentColor\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                    strokeLinecap: \"round\",\n                                    strokeLinejoin: \"round\",\n                                    strokeWidth: 2,\n                                    d: \"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n                                }, void 0, false, {\n                                    fileName: \"/home/ubuntu/grace-project/src/ui/components/StateLoader.tsx\",\n                                    lineNumber: 166,\n                                    columnNumber: 15\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"/home/ubuntu/grace-project/src/ui/components/StateLoader.tsx\",\n                                lineNumber: 165,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                children: \"Syncing state from another tab...\"\n                            }, void 0, false, {\n                                fileName: \"/home/ubuntu/grace-project/src/ui/components/StateLoader.tsx\",\n                                lineNumber: 168,\n                                columnNumber: 13\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/home/ubuntu/grace-project/src/ui/components/StateLoader.tsx\",\n                        lineNumber: 164,\n                        columnNumber: 11\n                    }, undefined)\n                }, void 0, false, {\n                    fileName: \"/home/ubuntu/grace-project/src/ui/components/StateLoader.tsx\",\n                    lineNumber: 162,\n                    columnNumber: 9\n                }, undefined),\n                children\n            ]\n        }, void 0, true);\n    }\n    // Default render\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: children\n    }, void 0, false);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (StateLoader);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./components/StateLoader.tsx\n");

/***/ }),

/***/ "(pages-dir-node)/./context/AppStateContext.tsx":
/*!*************************************!*\
  !*** ./context/AppStateContext.tsx ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AppStateProvider: () => (/* binding */ AppStateProvider),\n/* harmony export */   useAppState: () => (/* binding */ useAppState)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils_StatePersistence__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/StatePersistence */ \"(pages-dir-node)/./utils/StatePersistence.ts\");\n/* harmony import */ var _components_AuthContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/AuthContext */ \"(pages-dir-node)/./components/AuthContext.tsx\");\n\n\n\n\n// Initial state object\nconst initialState = {\n    timestamp: Date.now(),\n    userSession: {},\n    authSession: {},\n    // Standard chatContext from DynamicStateSnapshot\n    chatContext: {\n        currentConversationId: undefined,\n        draftMessage: '',\n        lastMessageTimestamp: 0\n    },\n    // Extended chat state\n    chatState: {\n        activeSessions: [],\n        sessions: {},\n        draftMessages: {}\n    },\n    pageState: {},\n    widgetStates: {},\n    // State metadata\n    isHydrated: false,\n    isLoading: false,\n    lastSaved: 0,\n    // Extended state\n    tradingState: {},\n    walletState: {},\n    socialState: {},\n    uiState: {\n        darkMode: true,\n        sidebarOpen: true\n    },\n    xfeed: {\n        followedAccounts: [],\n        lastUpdated: undefined\n    }\n};\n// State reducer\nfunction appStateReducer(state, action) {\n    switch(action.type){\n        case 'SET_TRADING_STATE':\n            return {\n                ...state,\n                tradingState: {\n                    ...state.tradingState,\n                    ...action.payload\n                }\n            };\n        case 'SET_WALLET_STATE':\n            return {\n                ...state,\n                walletState: {\n                    ...state.walletState,\n                    ...action.payload\n                }\n            };\n        case 'SET_CHAT_STATE':\n            return {\n                ...state,\n                chatState: {\n                    ...state.chatState,\n                    ...action.payload\n                }\n            };\n        case 'SET_SOCIAL_STATE':\n            return {\n                ...state,\n                socialState: {\n                    ...state.socialState,\n                    ...action.payload\n                }\n            };\n        case 'SET_UI_STATE':\n            return {\n                ...state,\n                uiState: {\n                    ...state.uiState,\n                    ...action.payload\n                }\n            };\n        case 'SET_PAGE_STATE':\n            return {\n                ...state,\n                pageState: {\n                    ...state.pageState,\n                    ...action.payload\n                }\n            };\n        case 'SET_WIDGET_STATES':\n            return {\n                ...state,\n                widgetStates: {\n                    ...state.widgetStates,\n                    ...action.payload\n                }\n            };\n        case 'SET_CHAT_CONTEXT':\n            return {\n                ...state,\n                chatContext: {\n                    ...state.chatContext,\n                    ...action.payload\n                }\n            };\n        case 'SET_USER_SESSION':\n            return {\n                ...state,\n                userSession: {\n                    ...state.userSession,\n                    ...action.payload\n                }\n            };\n        case 'UPDATE_AUTH':\n            const { user, token } = action.payload;\n            return {\n                ...state,\n                userSession: {\n                    ...state.userSession,\n                    token: token || '',\n                    username: user?.username || ''\n                },\n                authSession: {\n                    ...state.authSession,\n                    token: token || '',\n                    expiresAt: token ? Math.floor(Date.now() / 1000) + 24 * 60 * 60 : undefined\n                }\n            };\n        case 'UPDATE_XFEED':\n            return {\n                ...state,\n                xfeed: {\n                    ...state.xfeed,\n                    ...action.payload,\n                    lastUpdated: Date.now()\n                }\n            };\n        case 'HYDRATE_STATE':\n            return {\n                ...action.payload\n            };\n        case 'RESET_STATE':\n            return initialState;\n        // Compatibility aliases\n        case 'HYDRATE':\n            return {\n                ...action.payload\n            };\n        case 'RESET':\n            return initialState;\n        default:\n            return state;\n    }\n}\nconst AppStateContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nfunction AppStateProvider({ children }) {\n    const [state, dispatch] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useReducer)(appStateReducer, initialState);\n    const [isStateLoading, setIsStateLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [isStateHydrated, setIsStateHydrated] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [isStateRecovered, setIsStateRecovered] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [isStateSyncing, setIsStateSyncing] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const isUpdatingFromStorage = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    // Get auth state from AuthContext\n    const { user, isAuthenticated } = (0,_components_AuthContext__WEBPACK_IMPORTED_MODULE_3__.useAuth)();\n    // Sync auth state with AppState\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"AppStateProvider.useEffect\": ()=>{\n            dispatch({\n                type: 'UPDATE_AUTH',\n                payload: {\n                    user: isAuthenticated ? user : null,\n                    token: isAuthenticated ? localStorage.getItem('authToken') : null\n                }\n            });\n        }\n    }[\"AppStateProvider.useEffect\"], [\n        user,\n        isAuthenticated\n    ]);\n    // Hydrate state from storage on initial load\n    const hydrateFromStorage = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"AppStateProvider.useCallback[hydrateFromStorage]\": async (navigate)=>{\n            try {\n                setIsStateLoading(true);\n                // Get the stored state using the synchronous retrieveSnapshot method\n                const storedState = _utils_StatePersistence__WEBPACK_IMPORTED_MODULE_2__[\"default\"].retrieveSnapshot();\n                if (!storedState) {\n                    console.log('No stored state found');\n                    setIsStateHydrated(true);\n                    return;\n                }\n                console.log('Hydrating state from storage:', storedState);\n                // Create a clean state object with proper defaults\n                const hydratedState = {\n                    // Required fields from AppState\n                    timestamp: storedState.timestamp || Date.now(),\n                    isHydrated: true,\n                    lastSaved: 0,\n                    // Map user session\n                    userSession: {\n                        token: storedState.userSession?.token || '',\n                        username: storedState.userSession?.username || ''\n                    },\n                    // Map chat context (required by DynamicStateSnapshot)\n                    chatContext: {\n                        currentConversationId: storedState.chatContext?.currentConversationId,\n                        draftMessage: storedState.chatContext?.draftMessage || '',\n                        lastMessageTimestamp: storedState.chatContext?.lastMessageTimestamp || 0\n                    },\n                    // Map page state\n                    pageState: {\n                        lastVisitedPath: storedState.pageState?.lastVisitedPath || '/',\n                        scrollPositions: storedState.pageState?.scrollPositions || {}\n                    },\n                    // Map widget states\n                    widgetStates: {\n                        tradingPositions: storedState.widgetStates?.tradingPositions || [],\n                        walletBalance: storedState.widgetStates?.walletBalance || 0\n                    },\n                    // Map extended chat state\n                    chatState: {\n                        activeSessions: storedState.chatState?.activeSessions || [],\n                        currentSessionId: storedState.chatState?.currentSessionId,\n                        sessions: storedState.chatState?.sessions || {},\n                        draftMessages: storedState.chatState?.draftMessages || {}\n                    },\n                    // Map trading state\n                    tradingState: storedState.tradingState ? {\n                        selectedToken: storedState.tradingState.selectedToken,\n                        watchlist: storedState.tradingState.watchlist || [],\n                        tradeHistory: storedState.tradingState.tradeHistory || [],\n                        tradeForm: storedState.tradingState.tradeForm,\n                        resolution: storedState.tradingState.resolution,\n                        search: storedState.tradingState.search,\n                        positions: storedState.tradingState.positions || []\n                    } : {},\n                    // Map wallet state\n                    walletState: storedState.walletState ? {\n                        connectedWallets: storedState.walletState.connectedWallets || [],\n                        transactions: storedState.walletState.transactions || []\n                    } : {},\n                    // Map social state\n                    socialState: storedState.socialState ? {\n                        posts: storedState.socialState.posts || [],\n                        following: storedState.socialState.following || [],\n                        notifications: storedState.socialState.notifications || []\n                    } : {},\n                    // Map UI state with defaults\n                    uiState: {\n                        darkMode: storedState.uiState?.darkMode ?? true,\n                        sidebarOpen: storedState.uiState?.sidebarOpen ?? true,\n                        activeTabs: storedState.uiState?.activeTabs || {}\n                    },\n                    // Initialize xfeed with default values since it's not in DynamicStateSnapshot\n                    xfeed: {\n                        followedAccounts: [],\n                        lastUpdated: undefined\n                    }\n                };\n                // Apply the hydrated state\n                dispatch({\n                    type: 'HYDRATE_STATE',\n                    payload: hydratedState\n                });\n                // Handle navigation if needed\n                if (navigate && hydratedState.pageState?.lastVisitedPath) {\n                    navigate(hydratedState.pageState.lastVisitedPath);\n                    // Restore scroll position after a small delay\n                    if (hydratedState.pageState.scrollPositions) {\n                        setTimeout({\n                            \"AppStateProvider.useCallback[hydrateFromStorage]\": ()=>{\n                                const scrollY = hydratedState.pageState?.scrollPositions?.[hydratedState.pageState.lastVisitedPath || ''];\n                                if (typeof scrollY === 'number') {\n                                    window.scrollTo(0, scrollY);\n                                }\n                            }\n                        }[\"AppStateProvider.useCallback[hydrateFromStorage]\"], 100);\n                    }\n                }\n                // Check for active session in localStorage\n                const activeSessionId = localStorage.getItem('activeSessionId');\n                if (activeSessionId && !hydratedState.chatContext?.currentConversationId) {\n                    dispatch({\n                        type: 'SET_CHAT_CONTEXT',\n                        payload: {\n                            ...hydratedState.chatContext,\n                            currentConversationId: activeSessionId\n                        }\n                    });\n                }\n                // Mark as hydrated\n                setIsStateHydrated(true);\n            } catch (error) {\n                console.error('Error hydrating state:', error);\n                // Even if there's an error, we should mark as hydrated to prevent infinite loading\n                setIsStateHydrated(true);\n            } finally{\n                setIsStateLoading(false);\n            }\n        }\n    }[\"AppStateProvider.useCallback[hydrateFromStorage]\"], []);\n    // Initial hydration on mount\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"AppStateProvider.useEffect\": ()=>{\n            // Set loading state\n            dispatch({\n                type: 'SET_UI_STATE',\n                payload: {\n                    isLoading: true\n                }\n            });\n            // Small delay to allow UI to render loading state\n            const timer = setTimeout({\n                \"AppStateProvider.useEffect.timer\": ()=>{\n                    hydrateFromStorage();\n                    dispatch({\n                        type: 'SET_UI_STATE',\n                        payload: {\n                            isLoading: false\n                        }\n                    });\n                }\n            }[\"AppStateProvider.useEffect.timer\"], 300);\n            return ({\n                \"AppStateProvider.useEffect\": ()=>clearTimeout(timer)\n            })[\"AppStateProvider.useEffect\"];\n        }\n    }[\"AppStateProvider.useEffect\"], [\n        hydrateFromStorage\n    ]);\n    // Listen for changes from other tabs\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"AppStateProvider.useEffect\": ()=>{\n            const handleStorageChange = {\n                \"AppStateProvider.useEffect.handleStorageChange\": (event)=>{\n                    // Only process events for our storage key\n                    const STORAGE_KEY = 'GRACE_DYNAMIC_SNAPSHOT'; // Must match the key in StatePersistenceManager\n                    if (event.key === STORAGE_KEY) {\n                        // Prevent processing our own updates\n                        if (isUpdatingFromStorage.current) {\n                            return;\n                        }\n                        console.log('State changed in another tab, synchronizing...');\n                        try {\n                            // Update flag to prevent circular updates\n                            isUpdatingFromStorage.current = true;\n                            // Parse new state from storage\n                            const newState = event.newValue ? JSON.parse(event.newValue) : null;\n                            // Validate state before applying\n                            if (newState && typeof newState === 'object' && newState.timestamp) {\n                                // Signal that we're syncing from another tab\n                                setIsStateSyncing(true);\n                                // Only apply if the timestamp is newer\n                                if (!state.timestamp || newState.timestamp > state.timestamp) {\n                                    dispatch({\n                                        type: 'HYDRATE_STATE',\n                                        payload: newState\n                                    });\n                                    console.log('State synchronized from another tab');\n                                }\n                            }\n                            // Reset syncing state after a delay\n                            setTimeout({\n                                \"AppStateProvider.useEffect.handleStorageChange\": ()=>setIsStateSyncing(false)\n                            }[\"AppStateProvider.useEffect.handleStorageChange\"], 1000);\n                        } catch (error) {\n                            console.error('Error synchronizing state from another tab:', error);\n                        } finally{\n                            // Reset flag after a short delay\n                            setTimeout({\n                                \"AppStateProvider.useEffect.handleStorageChange\": ()=>{\n                                    isUpdatingFromStorage.current = false;\n                                }\n                            }[\"AppStateProvider.useEffect.handleStorageChange\"], 100);\n                        }\n                    }\n                }\n            }[\"AppStateProvider.useEffect.handleStorageChange\"];\n            // Add event listener for storage events\n            window.addEventListener('storage', handleStorageChange);\n            // Cleanup event listener on unmount\n            return ({\n                \"AppStateProvider.useEffect\": ()=>{\n                    window.removeEventListener('storage', handleStorageChange);\n                }\n            })[\"AppStateProvider.useEffect\"];\n        }\n    }[\"AppStateProvider.useEffect\"], [\n        state.timestamp\n    ]);\n    // Save state to storage whenever it changes with debounce to prevent race conditions\n    const debouncedSaveTimeout = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const lastSavedTimestamp = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(0);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"AppStateProvider.useEffect\": ()=>{\n            // Skip initial render to avoid overwriting with empty state\n            // Only proceed if we have some meaningful state to save\n            const hasContent = Object.keys(state.tradingState || {}).length > 0 || Object.keys(state.walletState || {}).length > 0 || Object.keys(state.chatContext || {}).length > 0 || Object.keys(state.chatState?.sessions || {}).length > 0;\n            if (hasContent) {\n                // Clear any existing timeout to debounce frequent updates\n                if (debouncedSaveTimeout.current !== null) {\n                    clearTimeout(debouncedSaveTimeout.current);\n                }\n                // Debounce state saves to prevent excessive writes and race conditions\n                debouncedSaveTimeout.current = window.setTimeout({\n                    \"AppStateProvider.useEffect\": ()=>{\n                        // Only save if we're not currently processing an update from storage\n                        if (!isUpdatingFromStorage.current) {\n                            // Don't save too frequently - at most once every 2 seconds\n                            const now = Date.now();\n                            if (now - lastSavedTimestamp.current > 2000) {\n                                lastSavedTimestamp.current = now;\n                                // Ensure timestamp is updated\n                                const stateToSave = {\n                                    ...state,\n                                    timestamp: now\n                                };\n                                // Add metadata for debugging\n                                if (state.chatContext?.currentConversationId) {\n                                    console.log(`Saving state with active conversation: ${state.chatContext.currentConversationId}`);\n                                }\n                                try {\n                                    ({\n                                        \"AppStateProvider.useEffect\": async ()=>{\n                                            try {\n                                                await _utils_StatePersistence__WEBPACK_IMPORTED_MODULE_2__[\"default\"].captureSnapshot(stateToSave);\n                                                console.log('State saved to localStorage', new Date().toISOString());\n                                                // Also ensure the activeSessionId is set in localStorage if we have a current conversation\n                                                if (state.chatContext?.currentConversationId) {\n                                                    localStorage.setItem('activeSessionId', state.chatContext.currentConversationId);\n                                                }\n                                            } catch (error) {\n                                                console.error('Error saving state to localStorage:', error);\n                                            }\n                                        }\n                                    })[\"AppStateProvider.useEffect\"]();\n                                } catch (error) {\n                                    console.error('Error in state persistence flow:', error);\n                                }\n                            }\n                        }\n                        debouncedSaveTimeout.current = null;\n                    }\n                }[\"AppStateProvider.useEffect\"], 300); // 300ms debounce time\n            }\n            // Cleanup timeout on unmount\n            return ({\n                \"AppStateProvider.useEffect\": ()=>{\n                    if (debouncedSaveTimeout.current !== null) {\n                        clearTimeout(debouncedSaveTimeout.current);\n                    }\n                }\n            })[\"AppStateProvider.useEffect\"];\n        }\n    }[\"AppStateProvider.useEffect\"], [\n        state\n    ]);\n    const contextValue = {\n        state,\n        dispatch,\n        isStateLoading,\n        isStateHydrated,\n        isStateRecovered,\n        isStateSyncing,\n        hydrateFromStorage\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AppStateContext.Provider, {\n        value: contextValue,\n        children: children\n    }, void 0, false, {\n        fileName: \"/home/ubuntu/grace-project/src/ui/context/AppStateContext.tsx\",\n        lineNumber: 548,\n        columnNumber: 5\n    }, this);\n}\n// Custom hook for using the app state\nfunction useAppState() {\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(AppStateContext);\n    if (context === undefined) {\n        throw new Error('useAppState must be used within an AppStateProvider');\n    }\n    return context;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./context/AppStateContext.tsx\n");

/***/ }),

/***/ "(pages-dir-node)/./index.css":
/*!*******************!*\
  !*** ./index.css ***!
  \*******************/
/***/ (() => {



/***/ }),

/***/ "(pages-dir-node)/./node_modules/.pnpm/next@15.4.5_@babel+core@7.28.0_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES&page=%2F&preferredRegion=&absolutePagePath=.%2Fpages%2Findex.tsx&absoluteAppPath=private-next-pages%2F_app&absoluteDocumentPath=private-next-pages%2F_document&middlewareConfigBase64=e30%3D!":
/*!****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/next@15.4.5_@babel+core@7.28.0_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES&page=%2F&preferredRegion=&absolutePagePath=.%2Fpages%2Findex.tsx&absoluteAppPath=private-next-pages%2F_app&absoluteDocumentPath=private-next-pages%2F_document&middlewareConfigBase64=e30%3D! ***!
  \****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   getServerSideProps: () => (/* binding */ getServerSideProps),\n/* harmony export */   getStaticPaths: () => (/* binding */ getStaticPaths),\n/* harmony export */   getStaticProps: () => (/* binding */ getStaticProps),\n/* harmony export */   handler: () => (/* binding */ handler),\n/* harmony export */   reportWebVitals: () => (/* binding */ reportWebVitals),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   unstable_getServerProps: () => (/* binding */ unstable_getServerProps),\n/* harmony export */   unstable_getServerSideProps: () => (/* binding */ unstable_getServerSideProps),\n/* harmony export */   unstable_getStaticParams: () => (/* binding */ unstable_getStaticParams),\n/* harmony export */   unstable_getStaticPaths: () => (/* binding */ unstable_getStaticPaths),\n/* harmony export */   unstable_getStaticProps: () => (/* binding */ unstable_getStaticProps)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_pages_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/pages/module.compiled */ \"(pages-dir-node)/./node_modules/.pnpm/next@15.4.5_@babel+core@7.28.0_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/server/route-modules/pages/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(pages-dir-node)/./node_modules/.pnpm/next@15.4.5_@babel+core@7.28.0_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(pages-dir-node)/./node_modules/.pnpm/next@15.4.5_@babel+core@7.28.0_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(pages-dir-node)/./node_modules/.pnpm/next@15.4.5_@babel+core@7.28.0_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_dist_shared_lib_router_utils_format_url__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/format-url */ \"next/dist/shared/lib/router/utils/format-url\");\n/* harmony import */ var next_dist_shared_lib_router_utils_format_url__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_format_url__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/server/request-meta */ \"(pages-dir-node)/./node_modules/.pnpm/next@15.4.5_@babel+core@7.28.0_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/server/request-meta.js\");\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_app_render_interop_default__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/app-render/interop-default */ \"(pages-dir-node)/./node_modules/.pnpm/next@15.4.5_@babel+core@7.28.0_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/server/app-render/interop-default.js\");\n/* harmony import */ var next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/dist/server/instrumentation/utils */ \"(pages-dir-node)/./node_modules/.pnpm/next@15.4.5_@babel+core@7.28.0_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/server/instrumentation/utils.js\");\n/* harmony import */ var next_dist_shared_lib_page_path_normalize_data_path__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/dist/shared/lib/page-path/normalize-data-path */ \"next/dist/shared/lib/page-path/normalize-data-path\");\n/* harmony import */ var next_dist_shared_lib_page_path_normalize_data_path__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_page_path_normalize_data_path__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/dist/server/response-cache */ \"(pages-dir-node)/./node_modules/.pnpm/next@15.4.5_@babel+core@7.28.0_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/server/response-cache/index.js\");\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(pages-dir-node)/./node_modules/.pnpm/next@15.4.5_@babel+core@7.28.0_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var private_next_pages_document__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! private-next-pages/_document */ \"(pages-dir-node)/./node_modules/.pnpm/next@15.4.5_@babel+core@7.28.0_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/pages/_document.js\");\n/* harmony import */ var private_next_pages_document__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(private_next_pages_document__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var private_next_pages_app__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! private-next-pages/_app */ \"(pages-dir-node)/./pages/_app.tsx\");\n/* harmony import */ var _pages_index_tsx__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./pages/index.tsx */ \"(pages-dir-node)/./pages/index.tsx\");\n/* harmony import */ var next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! next/dist/server/lib/cache-control */ \"(pages-dir-node)/./node_modules/.pnpm/next@15.4.5_@babel+core@7.28.0_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/server/lib/cache-control.js\");\n/* harmony import */ var next_dist_shared_lib_utils__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! next/dist/shared/lib/utils */ \"next/dist/shared/lib/utils\");\n/* harmony import */ var next_dist_shared_lib_utils__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_utils__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var next_dist_lib_redirect_status__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! next/dist/lib/redirect-status */ \"(pages-dir-node)/./node_modules/.pnpm/next@15.4.5_@babel+core@7.28.0_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/lib/redirect-status.js\");\n/* harmony import */ var next_dist_lib_redirect_status__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_redirect_status__WEBPACK_IMPORTED_MODULE_16__);\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! next/dist/lib/constants */ \"(pages-dir-node)/./node_modules/.pnpm/next@15.4.5_@babel+core@7.28.0_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/lib/constants.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_17__);\n/* harmony import */ var next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! next/dist/server/send-payload */ \"(pages-dir-node)/./node_modules/.pnpm/next@15.4.5_@babel+core@7.28.0_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/server/send-payload.js\");\n/* harmony import */ var next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_18__);\n/* harmony import */ var next_dist_server_render_result__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! next/dist/server/render-result */ \"(pages-dir-node)/./node_modules/.pnpm/next@15.4.5_@babel+core@7.28.0_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/server/render-result.js\");\n/* harmony import */ var next_dist_server_response_cache_utils__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! next/dist/server/response-cache/utils */ \"(pages-dir-node)/./node_modules/.pnpm/next@15.4.5_@babel+core@7.28.0_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/server/response-cache/utils.js\");\n/* harmony import */ var next_dist_server_response_cache_utils__WEBPACK_IMPORTED_MODULE_20___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_response_cache_utils__WEBPACK_IMPORTED_MODULE_20__);\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! next/dist/shared/lib/no-fallback-error.external */ \"next/dist/shared/lib/no-fallback-error.external\");\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_21___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_21__);\n/* harmony import */ var next_dist_client_components_redirect_status_code__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! next/dist/client/components/redirect-status-code */ \"(pages-dir-node)/./node_modules/.pnpm/next@15.4.5_@babel+core@7.28.0_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/client/components/redirect-status-code.js\");\n/* harmony import */ var next_dist_client_components_redirect_status_code__WEBPACK_IMPORTED_MODULE_22___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_components_redirect_status_code__WEBPACK_IMPORTED_MODULE_22__);\n/* harmony import */ var next_dist_shared_lib_router_utils_is_bot__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/is-bot */ \"next/dist/shared/lib/router/utils/is-bot\");\n/* harmony import */ var next_dist_shared_lib_router_utils_is_bot__WEBPACK_IMPORTED_MODULE_23___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_is_bot__WEBPACK_IMPORTED_MODULE_23__);\n/* harmony import */ var next_dist_shared_lib_router_utils_add_path_prefix__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/add-path-prefix */ \"next/dist/shared/lib/router/utils/add-path-prefix\");\n/* harmony import */ var next_dist_shared_lib_router_utils_add_path_prefix__WEBPACK_IMPORTED_MODULE_24___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_add_path_prefix__WEBPACK_IMPORTED_MODULE_24__);\n/* harmony import */ var next_dist_shared_lib_router_utils_remove_trailing_slash__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/remove-trailing-slash */ \"next/dist/shared/lib/router/utils/remove-trailing-slash\");\n/* harmony import */ var next_dist_shared_lib_router_utils_remove_trailing_slash__WEBPACK_IMPORTED_MODULE_25___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_remove_trailing_slash__WEBPACK_IMPORTED_MODULE_25__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([private_next_pages_app__WEBPACK_IMPORTED_MODULE_12__]);\nprivate_next_pages_app__WEBPACK_IMPORTED_MODULE_12__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n\n\n\n\n\n\n\n// Import the app and document modules.\n\n\n// Import the userland code.\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Re-export the component (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_10__.hoist)(_pages_index_tsx__WEBPACK_IMPORTED_MODULE_13__, 'default'));\n// Re-export methods.\nconst getStaticProps = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_10__.hoist)(_pages_index_tsx__WEBPACK_IMPORTED_MODULE_13__, 'getStaticProps');\nconst getStaticPaths = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_10__.hoist)(_pages_index_tsx__WEBPACK_IMPORTED_MODULE_13__, 'getStaticPaths');\nconst getServerSideProps = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_10__.hoist)(_pages_index_tsx__WEBPACK_IMPORTED_MODULE_13__, 'getServerSideProps');\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_10__.hoist)(_pages_index_tsx__WEBPACK_IMPORTED_MODULE_13__, 'config');\nconst reportWebVitals = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_10__.hoist)(_pages_index_tsx__WEBPACK_IMPORTED_MODULE_13__, 'reportWebVitals');\n// Re-export legacy methods.\nconst unstable_getStaticProps = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_10__.hoist)(_pages_index_tsx__WEBPACK_IMPORTED_MODULE_13__, 'unstable_getStaticProps');\nconst unstable_getStaticPaths = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_10__.hoist)(_pages_index_tsx__WEBPACK_IMPORTED_MODULE_13__, 'unstable_getStaticPaths');\nconst unstable_getStaticParams = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_10__.hoist)(_pages_index_tsx__WEBPACK_IMPORTED_MODULE_13__, 'unstable_getStaticParams');\nconst unstable_getServerProps = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_10__.hoist)(_pages_index_tsx__WEBPACK_IMPORTED_MODULE_13__, 'unstable_getServerProps');\nconst unstable_getServerSideProps = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_10__.hoist)(_pages_index_tsx__WEBPACK_IMPORTED_MODULE_13__, 'unstable_getServerSideProps');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES,\n        page: \"/index\",\n        pathname: \"/\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    distDir: \".next\" || 0,\n    projectDir:  false || '',\n    components: {\n        // default export might not exist when optimized for data only\n        App: private_next_pages_app__WEBPACK_IMPORTED_MODULE_12__[\"default\"],\n        Document: (private_next_pages_document__WEBPACK_IMPORTED_MODULE_11___default())\n    },\n    userland: _pages_index_tsx__WEBPACK_IMPORTED_MODULE_13__\n});\nasync function handler(req, res, ctx) {\n    var _serverFilesManifest_config_experimental, _serverFilesManifest_config;\n    let srcPage = \"/index\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {} else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = \"false\";\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return;\n    }\n    const { buildId, query, params, parsedUrl, originalQuery, originalPathname, buildManifest, nextFontManifest, serverFilesManifest, reactLoadableManifest, prerenderManifest, isDraftMode, isOnDemandRevalidate, revalidateOnlyGenerated, locale, locales, defaultLocale, routerServerContext, nextConfig, resolvedPathname } = prepareResult;\n    const isExperimentalCompile = serverFilesManifest == null ? void 0 : (_serverFilesManifest_config = serverFilesManifest.config) == null ? void 0 : (_serverFilesManifest_config_experimental = _serverFilesManifest_config.experimental) == null ? void 0 : _serverFilesManifest_config_experimental.isExperimentalCompile;\n    const hasServerProps = Boolean(getServerSideProps);\n    const hasStaticProps = Boolean(getStaticProps);\n    const hasStaticPaths = Boolean(getStaticPaths);\n    const hasGetInitialProps = Boolean((_pages_index_tsx__WEBPACK_IMPORTED_MODULE_13__[\"default\"] || _pages_index_tsx__WEBPACK_IMPORTED_MODULE_13__).getInitialProps);\n    const isAmp = query.amp && config.amp;\n    let cacheKey = null;\n    let isIsrFallback = false;\n    let isNextDataRequest = prepareResult.isNextDataRequest && (hasStaticProps || hasServerProps);\n    const is404Page = srcPage === '/404';\n    const is500Page = srcPage === '/500';\n    const isErrorPage = srcPage === '/_error';\n    if (!routeModule.isDev && !isDraftMode && hasStaticProps) {\n        cacheKey = `${locale ? `/${locale}` : ''}${(srcPage === '/' || resolvedPathname === '/') && locale ? '' : resolvedPathname}${isAmp ? '.amp' : ''}`;\n        if (is404Page || is500Page || isErrorPage) {\n            cacheKey = `${locale ? `/${locale}` : ''}${srcPage}${isAmp ? '.amp' : ''}`;\n        }\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    if (hasStaticPaths && !isDraftMode) {\n        const decodedPathname = (0,next_dist_shared_lib_router_utils_remove_trailing_slash__WEBPACK_IMPORTED_MODULE_25__.removeTrailingSlash)(locale ? (0,next_dist_shared_lib_router_utils_add_path_prefix__WEBPACK_IMPORTED_MODULE_24__.addPathPrefix)(resolvedPathname, `/${locale}`) : resolvedPathname);\n        const isPrerendered = Boolean(prerenderManifest.routes[decodedPathname]) || prerenderManifest.notFoundRoutes.includes(decodedPathname);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[srcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_21__.NoFallbackError();\n            }\n            if (typeof prerenderInfo.fallback === 'string' && !isPrerendered && !isNextDataRequest) {\n                isIsrFallback = true;\n            }\n        }\n    }\n    // When serving a bot request, we want to serve a blocking render and not\n    // the prerendered page. This ensures that the correct content is served\n    // to the bot in the head.\n    if (isIsrFallback && (0,next_dist_shared_lib_router_utils_is_bot__WEBPACK_IMPORTED_MODULE_23__.isBot)(req.headers['user-agent'] || '') || (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_5__.getRequestMeta)(req, 'minimalMode')) {\n        isIsrFallback = false;\n    }\n    const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_3__.getTracer)();\n    const activeSpan = tracer.getActiveScopeSpan();\n    try {\n        const method = req.method || 'GET';\n        const resolvedUrl = (0,next_dist_shared_lib_router_utils_format_url__WEBPACK_IMPORTED_MODULE_4__.formatUrl)({\n            pathname: nextConfig.trailingSlash ? parsedUrl.pathname : (0,next_dist_shared_lib_router_utils_remove_trailing_slash__WEBPACK_IMPORTED_MODULE_25__.removeTrailingSlash)(parsedUrl.pathname || '/'),\n            // make sure to only add query values from original URL\n            query: hasStaticProps ? {} : originalQuery\n        });\n        const publicRuntimeConfig = (routerServerContext == null ? void 0 : routerServerContext.publicRuntimeConfig) || nextConfig.publicRuntimeConfig;\n        const handleResponse = async (span)=>{\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                var _previousCacheEntry_value;\n                const doRender = async ()=>{\n                    try {\n                        var _nextConfig_i18n, _nextConfig_experimental_amp, _nextConfig_experimental_amp1;\n                        return await routeModule.render(req, res, {\n                            query: hasStaticProps && !isExperimentalCompile ? {\n                                ...params,\n                                ...isAmp ? {\n                                    amp: query.amp\n                                } : {}\n                            } : {\n                                ...query,\n                                ...params\n                            },\n                            params,\n                            page: srcPage,\n                            renderContext: {\n                                isDraftMode,\n                                isFallback: isIsrFallback,\n                                developmentNotFoundSourcePage: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_5__.getRequestMeta)(req, 'developmentNotFoundSourcePage')\n                            },\n                            sharedContext: {\n                                buildId,\n                                customServer: Boolean(routerServerContext == null ? void 0 : routerServerContext.isCustomServer) || undefined,\n                                deploymentId: false\n                            },\n                            renderOpts: {\n                                params,\n                                routeModule,\n                                page: srcPage,\n                                pageConfig: config || {},\n                                Component: (0,next_dist_server_app_render_interop_default__WEBPACK_IMPORTED_MODULE_6__.interopDefault)(_pages_index_tsx__WEBPACK_IMPORTED_MODULE_13__),\n                                ComponentMod: _pages_index_tsx__WEBPACK_IMPORTED_MODULE_13__,\n                                getStaticProps,\n                                getStaticPaths,\n                                getServerSideProps,\n                                supportsDynamicResponse: !hasStaticProps,\n                                buildManifest,\n                                nextFontManifest,\n                                reactLoadableManifest,\n                                assetPrefix: nextConfig.assetPrefix,\n                                strictNextHead: nextConfig.experimental.strictNextHead ?? true,\n                                previewProps: prerenderManifest.preview,\n                                images: nextConfig.images,\n                                nextConfigOutput: nextConfig.output,\n                                optimizeCss: Boolean(nextConfig.experimental.optimizeCss),\n                                nextScriptWorkers: Boolean(nextConfig.experimental.nextScriptWorkers),\n                                domainLocales: (_nextConfig_i18n = nextConfig.i18n) == null ? void 0 : _nextConfig_i18n.domains,\n                                crossOrigin: nextConfig.crossOrigin,\n                                multiZoneDraftMode,\n                                basePath: nextConfig.basePath,\n                                canonicalBase: nextConfig.amp.canonicalBase || '',\n                                ampOptimizerConfig: (_nextConfig_experimental_amp = nextConfig.experimental.amp) == null ? void 0 : _nextConfig_experimental_amp.optimizer,\n                                disableOptimizedLoading: nextConfig.experimental.disableOptimizedLoading,\n                                largePageDataBytes: nextConfig.experimental.largePageDataBytes,\n                                // Only the `publicRuntimeConfig` key is exposed to the client side\n                                // It'll be rendered as part of __NEXT_DATA__ on the client side\n                                runtimeConfig: Object.keys(publicRuntimeConfig).length > 0 ? publicRuntimeConfig : undefined,\n                                isExperimentalCompile,\n                                experimental: {\n                                    clientTraceMetadata: nextConfig.experimental.clientTraceMetadata || []\n                                },\n                                locale,\n                                locales,\n                                defaultLocale,\n                                setIsrStatus: routerServerContext == null ? void 0 : routerServerContext.setIsrStatus,\n                                isNextDataRequest: isNextDataRequest && (hasServerProps || hasStaticProps),\n                                resolvedUrl,\n                                // For getServerSideProps and getInitialProps we need to ensure we use the original URL\n                                // and not the resolved URL to prevent a hydration mismatch on\n                                // asPath\n                                resolvedAsPath: hasServerProps || hasGetInitialProps ? (0,next_dist_shared_lib_router_utils_format_url__WEBPACK_IMPORTED_MODULE_4__.formatUrl)({\n                                    // we use the original URL pathname less the _next/data prefix if\n                                    // present\n                                    pathname: isNextDataRequest ? (0,next_dist_shared_lib_page_path_normalize_data_path__WEBPACK_IMPORTED_MODULE_8__.normalizeDataPath)(originalPathname) : originalPathname,\n                                    query: originalQuery\n                                }) : resolvedUrl,\n                                isOnDemandRevalidate,\n                                ErrorDebug: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_5__.getRequestMeta)(req, 'PagesErrorDebug'),\n                                err: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_5__.getRequestMeta)(req, 'invokeError'),\n                                dev: routeModule.isDev,\n                                // needed for experimental.optimizeCss feature\n                                distDir: `${routeModule.projectDir}/${routeModule.distDir}`,\n                                ampSkipValidation: (_nextConfig_experimental_amp1 = nextConfig.experimental.amp) == null ? void 0 : _nextConfig_experimental_amp1.skipValidation,\n                                ampValidator: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_5__.getRequestMeta)(req, 'ampValidator')\n                            }\n                        }).then((renderResult)=>{\n                            const { metadata } = renderResult;\n                            let cacheControl = metadata.cacheControl;\n                            if ('isNotFound' in metadata && metadata.isNotFound) {\n                                return {\n                                    value: null,\n                                    cacheControl\n                                };\n                            }\n                            // Handle `isRedirect`.\n                            if (metadata.isRedirect) {\n                                return {\n                                    value: {\n                                        kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_9__.CachedRouteKind.REDIRECT,\n                                        props: metadata.pageData ?? metadata.flightData\n                                    },\n                                    cacheControl\n                                };\n                            }\n                            return {\n                                value: {\n                                    kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_9__.CachedRouteKind.PAGES,\n                                    html: renderResult,\n                                    pageData: renderResult.metadata.pageData,\n                                    headers: renderResult.metadata.headers,\n                                    status: renderResult.metadata.statusCode\n                                },\n                                cacheControl\n                            };\n                        }).finally(()=>{\n                            if (!span) return;\n                            span.setAttributes({\n                                'http.status_code': res.statusCode,\n                                'next.rsc': false\n                            });\n                            const rootSpanAttributes = tracer.getRootSpanAttributes();\n                            // We were unable to get attributes, probably OTEL is not enabled\n                            if (!rootSpanAttributes) {\n                                return;\n                            }\n                            if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_2__.BaseServerSpan.handleRequest) {\n                                console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                                return;\n                            }\n                            const route = rootSpanAttributes.get('next.route');\n                            if (route) {\n                                const name = `${method} ${route}`;\n                                span.setAttributes({\n                                    'next.route': route,\n                                    'http.route': route,\n                                    'next.span_name': name\n                                });\n                                span.updateName(name);\n                            } else {\n                                span.updateName(`${method} ${req.url}`);\n                            }\n                        });\n                    } catch (err) {\n                        // if this is a background revalidate we need to report\n                        // the request error here as it won't be bubbled\n                        if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                            await routeModule.onRequestError(req, err, {\n                                routerKind: 'Pages Router',\n                                routePath: srcPage,\n                                routeType: 'render',\n                                revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_7__.getRevalidateReason)({\n                                    isRevalidate: hasStaticProps,\n                                    isOnDemandRevalidate\n                                })\n                            }, routerServerContext);\n                        }\n                        throw err;\n                    }\n                };\n                // if we've already generated this page we no longer\n                // serve the fallback\n                if (previousCacheEntry) {\n                    isIsrFallback = false;\n                }\n                if (isIsrFallback) {\n                    const fallbackResponse = await routeModule.getResponseCache(req).get(routeModule.isDev ? null : locale ? `/${locale}${srcPage}` : srcPage, async ({ previousCacheEntry: previousFallbackCacheEntry = null })=>{\n                        if (!routeModule.isDev) {\n                            return (0,next_dist_server_response_cache_utils__WEBPACK_IMPORTED_MODULE_20__.toResponseCacheEntry)(previousFallbackCacheEntry);\n                        }\n                        return doRender();\n                    }, {\n                        routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES,\n                        isFallback: true,\n                        isRoutePPREnabled: false,\n                        isOnDemandRevalidate: false,\n                        incrementalCache: await routeModule.getIncrementalCache(req, nextConfig, prerenderManifest),\n                        waitUntil: ctx.waitUntil\n                    });\n                    if (fallbackResponse) {\n                        // Remove the cache control from the response to prevent it from being\n                        // used in the surrounding cache.\n                        delete fallbackResponse.cacheControl;\n                        fallbackResponse.isMiss = true;\n                        return fallbackResponse;\n                    }\n                }\n                if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_5__.getRequestMeta)(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                    res.statusCode = 404;\n                    // on-demand revalidate always sets this header\n                    res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                    res.end('This page could not be found');\n                    return null;\n                }\n                if (isIsrFallback && (previousCacheEntry == null ? void 0 : (_previousCacheEntry_value = previousCacheEntry.value) == null ? void 0 : _previousCacheEntry_value.kind) === next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_9__.CachedRouteKind.PAGES) {\n                    return {\n                        value: {\n                            kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_9__.CachedRouteKind.PAGES,\n                            html: new next_dist_server_render_result__WEBPACK_IMPORTED_MODULE_19__[\"default\"](Buffer.from(previousCacheEntry.value.html), {\n                                contentType: 'text/html;utf-8',\n                                metadata: {\n                                    statusCode: previousCacheEntry.value.status,\n                                    headers: previousCacheEntry.value.headers\n                                }\n                            }),\n                            pageData: {},\n                            status: previousCacheEntry.value.status,\n                            headers: previousCacheEntry.value.headers\n                        },\n                        cacheControl: {\n                            revalidate: 0,\n                            expire: undefined\n                        }\n                    };\n                }\n                return doRender();\n            };\n            const result = await routeModule.handleResponse({\n                cacheKey,\n                req,\n                nextConfig,\n                routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                waitUntil: ctx.waitUntil,\n                responseGenerator: responseGenerator,\n                prerenderManifest\n            });\n            // if we got a cache hit this wasn't an ISR fallback\n            // but it wasn't generated during build so isn't in the\n            // prerender-manifest\n            if (isIsrFallback && !(result == null ? void 0 : result.isMiss)) {\n                isIsrFallback = false;\n            }\n            // response is finished is no cache entry\n            if (!result) {\n                return;\n            }\n            if (hasStaticProps && !(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_5__.getRequestMeta)(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : result.isMiss ? 'MISS' : result.isStale ? 'STALE' : 'HIT');\n            }\n            let cacheControl;\n            if (!hasStaticProps || isIsrFallback) {\n                if (!res.getHeader('Cache-Control')) {\n                    cacheControl = {\n                        revalidate: 0,\n                        expire: undefined\n                    };\n                }\n            } else if (is404Page) {\n                const notFoundRevalidate = (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_5__.getRequestMeta)(req, 'notFoundRevalidate');\n                cacheControl = {\n                    revalidate: typeof notFoundRevalidate === 'undefined' ? 0 : notFoundRevalidate,\n                    expire: undefined\n                };\n            } else if (is500Page) {\n                cacheControl = {\n                    revalidate: 0,\n                    expire: undefined\n                };\n            } else if (result.cacheControl) {\n                // If the cache entry has a cache control with a revalidate value that's\n                // a number, use it.\n                if (typeof result.cacheControl.revalidate === 'number') {\n                    var _result_cacheControl;\n                    if (result.cacheControl.revalidate < 1) {\n                        throw Object.defineProperty(new Error(`Invalid revalidate configuration provided: ${result.cacheControl.revalidate} < 1`), \"__NEXT_ERROR_CODE\", {\n                            value: \"E22\",\n                            enumerable: false,\n                            configurable: true\n                        });\n                    }\n                    cacheControl = {\n                        revalidate: result.cacheControl.revalidate,\n                        expire: ((_result_cacheControl = result.cacheControl) == null ? void 0 : _result_cacheControl.expire) ?? nextConfig.expireTime\n                    };\n                } else {\n                    // revalidate: false\n                    cacheControl = {\n                        revalidate: next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_17__.CACHE_ONE_YEAR,\n                        expire: undefined\n                    };\n                }\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheControl && !res.getHeader('Cache-Control')) {\n                res.setHeader('Cache-Control', (0,next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_14__.getCacheControlHeader)(cacheControl));\n            }\n            // notFound: true case\n            if (!result.value) {\n                var _result_cacheControl1;\n                // add revalidate metadata before rendering 404 page\n                // so that we can use this as source of truth for the\n                // cache-control header instead of what the 404 page returns\n                // for the revalidate value\n                (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_5__.addRequestMeta)(req, 'notFoundRevalidate', (_result_cacheControl1 = result.cacheControl) == null ? void 0 : _result_cacheControl1.revalidate);\n                res.statusCode = 404;\n                if (isNextDataRequest) {\n                    res.end('{\"notFound\":true}');\n                    return;\n                }\n                // TODO: should route-module itself handle rendering the 404\n                if (routerServerContext == null ? void 0 : routerServerContext.render404) {\n                    await routerServerContext.render404(req, res, parsedUrl, false);\n                } else {\n                    res.end('This page could not be found');\n                }\n                return;\n            }\n            if (result.value.kind === next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_9__.CachedRouteKind.REDIRECT) {\n                if (isNextDataRequest) {\n                    res.setHeader('content-type', 'application/json');\n                    res.end(JSON.stringify(result.value.props));\n                    return;\n                } else {\n                    const handleRedirect = (pageData)=>{\n                        const redirect = {\n                            destination: pageData.pageProps.__N_REDIRECT,\n                            statusCode: pageData.pageProps.__N_REDIRECT_STATUS,\n                            basePath: pageData.pageProps.__N_REDIRECT_BASE_PATH\n                        };\n                        const statusCode = (0,next_dist_lib_redirect_status__WEBPACK_IMPORTED_MODULE_16__.getRedirectStatus)(redirect);\n                        const { basePath } = nextConfig;\n                        if (basePath && redirect.basePath !== false && redirect.destination.startsWith('/')) {\n                            redirect.destination = `${basePath}${redirect.destination}`;\n                        }\n                        if (redirect.destination.startsWith('/')) {\n                            redirect.destination = (0,next_dist_shared_lib_utils__WEBPACK_IMPORTED_MODULE_15__.normalizeRepeatedSlashes)(redirect.destination);\n                        }\n                        res.statusCode = statusCode;\n                        res.setHeader('Location', redirect.destination);\n                        if (statusCode === next_dist_client_components_redirect_status_code__WEBPACK_IMPORTED_MODULE_22__.RedirectStatusCode.PermanentRedirect) {\n                            res.setHeader('Refresh', `0;url=${redirect.destination}`);\n                        }\n                        res.end(redirect.destination);\n                    };\n                    await handleRedirect(result.value.props);\n                    return null;\n                }\n            }\n            if (result.value.kind !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_9__.CachedRouteKind.PAGES) {\n                throw Object.defineProperty(new Error(`Invariant: received non-pages cache entry in pages handler`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E695\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            // In dev, we should not cache pages for any reason.\n            if (routeModule.isDev) {\n                res.setHeader('Cache-Control', 'no-store, must-revalidate');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            // when invoking _error before pages/500 we don't actually\n            // send the _error response\n            if ((0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_5__.getRequestMeta)(req, 'customErrorRender') || isErrorPage && (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_5__.getRequestMeta)(req, 'minimalMode') && res.statusCode === 500) {\n                return null;\n            }\n            await (0,next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_18__.sendRenderResult)({\n                req,\n                res,\n                // If we are rendering the error page it's not a data request\n                // anymore\n                result: isNextDataRequest && !isErrorPage && !is500Page ? new next_dist_server_render_result__WEBPACK_IMPORTED_MODULE_19__[\"default\"](Buffer.from(JSON.stringify(result.value.pageData)), {\n                    contentType: 'application/json',\n                    metadata: result.value.html.metadata\n                }) : result.value.html,\n                generateEtags: nextConfig.generateEtags,\n                poweredByHeader: nextConfig.poweredByHeader,\n                cacheControl: routeModule.isDev ? undefined : cacheControl,\n                type: isNextDataRequest ? 'json' : 'html'\n            });\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse();\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_2__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_3__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        if (!(err instanceof next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_21__.NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'Pages Router',\n                routePath: srcPage,\n                routeType: 'render',\n                revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_7__.getRevalidateReason)({\n                    isRevalidate: hasStaticProps,\n                    isOnDemandRevalidate\n                })\n            }, routerServerContext);\n        }\n        // rethrow so that we can handle serving error page\n        throw err;\n    }\n}\n\n//# sourceMappingURL=pages.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./node_modules/.pnpm/next@15.4.5_@babel+core@7.28.0_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES&page=%2F&preferredRegion=&absolutePagePath=.%2Fpages%2Findex.tsx&absoluteAppPath=private-next-pages%2F_app&absoluteDocumentPath=private-next-pages%2F_document&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(pages-dir-node)/./pages/Layout.tsx":
/*!**************************!*\
  !*** ./pages/Layout.tsx ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Layout)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/link */ \"(pages-dir-node)/./node_modules/.pnpm/next@15.4.5_@babel+core@7.28.0_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/link.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/router */ \"(pages-dir-node)/./node_modules/.pnpm/next@15.4.5_@babel+core@7.28.0_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _components_AuthContext__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/AuthContext */ \"(pages-dir-node)/./components/AuthContext.tsx\");\n/* harmony import */ var _context_AppStateContext__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../context/AppStateContext */ \"(pages-dir-node)/./context/AppStateContext.tsx\");\n/* harmony import */ var _components_LogoutButton__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../components/LogoutButton */ \"(pages-dir-node)/./components/LogoutButton.tsx\");\n// src/ui/pages/Layout.tsx\n\n\n\n\n\n\n\n// Use a static public path for the logo to avoid bundling object URLs\nconst logoPath = '/assets/grace_logo_gold.png';\nfunction Layout({ children }) {\n    const router = (0,next_router__WEBPACK_IMPORTED_MODULE_3__.useRouter)();\n    const { pathname } = router;\n    const { user } = (0,_components_AuthContext__WEBPACK_IMPORTED_MODULE_4__.useAuth)();\n    const [mobileMenuOpen, setMobileMenuOpen] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Use the AppState context\n    const { dispatch, hydrateFromStorage } = (0,_context_AppStateContext__WEBPACK_IMPORTED_MODULE_5__.useAppState)();\n    // Capture page state on path change\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"Layout.useEffect\": ()=>{\n            if (user) {\n                dispatch({\n                    type: 'SET_PAGE_STATE',\n                    payload: {\n                        lastVisitedPath: pathname\n                    }\n                });\n            }\n        }\n    }[\"Layout.useEffect\"], [\n        pathname,\n        user,\n        dispatch\n    ]);\n    // Removed beforeunload prompt to allow smooth navigation\n    // Hydrate state on initial load\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"Layout.useEffect\": ()=>{\n            if (user) {\n                hydrateFromStorage({\n                    \"Layout.useEffect\": (path)=>{\n                        router.push(path);\n                    }\n                }[\"Layout.useEffect\"]);\n            }\n        }\n    }[\"Layout.useEffect\"], [\n        user,\n        router,\n        hydrateFromStorage\n    ]);\n    const navLinks = [\n        {\n            name: 'Chat',\n            path: '/chat'\n        },\n        {\n            name: 'Wallet',\n            path: '/wallet'\n        },\n        {\n            name: 'Trading',\n            path: '/trading'\n        },\n        {\n            name: 'Social',\n            path: '/social'\n        },\n        {\n            name: 'Settings',\n            path: '/settings'\n        }\n    ];\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"min-h-screen bg-gradient-to-b from-[#140000] to-black text-white flex flex-col items-center\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"header\", {\n                className: \"w-full max-w-screen-md text-center border-b border-red-700 pb-1 mb-2\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                        src: logoPath,\n                        alt: \"Grace Logo\",\n                        className: \"w-48 md:w-56 mx-auto mt-2 mb-1\"\n                    }, void 0, false, {\n                        fileName: \"/home/ubuntu/grace-project/src/ui/pages/Layout.tsx\",\n                        lineNumber: 56,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        className: \"md:hidden absolute right-4 top-6 text-white p-2\",\n                        onClick: ()=>setMobileMenuOpen(!mobileMenuOpen),\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                            xmlns: \"http://www.w3.org/2000/svg\",\n                            className: \"h-6 w-6\",\n                            fill: \"none\",\n                            viewBox: \"0 0 24 24\",\n                            stroke: \"currentColor\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                strokeLinecap: \"round\",\n                                strokeLinejoin: \"round\",\n                                strokeWidth: 2,\n                                d: mobileMenuOpen ? \"M6 18L18 6M6 6l12 12\" : \"M4 6h16M4 12h16M4 18h16\"\n                            }, void 0, false, {\n                                fileName: \"/home/ubuntu/grace-project/src/ui/pages/Layout.tsx\",\n                                lineNumber: 64,\n                                columnNumber: 13\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/home/ubuntu/grace-project/src/ui/pages/Layout.tsx\",\n                            lineNumber: 63,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/home/ubuntu/grace-project/src/ui/pages/Layout.tsx\",\n                        lineNumber: 59,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"nav\", {\n                        className: `\n          ${mobileMenuOpen ? 'flex' : 'hidden'} \n          md:flex \n          flex-col md:flex-row \n          justify-center \n          md:space-x-6 md:space-y-0 \n          space-y-4 \n          text-red-300 text-lg md:text-xl font-mono\n          w-full \n          pb-1\n        `,\n                        children: [\n                            navLinks.map((link)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                                    href: link.path,\n                                    onClick: ()=>setMobileMenuOpen(false),\n                                    className: `transition-all hover:text-red-400 pb-1 ${pathname === link.path ? 'text-red-300 border-b border-red-500' : 'text-white'}`,\n                                    children: link.name\n                                }, link.path, false, {\n                                    fileName: \"/home/ubuntu/grace-project/src/ui/pages/Layout.tsx\",\n                                    lineNumber: 81,\n                                    columnNumber: 13\n                                }, this)),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_LogoutButton__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {}, void 0, false, {\n                                fileName: \"/home/ubuntu/grace-project/src/ui/pages/Layout.tsx\",\n                                lineNumber: 90,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/home/ubuntu/grace-project/src/ui/pages/Layout.tsx\",\n                        lineNumber: 69,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/home/ubuntu/grace-project/src/ui/pages/Layout.tsx\",\n                lineNumber: 55,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"main\", {\n                className: \"w-full max-w-screen-md px-4 py-3 flex-grow\",\n                children: children\n            }, void 0, false, {\n                fileName: \"/home/ubuntu/grace-project/src/ui/pages/Layout.tsx\",\n                lineNumber: 93,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/home/ubuntu/grace-project/src/ui/pages/Layout.tsx\",\n        lineNumber: 54,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS8uL3BhZ2VzL0xheW91dC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsMEJBQTBCOztBQUVvQztBQUNqQztBQUNXO0FBQ1k7QUFDSztBQUNIO0FBRXRELHNFQUFzRTtBQUN0RSxNQUFNUSxXQUFXO0FBTUYsU0FBU0MsT0FBTyxFQUFFQyxRQUFRLEVBQWU7SUFDdEQsTUFBTUMsU0FBU1Asc0RBQVNBO0lBQ3hCLE1BQU0sRUFBRVEsUUFBUSxFQUFFLEdBQUdEO0lBQ3JCLE1BQU0sRUFBRUUsSUFBSSxFQUFFLEdBQUdSLGdFQUFPQTtJQUN4QixNQUFNLENBQUNTLGdCQUFnQkMsa0JBQWtCLEdBQUdkLCtDQUFRQSxDQUFDO0lBRXJELDJCQUEyQjtJQUMzQixNQUFNLEVBQUVlLFFBQVEsRUFBRUMsa0JBQWtCLEVBQUUsR0FBR1gscUVBQVdBO0lBRXBELG9DQUFvQztJQUNwQ0osZ0RBQVNBOzRCQUFDO1lBQ1IsSUFBSVcsTUFBTTtnQkFDUkcsU0FBUztvQkFDUEUsTUFBTTtvQkFDTkMsU0FBUzt3QkFBRUMsaUJBQWlCUjtvQkFBUztnQkFDdkM7WUFDRjtRQUNGOzJCQUFHO1FBQUNBO1FBQVVDO1FBQU1HO0tBQVM7SUFFN0IseURBQXlEO0lBRXpELGdDQUFnQztJQUNoQ2QsZ0RBQVNBOzRCQUFDO1lBQ1IsSUFBSVcsTUFBTTtnQkFDUkk7d0NBQW1CLENBQUNJO3dCQUFXVixPQUFPVyxJQUFJLENBQUNEO29CQUFPOztZQUNwRDtRQUNGOzJCQUFHO1FBQUNSO1FBQU1GO1FBQVFNO0tBQW1CO0lBRXJDLE1BQU1NLFdBQVc7UUFDZjtZQUFFQyxNQUFNO1lBQVFILE1BQU07UUFBUTtRQUM5QjtZQUFFRyxNQUFNO1lBQVVILE1BQU07UUFBVTtRQUNsQztZQUFFRyxNQUFNO1lBQVdILE1BQU07UUFBVztRQUNwQztZQUFFRyxNQUFNO1lBQVVILE1BQU07UUFBVTtRQUNsQztZQUFFRyxNQUFNO1lBQVlILE1BQU07UUFBWTtLQUN2QztJQUVELHFCQUNFLDhEQUFDSTtRQUFJQyxXQUFVOzswQkFDYiw4REFBQ0M7Z0JBQU9ELFdBQVU7O2tDQUNoQiw4REFBQ0U7d0JBQUlDLEtBQUtyQjt3QkFBVXNCLEtBQUk7d0JBQWFKLFdBQVU7Ozs7OztrQ0FHL0MsOERBQUNLO3dCQUNDTCxXQUFVO3dCQUNWTSxTQUFTLElBQU1qQixrQkFBa0IsQ0FBQ0Q7a0NBRWxDLDRFQUFDbUI7NEJBQUlDLE9BQU07NEJBQTZCUixXQUFVOzRCQUFVUyxNQUFLOzRCQUFPQyxTQUFROzRCQUFZQyxRQUFPO3NDQUNqRyw0RUFBQ2hCO2dDQUFLaUIsZUFBYztnQ0FBUUMsZ0JBQWU7Z0NBQVFDLGFBQWE7Z0NBQUdDLEdBQUczQixpQkFBaUIseUJBQXlCOzs7Ozs7Ozs7Ozs7Ozs7O2tDQUtwSCw4REFBQzRCO3dCQUFJaEIsV0FBVyxDQUFDO1VBQ2YsRUFBRVosaUJBQWlCLFNBQVMsU0FBUzs7Ozs7Ozs7O1FBU3ZDLENBQUM7OzRCQUNFUyxTQUFTb0IsR0FBRyxDQUFDLENBQUNDLHFCQUNiLDhEQUFDekMsa0RBQUlBO29DQUVIMEMsTUFBTUQsS0FBS3ZCLElBQUk7b0NBQ2ZXLFNBQVMsSUFBTWpCLGtCQUFrQjtvQ0FDakNXLFdBQVcsQ0FBQyx1Q0FBdUMsRUFBRWQsYUFBYWdDLEtBQUt2QixJQUFJLEdBQUcseUNBQXlDLGNBQWM7OENBRXBJdUIsS0FBS3BCLElBQUk7bUNBTExvQixLQUFLdkIsSUFBSTs7Ozs7MENBUWxCLDhEQUFDZCxnRUFBWUE7Ozs7Ozs7Ozs7Ozs7Ozs7OzBCQUdqQiw4REFBQ3VDO2dCQUFLcEIsV0FBVTswQkFDYmhCOzs7Ozs7Ozs7Ozs7QUFJVCIsInNvdXJjZXMiOlsiL2hvbWUvdWJ1bnR1L2dyYWNlLXByb2plY3Qvc3JjL3VpL3BhZ2VzL0xheW91dC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL3VpL3BhZ2VzL0xheW91dC50c3hcblxuaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QsIFJlYWN0Tm9kZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBMaW5rIGZyb20gJ25leHQvbGluayc7XG5pbXBvcnQgeyB1c2VSb3V0ZXIgfSBmcm9tICduZXh0L3JvdXRlcic7XG5pbXBvcnQgeyB1c2VBdXRoIH0gZnJvbSAnLi4vY29tcG9uZW50cy9BdXRoQ29udGV4dCc7XG5pbXBvcnQgeyB1c2VBcHBTdGF0ZSB9IGZyb20gJy4uL2NvbnRleHQvQXBwU3RhdGVDb250ZXh0JztcbmltcG9ydCBMb2dvdXRCdXR0b24gZnJvbSAnLi4vY29tcG9uZW50cy9Mb2dvdXRCdXR0b24nO1xuXG4vLyBVc2UgYSBzdGF0aWMgcHVibGljIHBhdGggZm9yIHRoZSBsb2dvIHRvIGF2b2lkIGJ1bmRsaW5nIG9iamVjdCBVUkxzXG5jb25zdCBsb2dvUGF0aCA9ICcvYXNzZXRzL2dyYWNlX2xvZ29fZ29sZC5wbmcnO1xuXG5pbnRlcmZhY2UgTGF5b3V0UHJvcHMge1xuICBjaGlsZHJlbj86IFJlYWN0Tm9kZTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTGF5b3V0KHsgY2hpbGRyZW4gfTogTGF5b3V0UHJvcHMpIHtcbiAgY29uc3Qgcm91dGVyID0gdXNlUm91dGVyKCk7XG4gIGNvbnN0IHsgcGF0aG5hbWUgfSA9IHJvdXRlcjtcbiAgY29uc3QgeyB1c2VyIH0gPSB1c2VBdXRoKCk7XG4gIGNvbnN0IFttb2JpbGVNZW51T3Blbiwgc2V0TW9iaWxlTWVudU9wZW5dID0gdXNlU3RhdGUoZmFsc2UpO1xuXG4gIC8vIFVzZSB0aGUgQXBwU3RhdGUgY29udGV4dFxuICBjb25zdCB7IGRpc3BhdGNoLCBoeWRyYXRlRnJvbVN0b3JhZ2UgfSA9IHVzZUFwcFN0YXRlKCk7XG4gIFxuICAvLyBDYXB0dXJlIHBhZ2Ugc3RhdGUgb24gcGF0aCBjaGFuZ2VcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAodXNlcikge1xuICAgICAgZGlzcGF0Y2goe1xuICAgICAgICB0eXBlOiAnU0VUX1BBR0VfU1RBVEUnLFxuICAgICAgICBwYXlsb2FkOiB7IGxhc3RWaXNpdGVkUGF0aDogcGF0aG5hbWUgfVxuICAgICAgfSk7XG4gICAgfVxuICB9LCBbcGF0aG5hbWUsIHVzZXIsIGRpc3BhdGNoXSk7XG5cbiAgLy8gUmVtb3ZlZCBiZWZvcmV1bmxvYWQgcHJvbXB0IHRvIGFsbG93IHNtb290aCBuYXZpZ2F0aW9uXG5cbiAgLy8gSHlkcmF0ZSBzdGF0ZSBvbiBpbml0aWFsIGxvYWRcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAodXNlcikge1xuICAgICAgaHlkcmF0ZUZyb21TdG9yYWdlKChwYXRoKSA9PiB7IHJvdXRlci5wdXNoKHBhdGgpOyB9KTtcbiAgICB9XG4gIH0sIFt1c2VyLCByb3V0ZXIsIGh5ZHJhdGVGcm9tU3RvcmFnZV0pO1xuXG4gIGNvbnN0IG5hdkxpbmtzID0gW1xuICAgIHsgbmFtZTogJ0NoYXQnLCBwYXRoOiAnL2NoYXQnIH0sXG4gICAgeyBuYW1lOiAnV2FsbGV0JywgcGF0aDogJy93YWxsZXQnIH0sXG4gICAgeyBuYW1lOiAnVHJhZGluZycsIHBhdGg6ICcvdHJhZGluZycgfSxcbiAgICB7IG5hbWU6ICdTb2NpYWwnLCBwYXRoOiAnL3NvY2lhbCcgfSxcbiAgICB7IG5hbWU6ICdTZXR0aW5ncycsIHBhdGg6ICcvc2V0dGluZ3MnIH0sXG4gIF07XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cIm1pbi1oLXNjcmVlbiBiZy1ncmFkaWVudC10by1iIGZyb20tWyMxNDAwMDBdIHRvLWJsYWNrIHRleHQtd2hpdGUgZmxleCBmbGV4LWNvbCBpdGVtcy1jZW50ZXJcIj5cbiAgICAgIDxoZWFkZXIgY2xhc3NOYW1lPVwidy1mdWxsIG1heC13LXNjcmVlbi1tZCB0ZXh0LWNlbnRlciBib3JkZXItYiBib3JkZXItcmVkLTcwMCBwYi0xIG1iLTJcIj5cbiAgICAgICAgPGltZyBzcmM9e2xvZ29QYXRofSBhbHQ9XCJHcmFjZSBMb2dvXCIgY2xhc3NOYW1lPVwidy00OCBtZDp3LTU2IG14LWF1dG8gbXQtMiBtYi0xXCIgLz5cbiAgICAgICAgXG4gICAgICAgIHsvKiBNb2JpbGUgaGFtYnVyZ2VyIGJ1dHRvbiAqL31cbiAgICAgICAgPGJ1dHRvbiBcbiAgICAgICAgICBjbGFzc05hbWU9XCJtZDpoaWRkZW4gYWJzb2x1dGUgcmlnaHQtNCB0b3AtNiB0ZXh0LXdoaXRlIHAtMlwiIFxuICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHNldE1vYmlsZU1lbnVPcGVuKCFtb2JpbGVNZW51T3Blbil9XG4gICAgICAgID5cbiAgICAgICAgICA8c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiBjbGFzc05hbWU9XCJoLTYgdy02XCIgZmlsbD1cIm5vbmVcIiB2aWV3Qm94PVwiMCAwIDI0IDI0XCIgc3Ryb2tlPVwiY3VycmVudENvbG9yXCI+XG4gICAgICAgICAgICA8cGF0aCBzdHJva2VMaW5lY2FwPVwicm91bmRcIiBzdHJva2VMaW5lam9pbj1cInJvdW5kXCIgc3Ryb2tlV2lkdGg9ezJ9IGQ9e21vYmlsZU1lbnVPcGVuID8gXCJNNiAxOEwxOCA2TTYgNmwxMiAxMlwiIDogXCJNNCA2aDE2TTQgMTJoMTZNNCAxOGgxNlwifSAvPlxuICAgICAgICAgIDwvc3ZnPlxuICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgXG4gICAgICAgIHsvKiBEZXNrdG9wIG5hdiBiYXIgKi99XG4gICAgICAgIDxuYXYgY2xhc3NOYW1lPXtgXG4gICAgICAgICAgJHttb2JpbGVNZW51T3BlbiA/ICdmbGV4JyA6ICdoaWRkZW4nfSBcbiAgICAgICAgICBtZDpmbGV4IFxuICAgICAgICAgIGZsZXgtY29sIG1kOmZsZXgtcm93IFxuICAgICAgICAgIGp1c3RpZnktY2VudGVyIFxuICAgICAgICAgIG1kOnNwYWNlLXgtNiBtZDpzcGFjZS15LTAgXG4gICAgICAgICAgc3BhY2UteS00IFxuICAgICAgICAgIHRleHQtcmVkLTMwMCB0ZXh0LWxnIG1kOnRleHQteGwgZm9udC1tb25vXG4gICAgICAgICAgdy1mdWxsIFxuICAgICAgICAgIHBiLTFcbiAgICAgICAgYH0+XG4gICAgICAgICAge25hdkxpbmtzLm1hcCgobGluaykgPT4gKFxuICAgICAgICAgICAgPExpbmtcbiAgICAgICAgICAgICAga2V5PXtsaW5rLnBhdGh9XG4gICAgICAgICAgICAgIGhyZWY9e2xpbmsucGF0aH1cbiAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gc2V0TW9iaWxlTWVudU9wZW4oZmFsc2UpfVxuICAgICAgICAgICAgICBjbGFzc05hbWU9e2B0cmFuc2l0aW9uLWFsbCBob3Zlcjp0ZXh0LXJlZC00MDAgcGItMSAke3BhdGhuYW1lID09PSBsaW5rLnBhdGggPyAndGV4dC1yZWQtMzAwIGJvcmRlci1iIGJvcmRlci1yZWQtNTAwJyA6ICd0ZXh0LXdoaXRlJ31gfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICB7bGluay5uYW1lfVxuICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgICkpfVxuICAgICAgICAgIDxMb2dvdXRCdXR0b24gLz5cbiAgICAgICAgPC9uYXY+XG4gICAgICA8L2hlYWRlcj5cbiAgICAgIDxtYWluIGNsYXNzTmFtZT1cInctZnVsbCBtYXgtdy1zY3JlZW4tbWQgcHgtNCBweS0zIGZsZXgtZ3Jvd1wiPlxuICAgICAgICB7Y2hpbGRyZW59XG4gICAgICA8L21haW4+XG4gICAgPC9kaXY+XG4gICk7XG59Il0sIm5hbWVzIjpbIlJlYWN0IiwidXNlU3RhdGUiLCJ1c2VFZmZlY3QiLCJMaW5rIiwidXNlUm91dGVyIiwidXNlQXV0aCIsInVzZUFwcFN0YXRlIiwiTG9nb3V0QnV0dG9uIiwibG9nb1BhdGgiLCJMYXlvdXQiLCJjaGlsZHJlbiIsInJvdXRlciIsInBhdGhuYW1lIiwidXNlciIsIm1vYmlsZU1lbnVPcGVuIiwic2V0TW9iaWxlTWVudU9wZW4iLCJkaXNwYXRjaCIsImh5ZHJhdGVGcm9tU3RvcmFnZSIsInR5cGUiLCJwYXlsb2FkIiwibGFzdFZpc2l0ZWRQYXRoIiwicGF0aCIsInB1c2giLCJuYXZMaW5rcyIsIm5hbWUiLCJkaXYiLCJjbGFzc05hbWUiLCJoZWFkZXIiLCJpbWciLCJzcmMiLCJhbHQiLCJidXR0b24iLCJvbkNsaWNrIiwic3ZnIiwieG1sbnMiLCJmaWxsIiwidmlld0JveCIsInN0cm9rZSIsInN0cm9rZUxpbmVjYXAiLCJzdHJva2VMaW5lam9pbiIsInN0cm9rZVdpZHRoIiwiZCIsIm5hdiIsIm1hcCIsImxpbmsiLCJocmVmIiwibWFpbiJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(pages-dir-node)/./pages/Layout.tsx\n");

/***/ }),

/***/ "(pages-dir-node)/./pages/_app.tsx":
/*!************************!*\
  !*** ./pages/_app.tsx ***!
  \************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ App)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _components_AuthContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/AuthContext */ \"(pages-dir-node)/./components/AuthContext.tsx\");\n/* harmony import */ var _context_AppStateContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../context/AppStateContext */ \"(pages-dir-node)/./context/AppStateContext.tsx\");\n/* harmony import */ var _components_ErrorBoundary__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/ErrorBoundary */ \"(pages-dir-node)/./components/ErrorBoundary.tsx\");\n/* harmony import */ var _components_StateLoader__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../components/StateLoader */ \"(pages-dir-node)/./components/StateLoader.tsx\");\n/* harmony import */ var _components_LoadingPage__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../components/LoadingPage */ \"(pages-dir-node)/./components/LoadingPage.tsx\");\n/* harmony import */ var react_toastify__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! react-toastify */ \"react-toastify\");\n/* harmony import */ var _Layout__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Layout */ \"(pages-dir-node)/./pages/Layout.tsx\");\n/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../index.css */ \"(pages-dir-node)/./index.css\");\n/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_index_css__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var react_toastify_dist_ReactToastify_css__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! react-toastify/dist/ReactToastify.css */ \"(pages-dir-node)/./node_modules/.pnpm/react-toastify@10.0.6_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/react-toastify/dist/ReactToastify.css\");\n/* harmony import */ var react_toastify_dist_ReactToastify_css__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(react_toastify_dist_ReactToastify_css__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var _styles_animations_css__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../styles/animations.css */ \"(pages-dir-node)/./styles/animations.css\");\n/* harmony import */ var _styles_animations_css__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(_styles_animations_css__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var _api_apiClient__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../api/apiClient */ \"(pages-dir-node)/./api/apiClient.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([react_toastify__WEBPACK_IMPORTED_MODULE_7__]);\nreact_toastify__WEBPACK_IMPORTED_MODULE_7__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Pages that should have the layout (header/navigation)\nconst pagesWithLayout = [\n    '/chat',\n    '/wallet',\n    '/trading',\n    '/social',\n    '/settings'\n];\n// Pages that don't require authentication\nconst publicPages = [\n    '/login',\n    '/register',\n    '/forgot',\n    '/reset'\n];\n// FIXED: Simplified and stabilized AuthGuard component\nfunction AuthGuard({ children, router }) {\n    const { user, loading, isAuthenticated } = (0,_components_AuthContext__WEBPACK_IMPORTED_MODULE_2__.useAuth)();\n    const isPublicPage = publicPages.includes(router.pathname);\n    const [isNavigating, setIsNavigating] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const lastRedirectAtRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(0);\n    const initialLoadComplete = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    const unauthGraceUntilRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(0);\n    // FIXED: Extended grace window and better token handling\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"AuthGuard.useEffect\": ()=>{\n            if (!loading) {\n                initialLoadComplete.current = true;\n                // If a token exists, provide a longer grace window to avoid bouncing to login\n                const tokenExists = !!(0,_api_apiClient__WEBPACK_IMPORTED_MODULE_12__.getAuthToken)();\n                if (tokenExists) {\n                    unauthGraceUntilRef.current = Date.now() + 5000; // FIXED: Extended to 5s grace\n                    console.log('AuthGuard: Token exists, setting 5s grace window');\n                } else {\n                    unauthGraceUntilRef.current = 0;\n                }\n            }\n        }\n    }[\"AuthGuard.useEffect\"], [\n        loading\n    ]);\n    // FIXED: Simplified redirect logic with better grace handling\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"AuthGuard.useEffect\": ()=>{\n            if (!initialLoadComplete.current || loading || isNavigating) {\n                return;\n            }\n            // If not authenticated and not on a public page, redirect to login\n            if (!isAuthenticated && !user && !isPublicPage) {\n                const now = Date.now();\n                const withinGrace = now < unauthGraceUntilRef.current;\n                const tokenExists = !!(0,_api_apiClient__WEBPACK_IMPORTED_MODULE_12__.getAuthToken)();\n                // FIXED: Never redirect away from chat if a token exists during grace period\n                if (router.pathname === '/chat' && (tokenExists || withinGrace)) {\n                    console.log('AuthGuard: On /chat with token/grace present; suppressing unauth redirect');\n                    return;\n                }\n                if (withinGrace) {\n                    console.log('AuthGuard: Skipping unauth redirect (within grace period)');\n                    return;\n                }\n                // Throttle repeated redirects\n                const now2 = Date.now();\n                const recentlyRedirected = now2 - lastRedirectAtRef.current < 2000;\n                if (recentlyRedirected) {\n                    console.log('AuthGuard: Skipping redirect (recently redirected)');\n                    return;\n                }\n                console.log('AuthGuard: Redirecting unauthenticated user to login');\n                lastRedirectAtRef.current = now2;\n                setIsNavigating(true);\n                router.replace('/login').then({\n                    \"AuthGuard.useEffect\": ()=>setIsNavigating(false)\n                }[\"AuthGuard.useEffect\"]).catch({\n                    \"AuthGuard.useEffect\": (error)=>{\n                        console.error('Navigation error:', error);\n                        setIsNavigating(false);\n                    }\n                }[\"AuthGuard.useEffect\"]);\n            }\n            // FIXED: Simplified authenticated user redirect logic\n            if (isAuthenticated && user && isPublicPage) {\n                // Check for coordination flags to avoid double redirects\n                let skipPublicRedirect = false;\n                try {\n                    skipPublicRedirect = sessionStorage.getItem('GRACE_POST_LOGIN_REDIRECT') === '1';\n                } catch  {}\n                // Throttle repeated redirects within a short window\n                const now = Date.now();\n                const recentlyRedirected = now - lastRedirectAtRef.current < 2000;\n                if (!skipPublicRedirect && !recentlyRedirected) {\n                    console.log('AuthGuard: Redirecting authenticated user to chat');\n                    lastRedirectAtRef.current = now;\n                    setIsNavigating(true);\n                    try {\n                        sessionStorage.setItem('GRACE_ALREADY_REDIRECTED', '1');\n                    } catch  {}\n                    router.replace('/chat').then({\n                        \"AuthGuard.useEffect\": ()=>setIsNavigating(false)\n                    }[\"AuthGuard.useEffect\"]).catch({\n                        \"AuthGuard.useEffect\": (error)=>{\n                            console.error('Navigation error:', error);\n                            setIsNavigating(false);\n                        }\n                    }[\"AuthGuard.useEffect\"]);\n                } else {\n                    // Clear the flag after the first pass to re-enable normal behavior\n                    try {\n                        sessionStorage.removeItem('GRACE_POST_LOGIN_REDIRECT');\n                    } catch  {}\n                }\n            }\n        }\n    }[\"AuthGuard.useEffect\"], [\n        isAuthenticated,\n        user,\n        isPublicPage,\n        loading,\n        router,\n        isNavigating\n    ]);\n    // FIXED: Clear redirect guard when on /chat\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"AuthGuard.useEffect\": ()=>{\n            if (router.pathname === '/chat') {\n                try {\n                    sessionStorage.removeItem('GRACE_ALREADY_REDIRECTED');\n                } catch  {}\n            }\n        }\n    }[\"AuthGuard.useEffect\"], [\n        router.pathname\n    ]);\n    // FIXED: Simplified loading states\n    if (loading) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_LoadingPage__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n            message: \"Loading authentication...\"\n        }, void 0, false, {\n            fileName: \"/home/ubuntu/grace-project/src/ui/pages/_app.tsx\",\n            lineNumber: 127,\n            columnNumber: 12\n        }, this);\n    }\n    // Show navigation state\n    if (isNavigating) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_LoadingPage__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n            message: \"Navigating...\"\n        }, void 0, false, {\n            fileName: \"/home/ubuntu/grace-project/src/ui/pages/_app.tsx\",\n            lineNumber: 132,\n            columnNumber: 12\n        }, this);\n    }\n    // Don't render children until auth check is complete for protected pages\n    if (!loading && !user && !isPublicPage) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_LoadingPage__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n            message: \"Redirecting to login...\"\n        }, void 0, false, {\n            fileName: \"/home/ubuntu/grace-project/src/ui/pages/_app.tsx\",\n            lineNumber: 137,\n            columnNumber: 12\n        }, this);\n    }\n    // Render children with proper layout\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: children\n    }, void 0, false);\n}\nfunction App({ Component, pageProps, router }) {\n    const shouldHaveLayout = pagesWithLayout.includes(router.pathname);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ErrorBoundary__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n        componentName: \"Main App\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_AuthContext__WEBPACK_IMPORTED_MODULE_2__.AuthProvider, {\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_context_AppStateContext__WEBPACK_IMPORTED_MODULE_3__.AppStateProvider, {\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_StateLoader__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AuthGuard, {\n                        router: router,\n                        children: [\n                            shouldHaveLayout ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_Layout__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Component, {\n                                    ...pageProps\n                                }, void 0, false, {\n                                    fileName: \"/home/ubuntu/grace-project/src/ui/pages/_app.tsx\",\n                                    lineNumber: 155,\n                                    columnNumber: 19\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"/home/ubuntu/grace-project/src/ui/pages/_app.tsx\",\n                                lineNumber: 154,\n                                columnNumber: 17\n                            }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Component, {\n                                ...pageProps\n                            }, void 0, false, {\n                                fileName: \"/home/ubuntu/grace-project/src/ui/pages/_app.tsx\",\n                                lineNumber: 158,\n                                columnNumber: 17\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_toastify__WEBPACK_IMPORTED_MODULE_7__.ToastContainer, {\n                                position: \"bottom-right\",\n                                theme: \"dark\"\n                            }, void 0, false, {\n                                fileName: \"/home/ubuntu/grace-project/src/ui/pages/_app.tsx\",\n                                lineNumber: 160,\n                                columnNumber: 15\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/home/ubuntu/grace-project/src/ui/pages/_app.tsx\",\n                        lineNumber: 152,\n                        columnNumber: 13\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"/home/ubuntu/grace-project/src/ui/pages/_app.tsx\",\n                    lineNumber: 151,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"/home/ubuntu/grace-project/src/ui/pages/_app.tsx\",\n                lineNumber: 150,\n                columnNumber: 9\n            }, this)\n        }, void 0, false, {\n            fileName: \"/home/ubuntu/grace-project/src/ui/pages/_app.tsx\",\n            lineNumber: 149,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/home/ubuntu/grace-project/src/ui/pages/_app.tsx\",\n        lineNumber: 148,\n        columnNumber: 5\n    }, this);\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./pages/_app.tsx\n");

/***/ }),

/***/ "(pages-dir-node)/./pages/index.tsx":
/*!*************************!*\
  !*** ./pages/index.tsx ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Home)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/router */ \"(pages-dir-node)/./node_modules/.pnpm/next@15.4.5_@babel+core@7.28.0_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _components_AuthContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/AuthContext */ \"(pages-dir-node)/./components/AuthContext.tsx\");\n/* harmony import */ var _api_apiClient__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../api/apiClient */ \"(pages-dir-node)/./api/apiClient.ts\");\n\n\n\n\n\nfunction Home() {\n    const router = (0,next_router__WEBPACK_IMPORTED_MODULE_2__.useRouter)();\n    const { isAuthenticated, user, loading } = (0,_components_AuthContext__WEBPACK_IMPORTED_MODULE_3__.useAuth)();\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"Home.useEffect\": ()=>{\n            // Small delay to allow auth state to settle on initial mount\n            const id = setTimeout({\n                \"Home.useEffect.id\": ()=>{\n                    const tokenExists = !!(0,_api_apiClient__WEBPACK_IMPORTED_MODULE_4__.getAuthToken)();\n                    if (isAuthenticated && user || tokenExists) {\n                        router.replace('/chat');\n                    } else {\n                        router.replace('/login');\n                    }\n                }\n            }[\"Home.useEffect.id\"], loading ? 200 : 50);\n            return ({\n                \"Home.useEffect\": ()=>clearTimeout(id)\n            })[\"Home.useEffect\"];\n        }\n    }[\"Home.useEffect\"], [\n        router,\n        isAuthenticated,\n        user,\n        loading\n    ]);\n    // This will be shown briefly before the redirect happens\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"min-h-screen bg-gray-900 text-white flex items-center justify-center\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"text-center\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                className: \"text-2xl\",\n                children: \"Loading Grace Terminal...\"\n            }, void 0, false, {\n                fileName: \"/home/ubuntu/grace-project/src/ui/pages/index.tsx\",\n                lineNumber: 27,\n                columnNumber: 9\n            }, this)\n        }, void 0, false, {\n            fileName: \"/home/ubuntu/grace-project/src/ui/pages/index.tsx\",\n            lineNumber: 26,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/home/ubuntu/grace-project/src/ui/pages/index.tsx\",\n        lineNumber: 25,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS8uL3BhZ2VzL2luZGV4LnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQXlDO0FBQ0Q7QUFDWTtBQUNKO0FBRWpDLFNBQVNLO0lBQ3RCLE1BQU1DLFNBQVNKLHNEQUFTQTtJQUN4QixNQUFNLEVBQUVLLGVBQWUsRUFBRUMsSUFBSSxFQUFFQyxPQUFPLEVBQUUsR0FBR04sZ0VBQU9BO0lBRWxERixnREFBU0E7MEJBQUM7WUFDUiw2REFBNkQ7WUFDN0QsTUFBTVMsS0FBS0M7cUNBQVc7b0JBQ3BCLE1BQU1DLGNBQWMsQ0FBQyxDQUFDUiw0REFBWUE7b0JBQ2xDLElBQUksbUJBQW9CSSxRQUFTSSxhQUFhO3dCQUM1Q04sT0FBT08sT0FBTyxDQUFDO29CQUNqQixPQUFPO3dCQUNMUCxPQUFPTyxPQUFPLENBQUM7b0JBQ2pCO2dCQUNGO29DQUFHSixVQUFVLE1BQU07WUFDbkI7a0NBQU8sSUFBTUssYUFBYUo7O1FBQzVCO3lCQUFHO1FBQUNKO1FBQVFDO1FBQWlCQztRQUFNQztLQUFRO0lBRTNDLHlEQUF5RDtJQUN6RCxxQkFDRSw4REFBQ007UUFBSUMsV0FBVTtrQkFDYiw0RUFBQ0Q7WUFBSUMsV0FBVTtzQkFDYiw0RUFBQ0M7Z0JBQUdELFdBQVU7MEJBQVc7Ozs7Ozs7Ozs7Ozs7Ozs7QUFJakMiLCJzb3VyY2VzIjpbIi9ob21lL3VidW50dS9ncmFjZS1wcm9qZWN0L3NyYy91aS9wYWdlcy9pbmRleC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHVzZVJvdXRlciB9IGZyb20gJ25leHQvcm91dGVyJztcbmltcG9ydCB7IHVzZUF1dGggfSBmcm9tICcuLi9jb21wb25lbnRzL0F1dGhDb250ZXh0JztcbmltcG9ydCB7IGdldEF1dGhUb2tlbiB9IGZyb20gJy4uL2FwaS9hcGlDbGllbnQnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBIb21lKCkge1xuICBjb25zdCByb3V0ZXIgPSB1c2VSb3V0ZXIoKTtcbiAgY29uc3QgeyBpc0F1dGhlbnRpY2F0ZWQsIHVzZXIsIGxvYWRpbmcgfSA9IHVzZUF1dGgoKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIC8vIFNtYWxsIGRlbGF5IHRvIGFsbG93IGF1dGggc3RhdGUgdG8gc2V0dGxlIG9uIGluaXRpYWwgbW91bnRcbiAgICBjb25zdCBpZCA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgY29uc3QgdG9rZW5FeGlzdHMgPSAhIWdldEF1dGhUb2tlbigpO1xuICAgICAgaWYgKChpc0F1dGhlbnRpY2F0ZWQgJiYgdXNlcikgfHwgdG9rZW5FeGlzdHMpIHtcbiAgICAgICAgcm91dGVyLnJlcGxhY2UoJy9jaGF0Jyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByb3V0ZXIucmVwbGFjZSgnL2xvZ2luJyk7XG4gICAgICB9XG4gICAgfSwgbG9hZGluZyA/IDIwMCA6IDUwKTtcbiAgICByZXR1cm4gKCkgPT4gY2xlYXJUaW1lb3V0KGlkKTtcbiAgfSwgW3JvdXRlciwgaXNBdXRoZW50aWNhdGVkLCB1c2VyLCBsb2FkaW5nXSk7XG5cbiAgLy8gVGhpcyB3aWxsIGJlIHNob3duIGJyaWVmbHkgYmVmb3JlIHRoZSByZWRpcmVjdCBoYXBwZW5zXG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9XCJtaW4taC1zY3JlZW4gYmctZ3JheS05MDAgdGV4dC13aGl0ZSBmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlclwiPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0ZXh0LWNlbnRlclwiPlxuICAgICAgICA8aDIgY2xhc3NOYW1lPVwidGV4dC0yeGxcIj5Mb2FkaW5nIEdyYWNlIFRlcm1pbmFsLi4uPC9oMj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICApO1xufSJdLCJuYW1lcyI6WyJSZWFjdCIsInVzZUVmZmVjdCIsInVzZVJvdXRlciIsInVzZUF1dGgiLCJnZXRBdXRoVG9rZW4iLCJIb21lIiwicm91dGVyIiwiaXNBdXRoZW50aWNhdGVkIiwidXNlciIsImxvYWRpbmciLCJpZCIsInNldFRpbWVvdXQiLCJ0b2tlbkV4aXN0cyIsInJlcGxhY2UiLCJjbGVhclRpbWVvdXQiLCJkaXYiLCJjbGFzc05hbWUiLCJoMiJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(pages-dir-node)/./pages/index.tsx\n");

/***/ }),

/***/ "(pages-dir-node)/./styles/animations.css":
/*!*******************************!*\
  !*** ./styles/animations.css ***!
  \*******************************/
/***/ (() => {



/***/ }),

/***/ "(pages-dir-node)/./utils/StateBackupService.ts":
/*!*************************************!*\
  !*** ./utils/StateBackupService.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _StatePersistence__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./StatePersistence */ \"(pages-dir-node)/./utils/StatePersistence.ts\");\n// StateBackupService.ts - Manages additional state backup mechanisms\n\nclass StateBackupService {\n    static instance;\n    serviceWorkerRegistration = null;\n    backupInterval = null;\n    lastBackupTime = 0;\n    BACKUP_INTERVAL_MS = 60000;\n    isRegistering = false;\n    constructor(){\n    // Private constructor for singleton pattern\n    }\n    static getInstance() {\n        if (!StateBackupService.instance) {\n            StateBackupService.instance = new StateBackupService();\n        }\n        return StateBackupService.instance;\n    }\n    /**\n   * Initialize the backup service\n   */ async initialize() {\n        try {\n            // Register service worker only in production builds to avoid 404s in dev\n            const isProd = \"development\" === 'production';\n            if (isProd && 'serviceWorker' in navigator && !this.isRegistering) {\n                this.isRegistering = true;\n                try {\n                    this.serviceWorkerRegistration = await navigator.serviceWorker.register('/serviceWorker.js', {\n                        scope: '/'\n                    });\n                    console.log('Service Worker registered successfully', this.serviceWorkerRegistration);\n                    // Set up service worker message handling\n                    navigator.serviceWorker.addEventListener('message', this.handleServiceWorkerMessage);\n                    // Start periodic backup\n                    this.startPeriodicBackup();\n                    this.isRegistering = false;\n                    return true;\n                } catch (error) {\n                    console.error('Service Worker registration failed:', error);\n                    this.isRegistering = false;\n                    // Even if service worker fails, we can still use local storage backups\n                    this.startPeriodicBackup();\n                    return false;\n                }\n            } else {\n                // Fallback for browsers without SW support or in development\n                if (!isProd) {\n                    console.log('Skipping Service Worker in development; using local storage backups only');\n                } else {\n                    console.log('Service Workers not supported or already registering, using local storage only');\n                }\n                this.startPeriodicBackup();\n                return false;\n            }\n        } catch (error) {\n            console.error('Error initializing backup service:', error);\n            return false;\n        }\n    }\n    /**\n   * Handle messages from service worker\n   */ handleServiceWorkerMessage = (event)=>{\n        if (event.data && event.data.type === 'BACKUP_STATE_COMPLETE') {\n            if (event.data.success) {\n                console.log('Service Worker backup complete');\n            } else {\n                console.error('Service Worker backup failed:', event.data.error);\n            }\n        }\n    };\n    /**\n   * Start periodic state backups\n   */ startPeriodicBackup() {\n        if (this.backupInterval) {\n            clearInterval(this.backupInterval);\n        }\n        this.backupInterval = window.setInterval(()=>{\n            this.backupCurrentState();\n        }, this.BACKUP_INTERVAL_MS);\n        console.log('Periodic state backup started');\n        // Also backup on certain events\n        window.addEventListener('beforeunload', this.backupCurrentState);\n        window.addEventListener('pagehide', this.backupCurrentState);\n        // Backup now\n        this.backupCurrentState();\n    }\n    /**\n   * Stop periodic backups\n   */ stopPeriodicBackup() {\n        if (this.backupInterval) {\n            clearInterval(this.backupInterval);\n            this.backupInterval = null;\n            window.removeEventListener('beforeunload', this.backupCurrentState);\n            window.removeEventListener('pagehide', this.backupCurrentState);\n            console.log('Periodic state backup stopped');\n        }\n    }\n    /**\n   * Backup the current application state\n   */ backupCurrentState = async ()=>{\n        try {\n            // Don't backup too frequently\n            const now = Date.now();\n            if (now - this.lastBackupTime < 10000) {\n                return;\n            }\n            this.lastBackupTime = now;\n            // Get current state snapshot\n            const snapshot = _StatePersistence__WEBPACK_IMPORTED_MODULE_0__[\"default\"].retrieveSnapshot();\n            if (!snapshot) {\n                console.log('No state snapshot to backup');\n                return;\n            }\n            // Backup to service worker if available\n            if (navigator.serviceWorker.controller) {\n                navigator.serviceWorker.controller.postMessage({\n                    type: 'BACKUP_STATE',\n                    state: snapshot\n                });\n                console.log('State backup sent to Service Worker');\n            }\n            // Secondary browser storage backup using a different key\n            try {\n                localStorage.setItem('GRACE_STATE_BACKUP', JSON.stringify({\n                    timestamp: now,\n                    state: snapshot\n                }));\n            } catch (storageError) {\n                console.error('Error backing up to localStorage:', storageError);\n            }\n        } catch (error) {\n            console.error('State backup failed:', error);\n        }\n    };\n    /**\n   * Attempt to recover state from all backup sources\n   */ async attemptRecovery() {\n        try {\n            console.log('Attempting state recovery from all sources');\n            // Try main persistence manager first\n            const mainSnapshot = _StatePersistence__WEBPACK_IMPORTED_MODULE_0__[\"default\"].retrieveSnapshot();\n            if (mainSnapshot) {\n                console.log('Recovered state from main persistence manager');\n                return mainSnapshot;\n            }\n            // Try localStorage backup\n            try {\n                const backupJson = localStorage.getItem('GRACE_STATE_BACKUP');\n                if (backupJson) {\n                    const backup = JSON.parse(backupJson);\n                    if (backup && backup.state) {\n                        console.log('Recovered state from localStorage backup');\n                        return backup.state;\n                    }\n                }\n            } catch (e) {\n                console.error('Error reading from localStorage backup:', e);\n            }\n            // Try service worker backup (this gets complex with async)\n            if (navigator.serviceWorker.controller) {\n                return new Promise((resolve)=>{\n                    // Set up a one-time message handler\n                    const messageHandler = (event)=>{\n                        if (event.data && event.data.type === 'RECOVERY_RESULT') {\n                            navigator.serviceWorker.removeEventListener('message', messageHandler);\n                            if (event.data.state) {\n                                console.log('Recovered state from Service Worker');\n                                resolve(event.data.state);\n                            } else {\n                                console.log('No state found in Service Worker');\n                                resolve(null);\n                            }\n                        }\n                    };\n                    navigator.serviceWorker.addEventListener('message', messageHandler);\n                    // Request recovery - we've already checked controller is not null\n                    navigator.serviceWorker.controller.postMessage({\n                        type: 'RECOVER_STATE'\n                    });\n                    // Set timeout for recovery attempt\n                    setTimeout(()=>{\n                        navigator.serviceWorker.removeEventListener('message', messageHandler);\n                        console.log('Service Worker recovery timed out');\n                        resolve(null);\n                    }, 3000);\n                });\n            }\n            console.log('No state recovered from any source');\n            return null;\n        } catch (error) {\n            console.error('Error during state recovery:', error);\n            return null;\n        }\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (StateBackupService);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./utils/StateBackupService.ts\n");

/***/ }),

/***/ "(pages-dir-node)/./utils/StateOperationLock.ts":
/*!*************************************!*\
  !*** ./utils/StateOperationLock.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**\n * StateOperationLock - Prevents race conditions in state operations\n * \n * This utility provides a central locking mechanism to prevent concurrent state operations\n * from interfering with each other, which can cause race conditions and lost updates.\n */ class StateOperationLock {\n    static instance;\n    activeLocks = new Map();\n    DEFAULT_TIMEOUT = 5000;\n    // Make this a singleton\n    constructor(){}\n    static getInstance() {\n        if (!StateOperationLock.instance) {\n            StateOperationLock.instance = new StateOperationLock();\n        }\n        return StateOperationLock.instance;\n    }\n    /**\n   * Acquires a lock for a specific operation\n   * @param resourceId Identifier for the resource being locked (e.g., 'chat', 'trading')\n   * @param operation Description of the operation being performed\n   * @param timeoutMs Lock timeout in milliseconds\n   * @returns Lock ID if acquired, null if failed\n   */ acquireLock(resourceId, operation, timeoutMs = this.DEFAULT_TIMEOUT) {\n        // Clean expired locks first\n        this.cleanExpiredLocks();\n        // Check if the resource is already locked\n        if (this.activeLocks.has(resourceId)) {\n            console.warn(`Resource ${resourceId} is already locked for operation: ${this.activeLocks.get(resourceId)?.operation}`);\n            return null;\n        }\n        // Create a new lock\n        const lockId = `lock_${Date.now()}_${Math.random().toString(36).substring(2, 9)}`;\n        const now = Date.now();\n        const lockInfo = {\n            id: lockId,\n            operation,\n            acquiredAt: now,\n            expiresAt: now + timeoutMs\n        };\n        // Set the lock\n        this.activeLocks.set(resourceId, lockInfo);\n        console.log(`Lock acquired for ${resourceId}: ${operation}`);\n        // Set automatic release after timeout\n        setTimeout(()=>{\n            this.releaseLock(resourceId, lockId);\n        }, timeoutMs);\n        return lockId;\n    }\n    /**\n   * Releases a lock if the lockId matches\n   * @param resourceId Resource identifier\n   * @param lockId Lock ID returned from acquireLock\n   * @returns true if released, false if not found or ID doesn't match\n   */ releaseLock(resourceId, lockId) {\n        const lock = this.activeLocks.get(resourceId);\n        if (!lock) {\n            console.warn(`No lock found for resource ${resourceId}`);\n            return false;\n        }\n        if (lock.id !== lockId) {\n            console.warn(`Lock ID mismatch for ${resourceId}: expected ${lock.id}, got ${lockId}`);\n            return false;\n        }\n        // Release the lock\n        this.activeLocks.delete(resourceId);\n        console.log(`Lock released for ${resourceId}`);\n        return true;\n    }\n    /**\n   * Checks if a resource is currently locked\n   * @param resourceId Resource identifier\n   * @returns true if locked, false otherwise\n   */ isLocked(resourceId) {\n        this.cleanExpiredLocks();\n        return this.activeLocks.has(resourceId);\n    }\n    /**\n   * Clean up any expired locks\n   */ cleanExpiredLocks() {\n        const now = Date.now();\n        for (const [resourceId, lock] of this.activeLocks.entries()){\n            if (lock.expiresAt < now) {\n                console.log(`Lock for ${resourceId} expired and was auto-released`);\n                this.activeLocks.delete(resourceId);\n            }\n        }\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (StateOperationLock.getInstance());\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS8uL3V0aWxzL1N0YXRlT3BlcmF0aW9uTG9jay50cyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7Ozs7O0NBS0MsR0FTRCxNQUFNQTtJQUNKLE9BQWVDLFNBQTZCO0lBQ3BDQyxjQUFxQyxJQUFJQyxNQUFNO0lBQy9DQyxrQkFBa0IsS0FBSztJQUUvQix3QkFBd0I7SUFDeEIsYUFBc0IsQ0FBQztJQUV2QixPQUFjQyxjQUFrQztRQUM5QyxJQUFJLENBQUNMLG1CQUFtQkMsUUFBUSxFQUFFO1lBQ2hDRCxtQkFBbUJDLFFBQVEsR0FBRyxJQUFJRDtRQUNwQztRQUNBLE9BQU9BLG1CQUFtQkMsUUFBUTtJQUNwQztJQUVBOzs7Ozs7R0FNQyxHQUNELFlBQW1CTSxVQUFrQixFQUFFQyxTQUFpQixFQUFFQyxZQUFZLElBQUksQ0FBQ0wsZUFBZSxFQUFpQjtRQUN6Ryw0QkFBNEI7UUFDNUIsSUFBSSxDQUFDTSxpQkFBaUI7UUFFdEIsMENBQTBDO1FBQzFDLElBQUksSUFBSSxDQUFDUixXQUFXLENBQUNTLEdBQUcsQ0FBQ0osYUFBYTtZQUNwQ0ssUUFBUUMsSUFBSSxDQUFDLENBQUMsU0FBUyxFQUFFTixXQUFXLGtDQUFrQyxFQUFFLElBQUksQ0FBQ0wsV0FBVyxDQUFDWSxHQUFHLENBQUNQLGFBQWFDLFdBQVc7WUFDckgsT0FBTztRQUNUO1FBRUEsb0JBQW9CO1FBQ3BCLE1BQU1PLFNBQVMsQ0FBQyxLQUFLLEVBQUVDLEtBQUtDLEdBQUcsR0FBRyxDQUFDLEVBQUVDLEtBQUtDLE1BQU0sR0FBR0MsUUFBUSxDQUFDLElBQUlDLFNBQVMsQ0FBQyxHQUFHLElBQUk7UUFDakYsTUFBTUosTUFBTUQsS0FBS0MsR0FBRztRQUVwQixNQUFNSyxXQUFxQjtZQUN6QkMsSUFBSVI7WUFDSlA7WUFDQWdCLFlBQVlQO1lBQ1pRLFdBQVdSLE1BQU1SO1FBQ25CO1FBRUEsZUFBZTtRQUNmLElBQUksQ0FBQ1AsV0FBVyxDQUFDd0IsR0FBRyxDQUFDbkIsWUFBWWU7UUFDakNWLFFBQVFlLEdBQUcsQ0FBQyxDQUFDLGtCQUFrQixFQUFFcEIsV0FBVyxFQUFFLEVBQUVDLFdBQVc7UUFFM0Qsc0NBQXNDO1FBQ3RDb0IsV0FBVztZQUNULElBQUksQ0FBQ0MsV0FBVyxDQUFDdEIsWUFBWVE7UUFDL0IsR0FBR047UUFFSCxPQUFPTTtJQUNUO0lBRUE7Ozs7O0dBS0MsR0FDRCxZQUFtQlIsVUFBa0IsRUFBRVEsTUFBYyxFQUFXO1FBQzlELE1BQU1lLE9BQU8sSUFBSSxDQUFDNUIsV0FBVyxDQUFDWSxHQUFHLENBQUNQO1FBRWxDLElBQUksQ0FBQ3VCLE1BQU07WUFDVGxCLFFBQVFDLElBQUksQ0FBQyxDQUFDLDJCQUEyQixFQUFFTixZQUFZO1lBQ3ZELE9BQU87UUFDVDtRQUVBLElBQUl1QixLQUFLUCxFQUFFLEtBQUtSLFFBQVE7WUFDdEJILFFBQVFDLElBQUksQ0FBQyxDQUFDLHFCQUFxQixFQUFFTixXQUFXLFdBQVcsRUFBRXVCLEtBQUtQLEVBQUUsQ0FBQyxNQUFNLEVBQUVSLFFBQVE7WUFDckYsT0FBTztRQUNUO1FBRUEsbUJBQW1CO1FBQ25CLElBQUksQ0FBQ2IsV0FBVyxDQUFDNkIsTUFBTSxDQUFDeEI7UUFDeEJLLFFBQVFlLEdBQUcsQ0FBQyxDQUFDLGtCQUFrQixFQUFFcEIsWUFBWTtRQUU3QyxPQUFPO0lBQ1Q7SUFFQTs7OztHQUlDLEdBQ0QsU0FBZ0JBLFVBQWtCLEVBQVc7UUFDM0MsSUFBSSxDQUFDRyxpQkFBaUI7UUFDdEIsT0FBTyxJQUFJLENBQUNSLFdBQVcsQ0FBQ1MsR0FBRyxDQUFDSjtJQUM5QjtJQUVBOztHQUVDLEdBQ0Qsb0JBQWtDO1FBQ2hDLE1BQU1VLE1BQU1ELEtBQUtDLEdBQUc7UUFFcEIsS0FBSyxNQUFNLENBQUNWLFlBQVl1QixLQUFLLElBQUksSUFBSSxDQUFDNUIsV0FBVyxDQUFDK0IsT0FBTyxHQUFJO1lBQzNELElBQUlILEtBQUtMLFNBQVMsR0FBR1IsS0FBSztnQkFDeEJMLFFBQVFlLEdBQUcsQ0FBQyxDQUFDLFNBQVMsRUFBRXBCLFdBQVcsOEJBQThCLENBQUM7Z0JBQ2xFLElBQUksQ0FBQ0wsV0FBVyxDQUFDNkIsTUFBTSxDQUFDeEI7WUFDMUI7UUFDRjtJQUNGO0FBQ0Y7QUFFQSxpRUFBZVAsbUJBQW1CSyxXQUFXLEVBQUUsRUFBQyIsInNvdXJjZXMiOlsiL2hvbWUvdWJ1bnR1L2dyYWNlLXByb2plY3Qvc3JjL3VpL3V0aWxzL1N0YXRlT3BlcmF0aW9uTG9jay50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFN0YXRlT3BlcmF0aW9uTG9jayAtIFByZXZlbnRzIHJhY2UgY29uZGl0aW9ucyBpbiBzdGF0ZSBvcGVyYXRpb25zXG4gKiBcbiAqIFRoaXMgdXRpbGl0eSBwcm92aWRlcyBhIGNlbnRyYWwgbG9ja2luZyBtZWNoYW5pc20gdG8gcHJldmVudCBjb25jdXJyZW50IHN0YXRlIG9wZXJhdGlvbnNcbiAqIGZyb20gaW50ZXJmZXJpbmcgd2l0aCBlYWNoIG90aGVyLCB3aGljaCBjYW4gY2F1c2UgcmFjZSBjb25kaXRpb25zIGFuZCBsb3N0IHVwZGF0ZXMuXG4gKi9cblxuaW50ZXJmYWNlIExvY2tJbmZvIHtcbiAgaWQ6IHN0cmluZztcbiAgb3BlcmF0aW9uOiBzdHJpbmc7XG4gIGFjcXVpcmVkQXQ6IG51bWJlcjtcbiAgZXhwaXJlc0F0OiBudW1iZXI7XG59XG5cbmNsYXNzIFN0YXRlT3BlcmF0aW9uTG9jayB7XG4gIHByaXZhdGUgc3RhdGljIGluc3RhbmNlOiBTdGF0ZU9wZXJhdGlvbkxvY2s7XG4gIHByaXZhdGUgYWN0aXZlTG9ja3M6IE1hcDxzdHJpbmcsIExvY2tJbmZvPiA9IG5ldyBNYXAoKTtcbiAgcHJpdmF0ZSBERUZBVUxUX1RJTUVPVVQgPSA1MDAwOyAvLyBEZWZhdWx0IGxvY2sgdGltZW91dDogNSBzZWNvbmRzXG5cbiAgLy8gTWFrZSB0aGlzIGEgc2luZ2xldG9uXG4gIHByaXZhdGUgY29uc3RydWN0b3IoKSB7fVxuXG4gIHB1YmxpYyBzdGF0aWMgZ2V0SW5zdGFuY2UoKTogU3RhdGVPcGVyYXRpb25Mb2NrIHtcbiAgICBpZiAoIVN0YXRlT3BlcmF0aW9uTG9jay5pbnN0YW5jZSkge1xuICAgICAgU3RhdGVPcGVyYXRpb25Mb2NrLmluc3RhbmNlID0gbmV3IFN0YXRlT3BlcmF0aW9uTG9jaygpO1xuICAgIH1cbiAgICByZXR1cm4gU3RhdGVPcGVyYXRpb25Mb2NrLmluc3RhbmNlO1xuICB9XG5cbiAgLyoqXG4gICAqIEFjcXVpcmVzIGEgbG9jayBmb3IgYSBzcGVjaWZpYyBvcGVyYXRpb25cbiAgICogQHBhcmFtIHJlc291cmNlSWQgSWRlbnRpZmllciBmb3IgdGhlIHJlc291cmNlIGJlaW5nIGxvY2tlZCAoZS5nLiwgJ2NoYXQnLCAndHJhZGluZycpXG4gICAqIEBwYXJhbSBvcGVyYXRpb24gRGVzY3JpcHRpb24gb2YgdGhlIG9wZXJhdGlvbiBiZWluZyBwZXJmb3JtZWRcbiAgICogQHBhcmFtIHRpbWVvdXRNcyBMb2NrIHRpbWVvdXQgaW4gbWlsbGlzZWNvbmRzXG4gICAqIEByZXR1cm5zIExvY2sgSUQgaWYgYWNxdWlyZWQsIG51bGwgaWYgZmFpbGVkXG4gICAqL1xuICBwdWJsaWMgYWNxdWlyZUxvY2socmVzb3VyY2VJZDogc3RyaW5nLCBvcGVyYXRpb246IHN0cmluZywgdGltZW91dE1zID0gdGhpcy5ERUZBVUxUX1RJTUVPVVQpOiBzdHJpbmcgfCBudWxsIHtcbiAgICAvLyBDbGVhbiBleHBpcmVkIGxvY2tzIGZpcnN0XG4gICAgdGhpcy5jbGVhbkV4cGlyZWRMb2NrcygpO1xuICAgIFxuICAgIC8vIENoZWNrIGlmIHRoZSByZXNvdXJjZSBpcyBhbHJlYWR5IGxvY2tlZFxuICAgIGlmICh0aGlzLmFjdGl2ZUxvY2tzLmhhcyhyZXNvdXJjZUlkKSkge1xuICAgICAgY29uc29sZS53YXJuKGBSZXNvdXJjZSAke3Jlc291cmNlSWR9IGlzIGFscmVhZHkgbG9ja2VkIGZvciBvcGVyYXRpb246ICR7dGhpcy5hY3RpdmVMb2Nrcy5nZXQocmVzb3VyY2VJZCk/Lm9wZXJhdGlvbn1gKTtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICBcbiAgICAvLyBDcmVhdGUgYSBuZXcgbG9ja1xuICAgIGNvbnN0IGxvY2tJZCA9IGBsb2NrXyR7RGF0ZS5ub3coKX1fJHtNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHJpbmcoMiwgOSl9YDtcbiAgICBjb25zdCBub3cgPSBEYXRlLm5vdygpO1xuICAgIFxuICAgIGNvbnN0IGxvY2tJbmZvOiBMb2NrSW5mbyA9IHtcbiAgICAgIGlkOiBsb2NrSWQsXG4gICAgICBvcGVyYXRpb24sXG4gICAgICBhY3F1aXJlZEF0OiBub3csXG4gICAgICBleHBpcmVzQXQ6IG5vdyArIHRpbWVvdXRNc1xuICAgIH07XG4gICAgXG4gICAgLy8gU2V0IHRoZSBsb2NrXG4gICAgdGhpcy5hY3RpdmVMb2Nrcy5zZXQocmVzb3VyY2VJZCwgbG9ja0luZm8pO1xuICAgIGNvbnNvbGUubG9nKGBMb2NrIGFjcXVpcmVkIGZvciAke3Jlc291cmNlSWR9OiAke29wZXJhdGlvbn1gKTtcbiAgICBcbiAgICAvLyBTZXQgYXV0b21hdGljIHJlbGVhc2UgYWZ0ZXIgdGltZW91dFxuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgdGhpcy5yZWxlYXNlTG9jayhyZXNvdXJjZUlkLCBsb2NrSWQpO1xuICAgIH0sIHRpbWVvdXRNcyk7XG4gICAgXG4gICAgcmV0dXJuIGxvY2tJZDtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZWxlYXNlcyBhIGxvY2sgaWYgdGhlIGxvY2tJZCBtYXRjaGVzXG4gICAqIEBwYXJhbSByZXNvdXJjZUlkIFJlc291cmNlIGlkZW50aWZpZXJcbiAgICogQHBhcmFtIGxvY2tJZCBMb2NrIElEIHJldHVybmVkIGZyb20gYWNxdWlyZUxvY2tcbiAgICogQHJldHVybnMgdHJ1ZSBpZiByZWxlYXNlZCwgZmFsc2UgaWYgbm90IGZvdW5kIG9yIElEIGRvZXNuJ3QgbWF0Y2hcbiAgICovXG4gIHB1YmxpYyByZWxlYXNlTG9jayhyZXNvdXJjZUlkOiBzdHJpbmcsIGxvY2tJZDogc3RyaW5nKTogYm9vbGVhbiB7XG4gICAgY29uc3QgbG9jayA9IHRoaXMuYWN0aXZlTG9ja3MuZ2V0KHJlc291cmNlSWQpO1xuICAgIFxuICAgIGlmICghbG9jaykge1xuICAgICAgY29uc29sZS53YXJuKGBObyBsb2NrIGZvdW5kIGZvciByZXNvdXJjZSAke3Jlc291cmNlSWR9YCk7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIFxuICAgIGlmIChsb2NrLmlkICE9PSBsb2NrSWQpIHtcbiAgICAgIGNvbnNvbGUud2FybihgTG9jayBJRCBtaXNtYXRjaCBmb3IgJHtyZXNvdXJjZUlkfTogZXhwZWN0ZWQgJHtsb2NrLmlkfSwgZ290ICR7bG9ja0lkfWApO1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBcbiAgICAvLyBSZWxlYXNlIHRoZSBsb2NrXG4gICAgdGhpcy5hY3RpdmVMb2Nrcy5kZWxldGUocmVzb3VyY2VJZCk7XG4gICAgY29uc29sZS5sb2coYExvY2sgcmVsZWFzZWQgZm9yICR7cmVzb3VyY2VJZH1gKTtcbiAgICBcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGVja3MgaWYgYSByZXNvdXJjZSBpcyBjdXJyZW50bHkgbG9ja2VkXG4gICAqIEBwYXJhbSByZXNvdXJjZUlkIFJlc291cmNlIGlkZW50aWZpZXJcbiAgICogQHJldHVybnMgdHJ1ZSBpZiBsb2NrZWQsIGZhbHNlIG90aGVyd2lzZVxuICAgKi9cbiAgcHVibGljIGlzTG9ja2VkKHJlc291cmNlSWQ6IHN0cmluZyk6IGJvb2xlYW4ge1xuICAgIHRoaXMuY2xlYW5FeHBpcmVkTG9ja3MoKTtcbiAgICByZXR1cm4gdGhpcy5hY3RpdmVMb2Nrcy5oYXMocmVzb3VyY2VJZCk7XG4gIH1cblxuICAvKipcbiAgICogQ2xlYW4gdXAgYW55IGV4cGlyZWQgbG9ja3NcbiAgICovXG4gIHByaXZhdGUgY2xlYW5FeHBpcmVkTG9ja3MoKTogdm9pZCB7XG4gICAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTtcbiAgICBcbiAgICBmb3IgKGNvbnN0IFtyZXNvdXJjZUlkLCBsb2NrXSBvZiB0aGlzLmFjdGl2ZUxvY2tzLmVudHJpZXMoKSkge1xuICAgICAgaWYgKGxvY2suZXhwaXJlc0F0IDwgbm93KSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGBMb2NrIGZvciAke3Jlc291cmNlSWR9IGV4cGlyZWQgYW5kIHdhcyBhdXRvLXJlbGVhc2VkYCk7XG4gICAgICAgIHRoaXMuYWN0aXZlTG9ja3MuZGVsZXRlKHJlc291cmNlSWQpO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBTdGF0ZU9wZXJhdGlvbkxvY2suZ2V0SW5zdGFuY2UoKTtcbiJdLCJuYW1lcyI6WyJTdGF0ZU9wZXJhdGlvbkxvY2siLCJpbnN0YW5jZSIsImFjdGl2ZUxvY2tzIiwiTWFwIiwiREVGQVVMVF9USU1FT1VUIiwiZ2V0SW5zdGFuY2UiLCJhY3F1aXJlTG9jayIsInJlc291cmNlSWQiLCJvcGVyYXRpb24iLCJ0aW1lb3V0TXMiLCJjbGVhbkV4cGlyZWRMb2NrcyIsImhhcyIsImNvbnNvbGUiLCJ3YXJuIiwiZ2V0IiwibG9ja0lkIiwiRGF0ZSIsIm5vdyIsIk1hdGgiLCJyYW5kb20iLCJ0b1N0cmluZyIsInN1YnN0cmluZyIsImxvY2tJbmZvIiwiaWQiLCJhY3F1aXJlZEF0IiwiZXhwaXJlc0F0Iiwic2V0IiwibG9nIiwic2V0VGltZW91dCIsInJlbGVhc2VMb2NrIiwibG9jayIsImRlbGV0ZSIsImlzTG9ja2VkIiwiZW50cmllcyJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(pages-dir-node)/./utils/StateOperationLock.ts\n");

/***/ }),

/***/ "(pages-dir-node)/./utils/StatePersistence.ts":
/*!***********************************!*\
  !*** ./utils/StatePersistence.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   preventUnintendedRefresh: () => (/* binding */ preventUnintendedRefresh)\n/* harmony export */ });\n/* harmony import */ var _StateOperationLock__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./StateOperationLock */ \"(pages-dir-node)/./utils/StateOperationLock.ts\");\n\nclass StatePersistenceManager {\n    static getStoredState() {\n        throw new Error('Method not implemented.');\n    }\n    // Storage keys - making this public so it can be referenced by sync logic\n    static STORAGE_KEY = 'GRACE_DYNAMIC_SNAPSHOT';\n    static MAX_SNAPSHOT_AGE = 24 * 60 * 60 * 1000;\n    static STORAGE_VERSION = 1;\n    static MAX_STORAGE_SIZE = 4 * 1024 * 1024;\n    // Advanced logging mechanism\n    static log(message, level = 'info') {\n        const timestamp = new Date().toISOString();\n        const logMessage = `[StatePersistence:${level.toUpperCase()}] ${timestamp} - ${message}`;\n        switch(level){\n            case 'info':\n                console.log(logMessage);\n                break;\n            case 'warn':\n                console.warn(logMessage);\n                break;\n            case 'error':\n                console.error(logMessage);\n                break;\n        }\n    // Optional: Send to error tracking service\n    // this.reportToErrorTracking(message, level);\n    }\n    // Check storage quota and manage size\n    static async checkStorageQuota() {\n        try {\n            // Use the Storage API if available (modern browsers)\n            if ('storage' in navigator && 'estimate' in navigator.storage) {\n                const estimate = await navigator.storage.estimate();\n                const { usage, quota } = estimate;\n                if (usage && quota) {\n                    const usageRatio = usage / quota;\n                    this.log(`Storage usage: ${(usageRatio * 100).toFixed(2)}% (${Math.round(usage / 1024 / 1024)}MB / ${Math.round(quota / 1024 / 1024)}MB)`);\n                    // If over 90% of quota, try to clean up\n                    if (usageRatio > 0.9) {\n                        this.log('Storage quota nearing limit, cleaning up old data', 'warn');\n                        return this.cleanupStorage();\n                    }\n                }\n            } else {\n                // Fallback for browsers without Storage API\n                // Check current storage size\n                let totalSize = 0;\n                for(let i = 0; i < localStorage.length; i++){\n                    const key = localStorage.key(i);\n                    if (key) {\n                        const value = localStorage.getItem(key) || '';\n                        totalSize += key.length + value.length;\n                    }\n                }\n                // Convert to MB for easier debugging\n                const sizeMB = totalSize / (1024 * 1024);\n                this.log(`Estimated localStorage usage: ${sizeMB.toFixed(2)}MB`);\n                // If over 4MB, clean up (typical localStorage limit is 5MB)\n                if (totalSize > this.MAX_STORAGE_SIZE) {\n                    this.log('Storage size nearing limit, cleaning up old data', 'warn');\n                    return this.cleanupStorage();\n                }\n            }\n            return true;\n        } catch (error) {\n            this.log(`Error checking storage quota: ${error}`, 'error');\n            return true; // Continue anyway to not block operation\n        }\n    }\n    // Clean up storage when approaching quota limits\n    static cleanupStorage() {\n        try {\n            // Strategy 1: Remove old chat messages (typically the largest data)\n            const keysToCheck = [];\n            for(let i = 0; i < localStorage.length; i++){\n                const key = localStorage.key(i);\n                if (key && (key.startsWith('messages_') || key.includes('draft_'))) {\n                    keysToCheck.push(key);\n                }\n            }\n            // Sort by last access time if available\n            const keysWithTime = keysToCheck.map((key)=>{\n                // Ensure key is a string before calling replace\n                const sessionId = String(key).replace('messages_', '').replace('draft_', '');\n                const lastSynced = localStorage.getItem(`lastSynced_${sessionId}`);\n                const timestamp = lastSynced ? new Date(lastSynced).getTime() : 0;\n                return {\n                    key,\n                    timestamp\n                };\n            });\n            // Sort oldest first\n            keysWithTime.sort((a, b)=>a.timestamp - b.timestamp);\n            // Remove oldest 30% of items\n            const itemsToRemove = Math.ceil(keysWithTime.length * 0.3);\n            for(let i = 0; i < itemsToRemove; i++){\n                if (i < keysWithTime.length) {\n                    localStorage.removeItem(keysWithTime[i].key);\n                    this.log(`Removed old data: ${keysWithTime[i].key}`);\n                }\n            }\n            // Strategy 2: If main snapshot is too large, try to trim it\n            const snapshot = localStorage.getItem(this.STORAGE_KEY);\n            if (snapshot && snapshot.length > 1024 * 1024) {\n                try {\n                    const parsedSnapshot = JSON.parse(snapshot);\n                    // Trim message history to reduce size\n                    if (parsedSnapshot.chatContext && parsedSnapshot.chatContext.messages) {\n                        // Keep only last 20 messages\n                        parsedSnapshot.chatContext.messages = parsedSnapshot.chatContext.messages.slice(-20);\n                    }\n                    // Store the trimmed version\n                    localStorage.setItem(this.STORAGE_KEY, JSON.stringify(parsedSnapshot));\n                    this.log('Trimmed main snapshot size');\n                } catch (e) {\n                    this.log(`Error trimming snapshot: ${e}`, 'error');\n                }\n            }\n            return true;\n        } catch (error) {\n            this.log(`Error cleaning up storage: ${error}`, 'error');\n            return false;\n        }\n    }\n    // Validate snapshot structure and schema\n    static validateSnapshotSchema(snapshot) {\n        if (!snapshot || typeof snapshot !== 'object') return false;\n        // Check required fields\n        if (typeof snapshot.timestamp !== 'number') return false;\n        // Check for required sub-objects\n        const requiredObjects = [\n            'userSession',\n            'chatContext',\n            'pageState',\n            'widgetStates'\n        ];\n        for (const obj of requiredObjects){\n            if (!snapshot[obj] || typeof snapshot[obj] !== 'object') {\n                return false;\n            }\n        }\n        return true;\n    }\n    // Create a backup of the current snapshot\n    static createBackup() {\n        try {\n            const currentSnapshot = localStorage.getItem(this.STORAGE_KEY);\n            if (currentSnapshot) {\n                localStorage.setItem(`${this.STORAGE_KEY}_BACKUP`, currentSnapshot);\n            }\n        } catch (error) {\n            this.log(`Failed to create backup: ${error}`, 'warn');\n        }\n    }\n    // Capture the current application state with enhanced safety\n    static async captureSnapshot(partialState) {\n        // Acquire a lock for state operations to prevent race conditions\n        const lockId = _StateOperationLock__WEBPACK_IMPORTED_MODULE_0__[\"default\"].acquireLock('state_snapshot', 'capture_snapshot');\n        if (!lockId) {\n            this.log('Could not acquire lock for state operation, another operation is in progress', 'warn');\n            return;\n        }\n        try {\n            // Validate storage availability\n            if (!this.isStorageAvailable()) {\n                this.log('Local storage not available', 'warn');\n                return;\n            }\n            // Check quota before writing\n            const quotaOk = await this.checkStorageQuota();\n            if (!quotaOk) {\n                this.log('Storage quota issues, data may not be saved completely', 'warn');\n            }\n            const existingSnapshot = this.retrieveSnapshot();\n            const newSnapshot = {\n                timestamp: Date.now(),\n                version: this.STORAGE_VERSION,\n                userSession: partialState?.userSession || existingSnapshot?.userSession || {},\n                chatContext: partialState?.chatContext || existingSnapshot?.chatContext || {},\n                pageState: partialState?.pageState || existingSnapshot?.pageState || {},\n                widgetStates: partialState?.widgetStates || existingSnapshot?.widgetStates || {}\n            };\n            // Create a backup of the current state before updating\n            this.createBackup();\n            // Attempt to save state\n            try {\n                localStorage.setItem(this.STORAGE_KEY, JSON.stringify(newSnapshot));\n                this.log('State snapshot captured successfully');\n            } catch (storageError) {\n                // If failed due to quota, force cleanup and try again\n                this.log(`Storage error, forcing cleanup: ${storageError}`, 'warn');\n                this.cleanupStorage();\n                // Try one more time with a more minimal state\n                const minimalSnapshot = {\n                    timestamp: Date.now(),\n                    version: this.STORAGE_VERSION,\n                    userSession: newSnapshot.userSession,\n                    // Minimal objects to ensure basic functionality\n                    chatContext: {\n                        currentConversationId: newSnapshot.chatContext.currentConversationId\n                    },\n                    pageState: {\n                        lastVisitedPath: newSnapshot.pageState.lastVisitedPath\n                    },\n                    widgetStates: {}\n                };\n                localStorage.setItem(this.STORAGE_KEY, JSON.stringify(minimalSnapshot));\n                this.log('Minimal state snapshot saved as fallback');\n            }\n        } catch (error) {\n            this.log(`Failed to capture state snapshot: ${error}`, 'error');\n        } finally{\n            // Always release the lock\n            _StateOperationLock__WEBPACK_IMPORTED_MODULE_0__[\"default\"].releaseLock('state_snapshot', lockId);\n        }\n    }\n    // Check local storage availability\n    static isStorageAvailable() {\n        try {\n            const testKey = '__storage_test__';\n            localStorage.setItem(testKey, testKey);\n            localStorage.removeItem(testKey);\n            return true;\n        } catch (e) {\n            return false;\n        }\n    }\n    // Validate snapshot age and integrity\n    static validateSnapshot(snapshot) {\n        if (!snapshot) return false;\n        // Check schema/structure validity\n        if (!this.validateSnapshotSchema(snapshot)) {\n            this.log('Snapshot has invalid schema, discarding', 'warn');\n            return false;\n        }\n        const currentTime = Date.now();\n        const snapshotAge = currentTime - snapshot.timestamp;\n        if (snapshotAge > this.MAX_SNAPSHOT_AGE) {\n            this.log('Snapshot too old, discarding', 'warn');\n            return false;\n        }\n        return true;\n    }\n    // Retrieve the last saved state snapshot with corruption recovery\n    static retrieveSnapshot() {\n        // We don't lock for reads, but we do check if there's a write in progress\n        if (_StateOperationLock__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isLocked('state_snapshot')) {\n            this.log('State snapshot is currently being updated, using existing snapshot', 'warn');\n        }\n        try {\n            const snapshot = localStorage.getItem(this.STORAGE_KEY);\n            if (!snapshot) return null;\n            try {\n                const parsedSnapshot = JSON.parse(snapshot);\n                // Validate snapshot integrity\n                if (this.validateSnapshot(parsedSnapshot)) {\n                    return parsedSnapshot;\n                } else {\n                    this.log('Invalid snapshot detected, attempting recovery', 'warn');\n                    return this.attemptSnapshotRecovery();\n                }\n            } catch (parseError) {\n                this.log(`JSON parse error: ${parseError}, attempting recovery`, 'error');\n                return this.attemptSnapshotRecovery();\n            }\n        } catch (error) {\n            this.log(`Failed to retrieve state snapshot: ${error}`, 'error');\n            return null;\n        }\n    }\n    // Attempt to recover corrupted state\n    static attemptSnapshotRecovery() {\n        try {\n            this.log('Attempting state recovery', 'warn');\n            // Strategy 1: Check for backup\n            const backupSnapshot = localStorage.getItem(`${this.STORAGE_KEY}_BACKUP`);\n            if (backupSnapshot) {\n                try {\n                    const parsedBackup = JSON.parse(backupSnapshot);\n                    if (this.validateSnapshot(parsedBackup)) {\n                        this.log('Recovered state from backup', 'info');\n                        return parsedBackup;\n                    }\n                } catch (e) {\n                    this.log('Backup snapshot also corrupted', 'warn');\n                }\n            }\n            // Strategy 2: Build from individual pieces in localStorage\n            const recoveredState = {\n                timestamp: Date.now(),\n                version: this.STORAGE_VERSION,\n                userSession: {},\n                chatContext: {},\n                pageState: {},\n                widgetStates: {}\n            };\n            // Try to get last path from localStorage\n            const activeSessionId = localStorage.getItem('activeSessionId');\n            if (activeSessionId) {\n                recoveredState.chatContext.currentConversationId = activeSessionId;\n            }\n            // Set recovery flag\n            recoveredState.recovered = true;\n            this.log('Created minimal recovered state', 'info');\n            return recoveredState;\n        } catch (error) {\n            this.log(`Recovery failed: ${error}`, 'error');\n            return null;\n        }\n    }\n    // Hydrate application state\n    static hydrateState(router) {\n        const snapshot = this.retrieveSnapshot();\n        if (snapshot) {\n            // Optionally navigate to last visited path\n            if (router && snapshot.pageState.lastVisitedPath) {\n                router.push(snapshot.pageState.lastVisitedPath);\n            }\n            return snapshot;\n        }\n        return {};\n    }\n    // Clear the snapshot (used during logout)\n    static clearSnapshot() {\n        localStorage.removeItem(this.STORAGE_KEY);\n    }\n}\n// Prevent accidental page unload\nfunction preventUnintendedRefresh(e) {\n    e.preventDefault();\n    e.returnValue = ''; // Required for Chrome\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (StatePersistenceManager);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./utils/StatePersistence.ts\n");

/***/ }),

/***/ "(pages-dir-node)/./utils/authUtils.ts":
/*!****************************!*\
  !*** ./utils/authUtils.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TOKEN_EXPIRY_KEY: () => (/* binding */ TOKEN_EXPIRY_KEY),\n/* harmony export */   TOKEN_KEY: () => (/* binding */ TOKEN_KEY),\n/* harmony export */   addAuthHeaders: () => (/* binding */ addAuthHeaders),\n/* harmony export */   authFetch: () => (/* binding */ authFetch),\n/* harmony export */   clearAuthTokens: () => (/* binding */ clearAuthTokens),\n/* harmony export */   getAuthToken: () => (/* binding */ getAuthToken),\n/* harmony export */   getTokenExpiry: () => (/* binding */ getTokenExpiry),\n/* harmony export */   isTokenExpired: () => (/* binding */ isTokenExpired),\n/* harmony export */   storeAuthToken: () => (/* binding */ storeAuthToken)\n/* harmony export */ });\n/**\n * Authentication Utilities for Grace App\n * \n * Provides standardized token management compatible with the existing auth-utils.js system.\n */ // Token storage constants - exported for consistency across the codebase\nconst TOKEN_KEY = 'grace_token';\nconst TOKEN_EXPIRY_KEY = 'grace_token_expiry';\n// Backward/parallel compatibility: some modules may use this alternate key\nconst ALT_TOKEN_KEY = 'grace_auth_token';\n// Simple mutex to prevent race conditions\nlet tokenMutex = Promise.resolve();\n/**\n * Store authentication token with remember-me preference\n * Uses a mutex to prevent race conditions\n */ async function storeAuthToken(token, rememberMe = false) {\n    if (true) return;\n    // Wait for any existing operation to complete\n    await tokenMutex;\n    // Create a new lock that others will wait for\n    let releaseLock;\n    tokenMutex = new Promise((resolve)=>{\n        releaseLock = resolve;\n    });\n    try {\n        // Clear both to prevent any token conflicts\n        clearAuthTokens();\n        // Store in the appropriate location\n        const storage = rememberMe ? localStorage : sessionStorage;\n        // Write under both keys for compatibility\n        storage.setItem(TOKEN_KEY, token);\n        storage.setItem(ALT_TOKEN_KEY, token);\n        // Set expiry date (24 hours from now)\n        const expiry = new Date();\n        expiry.setHours(expiry.getHours() + 24);\n        storage.setItem(TOKEN_EXPIRY_KEY, expiry.toISOString());\n    } finally{\n        releaseLock();\n    }\n}\n/**\n * Get the current authentication token from storage\n * Checks sessionStorage first, then falls back to localStorage\n */ function getAuthToken() {\n    if (false) {}\n    return null;\n}\n/**\n * Get token expiration date\n */ function getTokenExpiry() {\n    if (false) {}\n    return null;\n}\n/**\n * Check if token is expired\n */ function isTokenExpired() {\n    const expiry = getTokenExpiry();\n    return !expiry || expiry < new Date();\n}\n/**\n * Clear all authentication tokens\n */ function clearAuthTokens() {\n    if (false) {}\n}\n/**\n * Add authorization headers to fetch options\n */ function addAuthHeaders(options = {}) {\n    const token = getAuthToken();\n    const headers = {\n        ...options.headers,\n        'Content-Type': 'application/json'\n    };\n    if (token) {\n        headers['Authorization'] = `Bearer ${token}`;\n    }\n    return {\n        ...options,\n        headers\n    };\n}\n/**\n * Wrapper for fetch with authentication headers\n */ async function authFetch(url, options = {}) {\n    return fetch(url, addAuthHeaders(options));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS8uL3V0aWxzL2F1dGhVdGlscy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQTs7OztDQUlDLEdBRUQseUVBQXlFO0FBQ2xFLE1BQU1BLFlBQVksY0FBYztBQUNoQyxNQUFNQyxtQkFBbUIscUJBQXFCO0FBQ3JELDJFQUEyRTtBQUMzRSxNQUFNQyxnQkFBZ0I7QUFFdEIsMENBQTBDO0FBQzFDLElBQUlDLGFBQWFDLFFBQVFDLE9BQU87QUFFaEM7OztDQUdDLEdBQ00sZUFBZUMsZUFBZUMsS0FBYSxFQUFFQyxhQUFzQixLQUFLO0lBQzdFLElBQUksSUFBNkIsRUFBRTtJQUVuQyw4Q0FBOEM7SUFDOUMsTUFBTUw7SUFFTiw4Q0FBOEM7SUFDOUMsSUFBSU07SUFDSk4sYUFBYSxJQUFJQyxRQUFRQyxDQUFBQTtRQUN2QkksY0FBY0o7SUFDaEI7SUFFQSxJQUFJO1FBQ0YsNENBQTRDO1FBQzVDSztRQUVBLG9DQUFvQztRQUNwQyxNQUFNQyxVQUFVSCxhQUFhSSxlQUFlQztRQUM1QywwQ0FBMEM7UUFDMUNGLFFBQVFHLE9BQU8sQ0FBQ2QsV0FBV087UUFDM0JJLFFBQVFHLE9BQU8sQ0FBQ1osZUFBZUs7UUFFL0Isc0NBQXNDO1FBQ3RDLE1BQU1RLFNBQVMsSUFBSUM7UUFDbkJELE9BQU9FLFFBQVEsQ0FBQ0YsT0FBT0csUUFBUSxLQUFLO1FBQ3BDUCxRQUFRRyxPQUFPLENBQUNiLGtCQUFrQmMsT0FBT0ksV0FBVztJQUN0RCxTQUFVO1FBQ1JWO0lBQ0Y7QUFDRjtBQUVBOzs7Q0FHQyxHQUNNLFNBQVNXO0lBQ2QsSUFBSSxLQUE2QixFQUFFLEVBU2xDO0lBQ0QsT0FBTztBQUNUO0FBRUE7O0NBRUMsR0FDTSxTQUFTRTtJQUNkLElBQUksS0FBNkIsRUFBRSxFQUdsQztJQUNELE9BQU87QUFDVDtBQUVBOztDQUVDLEdBQ00sU0FBU0U7SUFDZCxNQUFNVCxTQUFTTztJQUNmLE9BQU8sQ0FBQ1AsVUFBVUEsU0FBUyxJQUFJQztBQUNqQztBQUVBOztDQUVDLEdBQ00sU0FBU047SUFDZCxJQUFJLEtBQTZCLEVBQUUsRUFRbEM7QUFDSDtBQUVBOztDQUVDLEdBQ00sU0FBU2dCLGVBQWVDLFVBQXVCLENBQUMsQ0FBQztJQUN0RCxNQUFNcEIsUUFBUWE7SUFDZCxNQUFNUSxVQUFVO1FBQ2QsR0FBR0QsUUFBUUMsT0FBTztRQUNsQixnQkFBZ0I7SUFDbEI7SUFFQSxJQUFJckIsT0FBTztRQUNUcUIsT0FBTyxDQUFDLGdCQUFnQixHQUFHLENBQUMsT0FBTyxFQUFFckIsT0FBTztJQUM5QztJQUVBLE9BQU87UUFDTCxHQUFHb0IsT0FBTztRQUNWQztJQUNGO0FBQ0Y7QUFFQTs7Q0FFQyxHQUNNLGVBQWVDLFVBQVVDLEdBQVcsRUFBRUgsVUFBdUIsQ0FBQyxDQUFDO0lBQ3BFLE9BQU9JLE1BQU1ELEtBQUtKLGVBQWVDO0FBQ25DIiwic291cmNlcyI6WyIvaG9tZS91YnVudHUvZ3JhY2UtcHJvamVjdC9zcmMvdWkvdXRpbHMvYXV0aFV0aWxzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQXV0aGVudGljYXRpb24gVXRpbGl0aWVzIGZvciBHcmFjZSBBcHBcbiAqIFxuICogUHJvdmlkZXMgc3RhbmRhcmRpemVkIHRva2VuIG1hbmFnZW1lbnQgY29tcGF0aWJsZSB3aXRoIHRoZSBleGlzdGluZyBhdXRoLXV0aWxzLmpzIHN5c3RlbS5cbiAqL1xuXG4vLyBUb2tlbiBzdG9yYWdlIGNvbnN0YW50cyAtIGV4cG9ydGVkIGZvciBjb25zaXN0ZW5jeSBhY3Jvc3MgdGhlIGNvZGViYXNlXG5leHBvcnQgY29uc3QgVE9LRU5fS0VZID0gJ2dyYWNlX3Rva2VuJztcbmV4cG9ydCBjb25zdCBUT0tFTl9FWFBJUllfS0VZID0gJ2dyYWNlX3Rva2VuX2V4cGlyeSc7XG4vLyBCYWNrd2FyZC9wYXJhbGxlbCBjb21wYXRpYmlsaXR5OiBzb21lIG1vZHVsZXMgbWF5IHVzZSB0aGlzIGFsdGVybmF0ZSBrZXlcbmNvbnN0IEFMVF9UT0tFTl9LRVkgPSAnZ3JhY2VfYXV0aF90b2tlbic7XG5cbi8vIFNpbXBsZSBtdXRleCB0byBwcmV2ZW50IHJhY2UgY29uZGl0aW9uc1xubGV0IHRva2VuTXV0ZXggPSBQcm9taXNlLnJlc29sdmUoKTtcblxuLyoqXG4gKiBTdG9yZSBhdXRoZW50aWNhdGlvbiB0b2tlbiB3aXRoIHJlbWVtYmVyLW1lIHByZWZlcmVuY2VcbiAqIFVzZXMgYSBtdXRleCB0byBwcmV2ZW50IHJhY2UgY29uZGl0aW9uc1xuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gc3RvcmVBdXRoVG9rZW4odG9rZW46IHN0cmluZywgcmVtZW1iZXJNZTogYm9vbGVhbiA9IGZhbHNlKTogUHJvbWlzZTx2b2lkPiB7XG4gIGlmICh0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJykgcmV0dXJuO1xuICBcbiAgLy8gV2FpdCBmb3IgYW55IGV4aXN0aW5nIG9wZXJhdGlvbiB0byBjb21wbGV0ZVxuICBhd2FpdCB0b2tlbk11dGV4O1xuICBcbiAgLy8gQ3JlYXRlIGEgbmV3IGxvY2sgdGhhdCBvdGhlcnMgd2lsbCB3YWl0IGZvclxuICBsZXQgcmVsZWFzZUxvY2s6ICgpID0+IHZvaWQ7XG4gIHRva2VuTXV0ZXggPSBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICByZWxlYXNlTG9jayA9IHJlc29sdmU7XG4gIH0pO1xuICBcbiAgdHJ5IHtcbiAgICAvLyBDbGVhciBib3RoIHRvIHByZXZlbnQgYW55IHRva2VuIGNvbmZsaWN0c1xuICAgIGNsZWFyQXV0aFRva2VucygpO1xuICAgIFxuICAgIC8vIFN0b3JlIGluIHRoZSBhcHByb3ByaWF0ZSBsb2NhdGlvblxuICAgIGNvbnN0IHN0b3JhZ2UgPSByZW1lbWJlck1lID8gbG9jYWxTdG9yYWdlIDogc2Vzc2lvblN0b3JhZ2U7XG4gICAgLy8gV3JpdGUgdW5kZXIgYm90aCBrZXlzIGZvciBjb21wYXRpYmlsaXR5XG4gICAgc3RvcmFnZS5zZXRJdGVtKFRPS0VOX0tFWSwgdG9rZW4pO1xuICAgIHN0b3JhZ2Uuc2V0SXRlbShBTFRfVE9LRU5fS0VZLCB0b2tlbik7XG4gICAgXG4gICAgLy8gU2V0IGV4cGlyeSBkYXRlICgyNCBob3VycyBmcm9tIG5vdylcbiAgICBjb25zdCBleHBpcnkgPSBuZXcgRGF0ZSgpO1xuICAgIGV4cGlyeS5zZXRIb3VycyhleHBpcnkuZ2V0SG91cnMoKSArIDI0KTtcbiAgICBzdG9yYWdlLnNldEl0ZW0oVE9LRU5fRVhQSVJZX0tFWSwgZXhwaXJ5LnRvSVNPU3RyaW5nKCkpO1xuICB9IGZpbmFsbHkge1xuICAgIHJlbGVhc2VMb2NrISgpO1xuICB9XG59XG5cbi8qKlxuICogR2V0IHRoZSBjdXJyZW50IGF1dGhlbnRpY2F0aW9uIHRva2VuIGZyb20gc3RvcmFnZVxuICogQ2hlY2tzIHNlc3Npb25TdG9yYWdlIGZpcnN0LCB0aGVuIGZhbGxzIGJhY2sgdG8gbG9jYWxTdG9yYWdlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRBdXRoVG9rZW4oKTogc3RyaW5nIHwgbnVsbCB7XG4gIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICAgIC8vIFByZWZlciBzZXNzaW9uU3RvcmFnZSBmb3IgY3VycmVudCBzZXNzaW9uLCB0aGVuIGxvY2FsU3RvcmFnZVxuICAgIC8vIENoZWNrIGJvdGggcHJpbWFyeSBhbmQgYWx0ZXJuYXRlIGtleXNcbiAgICByZXR1cm4gKFxuICAgICAgc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbShUT0tFTl9LRVkpIHx8XG4gICAgICBzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKEFMVF9UT0tFTl9LRVkpIHx8XG4gICAgICBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShUT0tFTl9LRVkpIHx8XG4gICAgICBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShBTFRfVE9LRU5fS0VZKVxuICAgICk7XG4gIH1cbiAgcmV0dXJuIG51bGw7XG59XG5cbi8qKlxuICogR2V0IHRva2VuIGV4cGlyYXRpb24gZGF0ZVxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0VG9rZW5FeHBpcnkoKTogRGF0ZSB8IG51bGwge1xuICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBjb25zdCBleHBpcnlTdHIgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShUT0tFTl9FWFBJUllfS0VZKSB8fCBzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKFRPS0VOX0VYUElSWV9LRVkpO1xuICAgIHJldHVybiBleHBpcnlTdHIgPyBuZXcgRGF0ZShleHBpcnlTdHIpIDogbnVsbDtcbiAgfVxuICByZXR1cm4gbnVsbDtcbn1cblxuLyoqXG4gKiBDaGVjayBpZiB0b2tlbiBpcyBleHBpcmVkXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc1Rva2VuRXhwaXJlZCgpOiBib29sZWFuIHtcbiAgY29uc3QgZXhwaXJ5ID0gZ2V0VG9rZW5FeHBpcnkoKTtcbiAgcmV0dXJuICFleHBpcnkgfHwgZXhwaXJ5IDwgbmV3IERhdGUoKTtcbn1cblxuLyoqXG4gKiBDbGVhciBhbGwgYXV0aGVudGljYXRpb24gdG9rZW5zXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjbGVhckF1dGhUb2tlbnMoKTogdm9pZCB7XG4gIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICAgIC8vIENsZWFyIGZyb20gYm90aCBzdG9yYWdlIGxvY2F0aW9ucyB0byBiZSBzYWZlXG4gICAgbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oVE9LRU5fS0VZKTtcbiAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbShBTFRfVE9LRU5fS0VZKTtcbiAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbShUT0tFTl9FWFBJUllfS0VZKTtcbiAgICBzZXNzaW9uU3RvcmFnZS5yZW1vdmVJdGVtKFRPS0VOX0tFWSk7XG4gICAgc2Vzc2lvblN0b3JhZ2UucmVtb3ZlSXRlbShBTFRfVE9LRU5fS0VZKTtcbiAgICBzZXNzaW9uU3RvcmFnZS5yZW1vdmVJdGVtKFRPS0VOX0VYUElSWV9LRVkpO1xuICB9XG59XG5cbi8qKlxuICogQWRkIGF1dGhvcml6YXRpb24gaGVhZGVycyB0byBmZXRjaCBvcHRpb25zXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhZGRBdXRoSGVhZGVycyhvcHRpb25zOiBSZXF1ZXN0SW5pdCA9IHt9KTogUmVxdWVzdEluaXQge1xuICBjb25zdCB0b2tlbiA9IGdldEF1dGhUb2tlbigpO1xuICBjb25zdCBoZWFkZXJzID0geyBcbiAgICAuLi5vcHRpb25zLmhlYWRlcnMsXG4gICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgfTtcbiAgXG4gIGlmICh0b2tlbikge1xuICAgIGhlYWRlcnNbJ0F1dGhvcml6YXRpb24nXSA9IGBCZWFyZXIgJHt0b2tlbn1gO1xuICB9XG4gIFxuICByZXR1cm4ge1xuICAgIC4uLm9wdGlvbnMsXG4gICAgaGVhZGVycyxcbiAgfTtcbn1cblxuLyoqXG4gKiBXcmFwcGVyIGZvciBmZXRjaCB3aXRoIGF1dGhlbnRpY2F0aW9uIGhlYWRlcnNcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGF1dGhGZXRjaCh1cmw6IHN0cmluZywgb3B0aW9uczogUmVxdWVzdEluaXQgPSB7fSk6IFByb21pc2U8UmVzcG9uc2U+IHtcbiAgcmV0dXJuIGZldGNoKHVybCwgYWRkQXV0aEhlYWRlcnMob3B0aW9ucykpO1xufVxuXG4iXSwibmFtZXMiOlsiVE9LRU5fS0VZIiwiVE9LRU5fRVhQSVJZX0tFWSIsIkFMVF9UT0tFTl9LRVkiLCJ0b2tlbk11dGV4IiwiUHJvbWlzZSIsInJlc29sdmUiLCJzdG9yZUF1dGhUb2tlbiIsInRva2VuIiwicmVtZW1iZXJNZSIsInJlbGVhc2VMb2NrIiwiY2xlYXJBdXRoVG9rZW5zIiwic3RvcmFnZSIsImxvY2FsU3RvcmFnZSIsInNlc3Npb25TdG9yYWdlIiwic2V0SXRlbSIsImV4cGlyeSIsIkRhdGUiLCJzZXRIb3VycyIsImdldEhvdXJzIiwidG9JU09TdHJpbmciLCJnZXRBdXRoVG9rZW4iLCJnZXRJdGVtIiwiZ2V0VG9rZW5FeHBpcnkiLCJleHBpcnlTdHIiLCJpc1Rva2VuRXhwaXJlZCIsInJlbW92ZUl0ZW0iLCJhZGRBdXRoSGVhZGVycyIsIm9wdGlvbnMiLCJoZWFkZXJzIiwiYXV0aEZldGNoIiwidXJsIiwiZmV0Y2giXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(pages-dir-node)/./utils/authUtils.ts\n");

/***/ }),

/***/ "(pages-dir-node)/./utils/devAuth.ts":
/*!**************************!*\
  !*** ./utils/devAuth.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bypassLogin: () => (/* binding */ bypassLogin),\n/* harmony export */   getAdminAuthData: () => (/* binding */ getAdminAuthData),\n/* harmony export */   hasAdminBypass: () => (/* binding */ hasAdminBypass)\n/* harmony export */ });\n/* harmony import */ var _authUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./authUtils */ \"(pages-dir-node)/./utils/authUtils.ts\");\n/**\n * Grace Admin Access Utilities\n * \n * This file contains the admin backdoor mechanism that provides\n * immediate access to the Grace interface with full privileges.\n */ \n// Admin user credentials with full access permissions\nconst ADMIN_USER = {\n    id: 'admin-kdot-id',\n    username: 'kdot',\n    email: 'kmanjo11@gmail.com',\n    role: 'admin',\n    permissions: [\n        'ALL'\n    ],\n    wallets: [],\n    settings: {\n        theme: 'dark',\n        notifications: true\n    }\n};\n// Admin authentication token (extremely long-lived - 10 years)\n// This is a properly formatted JWT that should pass validation checks\nconst ADMIN_TOKEN = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhZG1pbi1rZG90LWlkIiwidXNlcm5hbWUiOiJrZG90IiwiZW1haWwiOiJrbWFuam8xMUBnbWFpbC5jb20iLCJyb2xlIjoiYWRtaW4iLCJwZXJtaXNzaW9ucyI6WyJBTEwiXSwiZXhwIjoxOTAwMDAwMDAwLCJpYXQiOjE1ODAwMDAwMDB9.p58K8xzT2BEuBRKgNUMTdbzHRhPgpnL_q91qfm8qRCk';\n/**\n * Check for admin backdoor query parameter\n */ const hasAdminBypass = ()=>{\n    const urlParams = new URLSearchParams(window.location.search);\n    // Secret parameter with a specific value for added security\n    return urlParams.get('xmaster') === 'kdotaccess';\n};\n/**\n * Create admin authentication data\n */ const getAdminAuthData = ()=>{\n    return {\n        token: ADMIN_TOKEN,\n        user: ADMIN_USER,\n        remember_me: true\n    };\n};\n/**\n * Bypass normal login for admin user with all access privileges\n * \n * @param loginFunction The real login function from AuthContext\n */ const bypassLogin = (loginFunction)=>{\n    try {\n        // Get admin credentials and token\n        const adminAuthData = getAdminAuthData();\n        if (adminAuthData) {\n            console.info('🔑 Using admin master access');\n            // Ensure the token is stored in BOTH localStorage and sessionStorage\n            // This guarantees it will be found regardless of which storage is checked\n            localStorage.setItem('grace_token', adminAuthData.token);\n            sessionStorage.setItem('grace_token', adminAuthData.token);\n            // Set a very far future expiry to prevent token timeout\n            const farFuture = new Date();\n            farFuture.setFullYear(farFuture.getFullYear() + 10); // 10 years in the future\n            localStorage.setItem('grace_token_expiry', farFuture.toISOString());\n            sessionStorage.setItem('grace_token_expiry', farFuture.toISOString());\n            // Use the standard auth function to store properly\n            (0,_authUtils__WEBPACK_IMPORTED_MODULE_0__.storeAuthToken)(adminAuthData.token, true);\n            // Call the real login function with our admin data\n            loginFunction(adminAuthData);\n            // Store a flag indicating we're using admin mode\n            localStorage.setItem('grace_admin_mode', 'true');\n        }\n    } catch (error) {\n        console.error('Admin access failed:', error);\n        // Fallback direct storage in case of error\n        const adminAuthData = getAdminAuthData();\n        localStorage.setItem('grace_token', adminAuthData.token);\n        localStorage.setItem('grace_admin_mode', 'true');\n        window.location.reload(); // Force reload to retry auth\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS8uL3V0aWxzL2RldkF1dGgudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7OztDQUtDLEdBRTRDO0FBRTdDLHNEQUFzRDtBQUN0RCxNQUFNQyxhQUFhO0lBQ2pCQyxJQUFJO0lBQ0pDLFVBQVU7SUFDVkMsT0FBTztJQUNQQyxNQUFNO0lBQ05DLGFBQWE7UUFBQztLQUFNO0lBQ3BCQyxTQUFTLEVBQUU7SUFDWEMsVUFBVTtRQUNSQyxPQUFPO1FBQ1BDLGVBQWU7SUFDakI7QUFDRjtBQUVBLCtEQUErRDtBQUMvRCxzRUFBc0U7QUFDdEUsTUFBTUMsY0FBYztBQUVwQjs7Q0FFQyxHQUNNLE1BQU1DLGlCQUFpQjtJQUM1QixNQUFNQyxZQUFZLElBQUlDLGdCQUFnQkMsT0FBT0MsUUFBUSxDQUFDQyxNQUFNO0lBQzVELDREQUE0RDtJQUM1RCxPQUFPSixVQUFVSyxHQUFHLENBQUMsZUFBZTtBQUN0QyxFQUFFO0FBRUY7O0NBRUMsR0FDTSxNQUFNQyxtQkFBbUI7SUFDOUIsT0FBTztRQUNMQyxPQUFPVDtRQUNQVSxNQUFNcEI7UUFDTnFCLGFBQWE7SUFDZjtBQUNGLEVBQUU7QUFFRjs7OztDQUlDLEdBQ00sTUFBTUMsY0FBYyxDQUFDQztJQUMxQixJQUFJO1FBQ0Ysa0NBQWtDO1FBQ2xDLE1BQU1DLGdCQUFnQk47UUFFdEIsSUFBSU0sZUFBZTtZQUNqQkMsUUFBUUMsSUFBSSxDQUFDO1lBRWIscUVBQXFFO1lBQ3JFLDBFQUEwRTtZQUMxRUMsYUFBYUMsT0FBTyxDQUFDLGVBQWVKLGNBQWNMLEtBQUs7WUFDdkRVLGVBQWVELE9BQU8sQ0FBQyxlQUFlSixjQUFjTCxLQUFLO1lBRXpELHdEQUF3RDtZQUN4RCxNQUFNVyxZQUFZLElBQUlDO1lBQ3RCRCxVQUFVRSxXQUFXLENBQUNGLFVBQVVHLFdBQVcsS0FBSyxLQUFLLHlCQUF5QjtZQUM5RU4sYUFBYUMsT0FBTyxDQUFDLHNCQUFzQkUsVUFBVUksV0FBVztZQUNoRUwsZUFBZUQsT0FBTyxDQUFDLHNCQUFzQkUsVUFBVUksV0FBVztZQUVsRSxtREFBbUQ7WUFDbkRuQywwREFBY0EsQ0FBQ3lCLGNBQWNMLEtBQUssRUFBRTtZQUVwQyxtREFBbUQ7WUFDbkRJLGNBQWNDO1lBRWQsaURBQWlEO1lBQ2pERyxhQUFhQyxPQUFPLENBQUMsb0JBQW9CO1FBQzNDO0lBQ0YsRUFBRSxPQUFPTyxPQUFPO1FBQ2RWLFFBQVFVLEtBQUssQ0FBQyx3QkFBd0JBO1FBQ3RDLDJDQUEyQztRQUMzQyxNQUFNWCxnQkFBZ0JOO1FBQ3RCUyxhQUFhQyxPQUFPLENBQUMsZUFBZUosY0FBY0wsS0FBSztRQUN2RFEsYUFBYUMsT0FBTyxDQUFDLG9CQUFvQjtRQUN6Q2QsT0FBT0MsUUFBUSxDQUFDcUIsTUFBTSxJQUFJLDZCQUE2QjtJQUN6RDtBQUNGLEVBQUUiLCJzb3VyY2VzIjpbIi9ob21lL3VidW50dS9ncmFjZS1wcm9qZWN0L3NyYy91aS91dGlscy9kZXZBdXRoLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR3JhY2UgQWRtaW4gQWNjZXNzIFV0aWxpdGllc1xuICogXG4gKiBUaGlzIGZpbGUgY29udGFpbnMgdGhlIGFkbWluIGJhY2tkb29yIG1lY2hhbmlzbSB0aGF0IHByb3ZpZGVzXG4gKiBpbW1lZGlhdGUgYWNjZXNzIHRvIHRoZSBHcmFjZSBpbnRlcmZhY2Ugd2l0aCBmdWxsIHByaXZpbGVnZXMuXG4gKi9cblxuaW1wb3J0IHsgc3RvcmVBdXRoVG9rZW4gfSBmcm9tICcuL2F1dGhVdGlscyc7XG5cbi8vIEFkbWluIHVzZXIgY3JlZGVudGlhbHMgd2l0aCBmdWxsIGFjY2VzcyBwZXJtaXNzaW9uc1xuY29uc3QgQURNSU5fVVNFUiA9IHtcbiAgaWQ6ICdhZG1pbi1rZG90LWlkJyxcbiAgdXNlcm5hbWU6ICdrZG90JyxcbiAgZW1haWw6ICdrbWFuam8xMUBnbWFpbC5jb20nLFxuICByb2xlOiAnYWRtaW4nLFxuICBwZXJtaXNzaW9uczogWydBTEwnXSxcbiAgd2FsbGV0czogW10sIC8vIFdpbGwgYmUgcG9wdWxhdGVkIGJ5IHRoZSBhcHBcbiAgc2V0dGluZ3M6IHtcbiAgICB0aGVtZTogJ2RhcmsnLFxuICAgIG5vdGlmaWNhdGlvbnM6IHRydWVcbiAgfVxufTtcblxuLy8gQWRtaW4gYXV0aGVudGljYXRpb24gdG9rZW4gKGV4dHJlbWVseSBsb25nLWxpdmVkIC0gMTAgeWVhcnMpXG4vLyBUaGlzIGlzIGEgcHJvcGVybHkgZm9ybWF0dGVkIEpXVCB0aGF0IHNob3VsZCBwYXNzIHZhbGlkYXRpb24gY2hlY2tzXG5jb25zdCBBRE1JTl9UT0tFTiA9ICdleUpoYkdjaU9pSklVekkxTmlJc0luUjVjQ0k2SWtwWFZDSjkuZXlKemRXSWlPaUpoWkcxcGJpMXJaRzkwTFdsa0lpd2lkWE5sY201aGJXVWlPaUpyWkc5MElpd2laVzFoYVd3aU9pSnJiV0Z1YW04eE1VQm5iV0ZwYkM1amIyMGlMQ0p5YjJ4bElqb2lZV1J0YVc0aUxDSndaWEp0YVhOemFXOXVjeUk2V3lKQlRFd2lYU3dpWlhod0lqb3hPVEF3TURBd01EQXdMQ0pwWVhRaU9qRTFPREF3TURBd01EQjkucDU4Szh4elQyQkV1QlJLZ05VTVRkYnpIUmhQZ3BuTF9xOTFxZm04cVJDayc7IFxuXG4vKipcbiAqIENoZWNrIGZvciBhZG1pbiBiYWNrZG9vciBxdWVyeSBwYXJhbWV0ZXJcbiAqL1xuZXhwb3J0IGNvbnN0IGhhc0FkbWluQnlwYXNzID0gKCk6IGJvb2xlYW4gPT4ge1xuICBjb25zdCB1cmxQYXJhbXMgPSBuZXcgVVJMU2VhcmNoUGFyYW1zKHdpbmRvdy5sb2NhdGlvbi5zZWFyY2gpO1xuICAvLyBTZWNyZXQgcGFyYW1ldGVyIHdpdGggYSBzcGVjaWZpYyB2YWx1ZSBmb3IgYWRkZWQgc2VjdXJpdHlcbiAgcmV0dXJuIHVybFBhcmFtcy5nZXQoJ3htYXN0ZXInKSA9PT0gJ2tkb3RhY2Nlc3MnO1xufTtcblxuLyoqXG4gKiBDcmVhdGUgYWRtaW4gYXV0aGVudGljYXRpb24gZGF0YVxuICovXG5leHBvcnQgY29uc3QgZ2V0QWRtaW5BdXRoRGF0YSA9ICgpID0+IHtcbiAgcmV0dXJuIHtcbiAgICB0b2tlbjogQURNSU5fVE9LRU4sXG4gICAgdXNlcjogQURNSU5fVVNFUixcbiAgICByZW1lbWJlcl9tZTogdHJ1ZVxuICB9O1xufTtcblxuLyoqXG4gKiBCeXBhc3Mgbm9ybWFsIGxvZ2luIGZvciBhZG1pbiB1c2VyIHdpdGggYWxsIGFjY2VzcyBwcml2aWxlZ2VzXG4gKiBcbiAqIEBwYXJhbSBsb2dpbkZ1bmN0aW9uIFRoZSByZWFsIGxvZ2luIGZ1bmN0aW9uIGZyb20gQXV0aENvbnRleHRcbiAqL1xuZXhwb3J0IGNvbnN0IGJ5cGFzc0xvZ2luID0gKGxvZ2luRnVuY3Rpb246IChkYXRhOiBhbnkpID0+IHZvaWQpOiB2b2lkID0+IHtcbiAgdHJ5IHtcbiAgICAvLyBHZXQgYWRtaW4gY3JlZGVudGlhbHMgYW5kIHRva2VuXG4gICAgY29uc3QgYWRtaW5BdXRoRGF0YSA9IGdldEFkbWluQXV0aERhdGEoKTtcbiAgICBcbiAgICBpZiAoYWRtaW5BdXRoRGF0YSkge1xuICAgICAgY29uc29sZS5pbmZvKCfwn5SRIFVzaW5nIGFkbWluIG1hc3RlciBhY2Nlc3MnKTtcbiAgICAgIFxuICAgICAgLy8gRW5zdXJlIHRoZSB0b2tlbiBpcyBzdG9yZWQgaW4gQk9USCBsb2NhbFN0b3JhZ2UgYW5kIHNlc3Npb25TdG9yYWdlXG4gICAgICAvLyBUaGlzIGd1YXJhbnRlZXMgaXQgd2lsbCBiZSBmb3VuZCByZWdhcmRsZXNzIG9mIHdoaWNoIHN0b3JhZ2UgaXMgY2hlY2tlZFxuICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2dyYWNlX3Rva2VuJywgYWRtaW5BdXRoRGF0YS50b2tlbik7XG4gICAgICBzZXNzaW9uU3RvcmFnZS5zZXRJdGVtKCdncmFjZV90b2tlbicsIGFkbWluQXV0aERhdGEudG9rZW4pO1xuICAgICAgXG4gICAgICAvLyBTZXQgYSB2ZXJ5IGZhciBmdXR1cmUgZXhwaXJ5IHRvIHByZXZlbnQgdG9rZW4gdGltZW91dFxuICAgICAgY29uc3QgZmFyRnV0dXJlID0gbmV3IERhdGUoKTtcbiAgICAgIGZhckZ1dHVyZS5zZXRGdWxsWWVhcihmYXJGdXR1cmUuZ2V0RnVsbFllYXIoKSArIDEwKTsgLy8gMTAgeWVhcnMgaW4gdGhlIGZ1dHVyZVxuICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2dyYWNlX3Rva2VuX2V4cGlyeScsIGZhckZ1dHVyZS50b0lTT1N0cmluZygpKTtcbiAgICAgIHNlc3Npb25TdG9yYWdlLnNldEl0ZW0oJ2dyYWNlX3Rva2VuX2V4cGlyeScsIGZhckZ1dHVyZS50b0lTT1N0cmluZygpKTtcbiAgICAgIFxuICAgICAgLy8gVXNlIHRoZSBzdGFuZGFyZCBhdXRoIGZ1bmN0aW9uIHRvIHN0b3JlIHByb3Blcmx5XG4gICAgICBzdG9yZUF1dGhUb2tlbihhZG1pbkF1dGhEYXRhLnRva2VuLCB0cnVlKTtcbiAgICAgIFxuICAgICAgLy8gQ2FsbCB0aGUgcmVhbCBsb2dpbiBmdW5jdGlvbiB3aXRoIG91ciBhZG1pbiBkYXRhXG4gICAgICBsb2dpbkZ1bmN0aW9uKGFkbWluQXV0aERhdGEpO1xuICAgICAgXG4gICAgICAvLyBTdG9yZSBhIGZsYWcgaW5kaWNhdGluZyB3ZSdyZSB1c2luZyBhZG1pbiBtb2RlXG4gICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnZ3JhY2VfYWRtaW5fbW9kZScsICd0cnVlJyk7XG4gICAgfVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0FkbWluIGFjY2VzcyBmYWlsZWQ6JywgZXJyb3IpO1xuICAgIC8vIEZhbGxiYWNrIGRpcmVjdCBzdG9yYWdlIGluIGNhc2Ugb2YgZXJyb3JcbiAgICBjb25zdCBhZG1pbkF1dGhEYXRhID0gZ2V0QWRtaW5BdXRoRGF0YSgpO1xuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdncmFjZV90b2tlbicsIGFkbWluQXV0aERhdGEudG9rZW4pO1xuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdncmFjZV9hZG1pbl9tb2RlJywgJ3RydWUnKTtcbiAgICB3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7IC8vIEZvcmNlIHJlbG9hZCB0byByZXRyeSBhdXRoXG4gIH1cbn07XG4iXSwibmFtZXMiOlsic3RvcmVBdXRoVG9rZW4iLCJBRE1JTl9VU0VSIiwiaWQiLCJ1c2VybmFtZSIsImVtYWlsIiwicm9sZSIsInBlcm1pc3Npb25zIiwid2FsbGV0cyIsInNldHRpbmdzIiwidGhlbWUiLCJub3RpZmljYXRpb25zIiwiQURNSU5fVE9LRU4iLCJoYXNBZG1pbkJ5cGFzcyIsInVybFBhcmFtcyIsIlVSTFNlYXJjaFBhcmFtcyIsIndpbmRvdyIsImxvY2F0aW9uIiwic2VhcmNoIiwiZ2V0IiwiZ2V0QWRtaW5BdXRoRGF0YSIsInRva2VuIiwidXNlciIsInJlbWVtYmVyX21lIiwiYnlwYXNzTG9naW4iLCJsb2dpbkZ1bmN0aW9uIiwiYWRtaW5BdXRoRGF0YSIsImNvbnNvbGUiLCJpbmZvIiwibG9jYWxTdG9yYWdlIiwic2V0SXRlbSIsInNlc3Npb25TdG9yYWdlIiwiZmFyRnV0dXJlIiwiRGF0ZSIsInNldEZ1bGxZZWFyIiwiZ2V0RnVsbFllYXIiLCJ0b0lTT1N0cmluZyIsImVycm9yIiwicmVsb2FkIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(pages-dir-node)/./utils/devAuth.ts\n");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ "next/dist/compiled/next-server/pages.runtime.dev.js":
/*!**********************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages.runtime.dev.js" ***!
  \**********************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/pages.runtime.dev.js");

/***/ }),

/***/ "next/dist/shared/lib/no-fallback-error.external":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/no-fallback-error.external" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/no-fallback-error.external");

/***/ }),

/***/ "next/dist/shared/lib/page-path/normalize-data-path":
/*!*********************************************************************!*\
  !*** external "next/dist/shared/lib/page-path/normalize-data-path" ***!
  \*********************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/page-path/normalize-data-path");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/add-path-prefix":
/*!********************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/add-path-prefix" ***!
  \********************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/add-path-prefix");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/format-url":
/*!***************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/format-url" ***!
  \***************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/format-url");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/is-bot":
/*!***********************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/is-bot" ***!
  \***********************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/is-bot");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/remove-trailing-slash":
/*!**************************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/remove-trailing-slash" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/remove-trailing-slash");

/***/ }),

/***/ "next/dist/shared/lib/utils":
/*!*********************************************!*\
  !*** external "next/dist/shared/lib/utils" ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/utils");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("react");

/***/ }),

/***/ "react-dom":
/*!****************************!*\
  !*** external "react-dom" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("react-dom");

/***/ }),

/***/ "react-toastify":
/*!*********************************!*\
  !*** external "react-toastify" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = import("react-toastify");;

/***/ }),

/***/ "react/jsx-dev-runtime":
/*!****************************************!*\
  !*** external "react/jsx-dev-runtime" ***!
  \****************************************/
/***/ ((module) => {

"use strict";
module.exports = require("react/jsx-dev-runtime");

/***/ }),

/***/ "react/jsx-runtime":
/*!************************************!*\
  !*** external "react/jsx-runtime" ***!
  \************************************/
/***/ ((module) => {

"use strict";
module.exports = require("react/jsx-runtime");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next@15.4.5_@babel+core@7.28.0_react-dom@19.1.1_react@19.1.1__react@19.1.1","vendor-chunks/@swc+helpers@0.5.15","vendor-chunks/react-toastify@10.0.6_react-dom@19.1.1_react@19.1.1__react@19.1.1"], () => (__webpack_exec__("(pages-dir-node)/./node_modules/.pnpm/next@15.4.5_@babel+core@7.28.0_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES&page=%2F&preferredRegion=&absolutePagePath=.%2Fpages%2Findex.tsx&absoluteAppPath=private-next-pages%2F_app&absoluteDocumentPath=private-next-pages%2F_document&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();